

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Aug 14 07:33:18 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F44K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59  0000                     
    60                           ; Version 2.36
    61                           ; Generated 28/01/2022 GMT
    62                           ; 
    63                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F44K22 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     
    96                           	psect	idataBANK1
    97  0024D0                     __pidataBANK1:
    98                           	callstack 0
    99                           
   100                           ;initializer for _OutBuffer
   101  0024D0  59                 	db	89
   102  0024D1  6F                 	db	111
   103  0024D2  75                 	db	117
   104  0024D3  20                 	db	32
   105  0024D4  61                 	db	97
   106  0024D5  72                 	db	114
   107  0024D6  65                 	db	101
   108  0024D7  20                 	db	32
   109  0024D8  6D                 	db	109
   110  0024D9  79                 	db	121
   111  0024DA  20                 	db	32
   112  0024DB  6F                 	db	111
   113  0024DC  6E                 	db	110
   114  0024DD  6C                 	db	108
   115  0024DE  79                 	db	121
   116  0024DF  20                 	db	32
   117  0024E0  64                 	db	100
   118  0024E1  69                 	db	105
   119  0024E2  64                 	db	100
   120  0024E3  64                 	db	100
   121  0024E4  79                 	db	121
   122  0024E5  20                 	db	32
   123  0024E6  77                 	db	119
   124  0024E7  61                 	db	97
   125  0024E8  68                 	db	104
   126  0024E9  20                 	db	32
   127  0024EA  64                 	db	100
   128  0024EB  69                 	db	105
   129  0024EC  64                 	db	100
   130  0024ED  64                 	db	100
   131  0024EE  79                 	db	121
   132  0024EF  2C                 	db	44
   133  0024F0  20                 	db	32
   134  0024F1  79                 	db	121
   135  0024F2  6F                 	db	111
   136  0024F3  75                 	db	117
   137  0024F4  20                 	db	32
   138  0024F5  75                 	db	117
   139  0024F6  6E                 	db	110
   140  0024F7  64                 	db	100
   141  0024F8  65                 	db	101
   142  0024F9  72                 	db	114
   143  0024FA  73                 	db	115
   144  0024FB  74                 	db	116
   145  0024FC  61                 	db	97
   146  0024FD  6E                 	db	110
   147  0024FE  64                 	db	100
   148  0024FF  20                 	db	32
   149  002500  6D                 	db	109
   150  002501  65                 	db	101
   151  002502  2C                 	db	44
   152  002503  20                 	db	32
   153  002504  64                 	db	100
   154  002505  6F                 	db	111
   155  002506  6E                 	db	110
   156  002507  27                 	db	39
   157  002508  74                 	db	116
   158  002509  20                 	db	32
   159  00250A  79                 	db	121
   160  00250B  6F                 	db	111
   161  00250C  75                 	db	117
   162  00250D  3F                 	db	63
   163  00250E  00                 	db	0
   164  00250F  00                 	db	0
   165                           
   166                           ;initializer for _arrThermistorResistance
   167  002510  E000               	dw	57344
   168  002512  46FE               	dw	18174
   169  002514  4A00               	dw	18944
   170  002516  46C6               	dw	18118
   171  002518  7200               	dw	29184
   172  00251A  469B               	dw	18075
   173  00251C  7C00               	dw	31744
   174  00251E  4675               	dw	18037
   175  002520  3400               	dw	13312
   176  002522  4643               	dw	17987
   177  002524  4000               	dw	16384
   178  002526  461C               	dw	17948
   179  002528  C000               	dw	49152
   180  00252A  45FB               	dw	17915
   181  00252C  0D9A               	dw	3482
   182  00252E  45CC               	dw	17868
   183  002530  5F33               	dw	24371
   184  002532  45A6               	dw	17830
   185  002534  6A66               	dw	27238
   186  002536  4588               	dw	17800
   187  002538  EB33               	dw	60211
   188  00253A  4560               	dw	17760
   189                           
   190                           ;initializer for _I2C_READdata
   191  00253C  53                 	db	83
   192  00253D  54                 	db	84
   193  00253E  41                 	db	65
   194  00253F  52                 	db	82
   195  002540  54                 	db	84
   196  002541  20                 	db	32
   197  002542  52                 	db	82
   198  002543  45                 	db	69
   199  002544  41                 	db	65
   200  002545  44                 	db	68
   201  002546  00                 	db	0
   202  002547  00                 	db	0
   203  002548  00                 	db	0
   204  002549  00                 	db	0
   205  00254A  00                 	db	0
   206  00254B  00                 	db	0
   207  00254C  00                 	db	0
   208  00254D  00                 	db	0
   209  00254E  00                 	db	0
   210  00254F  00                 	db	0
   211  002550  00                 	db	0
   212  002551  00                 	db	0
   213  002552  00                 	db	0
   214  002553  00                 	db	0
   215  002554  00                 	db	0
   216  002555  00                 	db	0
   217  002556  00                 	db	0
   218  002557  00                 	db	0
   219  002558  00                 	db	0
   220  002559  00                 	db	0
   221  00255A  00                 	db	0
   222  00255B  00                 	db	0
   223                           
   224                           	psect	mediumconst
   225  003E40                     __pmediumconst:
   226                           	callstack 0
   227  003E40  00                 	db	0
   228  003E41                     __powers_:
   229                           	callstack 0
   230  003E41  0000               	dw	0
   231  003E43  3F80               	dw	16256
   232  003E45  0000               	dw	0
   233  003E47  4120               	dw	16672
   234  003E49  0000               	dw	0
   235  003E4B  42C8               	dw	17096
   236  003E4D  0000               	dw	0
   237  003E4F  447A               	dw	17530
   238  003E51  4000               	dw	16384
   239  003E53  461C               	dw	17948
   240  003E55  5000               	dw	20480
   241  003E57  47C3               	dw	18371
   242  003E59  2400               	dw	9216
   243  003E5B  4974               	dw	18804
   244  003E5D  9680               	dw	38528
   245  003E5F  4B18               	dw	19224
   246  003E61  BC20               	dw	48160
   247  003E63  4CBE               	dw	19646
   248  003E65  6B28               	dw	27432
   249  003E67  4E6E               	dw	20078
   250  003E69  02F9               	dw	761
   251  003E6B  5015               	dw	20501
   252  003E6D  78EC               	dw	30956
   253  003E6F  60AD               	dw	24749
   254  003E71  F2CA               	dw	62154
   255  003E73  7149               	dw	29001
   256  003E75                     __end_of__powers_:
   257                           	callstack 0
   258  003E75                     __npowers_:
   259                           	callstack 0
   260  003E75  0000               	dw	0
   261  003E77  3F80               	dw	16256
   262  003E79  CCCD               	dw	52429
   263  003E7B  3DCC               	dw	15820
   264  003E7D  D70A               	dw	55050
   265  003E7F  3C23               	dw	15395
   266  003E81  126F               	dw	4719
   267  003E83  3A83               	dw	14979
   268  003E85  B717               	dw	46871
   269  003E87  38D1               	dw	14545
   270  003E89  C5AC               	dw	50604
   271  003E8B  3727               	dw	14119
   272  003E8D  37BD               	dw	14269
   273  003E8F  3586               	dw	13702
   274  003E91  BF95               	dw	49045
   275  003E93  33D6               	dw	13270
   276  003E95  CC77               	dw	52343
   277  003E97  322B               	dw	12843
   278  003E99  705F               	dw	28767
   279  003E9B  3089               	dw	12425
   280  003E9D  E6FF               	dw	59135
   281  003E9F  2EDB               	dw	11995
   282  003EA1  E508               	dw	58632
   283  003EA3  1E3C               	dw	7740
   284  003EA5  4260               	dw	16992
   285  003EA7  0DA2               	dw	3490
   286  003EA9                     __end_of__npowers_:
   287                           	callstack 0
   288  003EA9                     _dpowers:
   289                           	callstack 0
   290  003EA9  0001               	dw	1
   291  003EAB  0000               	dw	0
   292  003EAD  000A               	dw	10
   293  003EAF  0000               	dw	0
   294  003EB1  0064               	dw	100
   295  003EB3  0000               	dw	0
   296  003EB5  03E8               	dw	1000
   297  003EB7  0000               	dw	0
   298  003EB9  2710               	dw	10000
   299  003EBB  0000               	dw	0
   300  003EBD  86A0               	dw	34464
   301  003EBF  0001               	dw	1
   302  003EC1  4240               	dw	16960
   303  003EC3  000F               	dw	15
   304  003EC5  9680               	dw	38528
   305  003EC7  0098               	dw	152
   306  003EC9  E100               	dw	57600
   307  003ECB  05F5               	dw	1525
   308  003ECD  CA00               	dw	51712
   309  003ECF  3B9A               	dw	15258
   310  003ED1                     __end_of_dpowers:
   311                           	callstack 0
   312  0000                     _ADRES	set	4035
   313  0000                     _ADCON1bits	set	4033
   314  0000                     _EECON2	set	4007
   315  0000                     _EEDATA	set	4008
   316  0000                     _RCREG1	set	4014
   317  0000                     _SPBRG1	set	4015
   318  0000                     _TXSTA1	set	4012
   319  0000                     _BAUDCON1	set	4024
   320  0000                     _SSP1STAT	set	4039
   321  0000                     _SSP1ADD	set	4040
   322  0000                     _SSP1CON3	set	4043
   323  0000                     _RC1REG	set	4014
   324  0000                     _PIE3bits	set	4003
   325  0000                     _PIE1bits	set	3997
   326  0000                     _INTCON	set	4082
   327  0000                     _RCSTA1bits	set	4011
   328  0000                     _TXSTA1bits	set	4012
   329  0000                     _BAUDCON1bits	set	4024
   330  0000                     _PIR1bits	set	3998
   331  0000                     _SSP1CON2bits	set	4037
   332  0000                     _SSP1CON1bits	set	4038
   333  0000                     _TMR0IE	set	32661
   334  0000                     _TMR4IE	set	31720
   335  0000                     _TMR3IE	set	32001
   336  0000                     _TMR2IE	set	31977
   337  0000                     _TMR1IE	set	31976
   338  0000                     _TMR2ON	set	32210
   339  0000                     _TMR2IF	set	31985
   340  0000                     _T2OUTPS3	set	32214
   341  0000                     _T2OUTPS2	set	32213
   342  0000                     _T2OUTPS1	set	32212
   343  0000                     _T2OUTPS0	set	32211
   344  0000                     _T2CKPS1	set	32209
   345  0000                     _GIE	set	32663
   346  0000                     _CTMUICON	set	3907
   347  0000                     _CTMUCONL	set	3908
   348  0000                     _CTMUCONH	set	3909
   349  0000                     _PIE4	set	3962
   350  0000                     _TRISA	set	3986
   351  0000                     _ANSELE	set	3900
   352  0000                     _ANSELD	set	3899
   353  0000                     _ANSELC	set	3898
   354  0000                     _ANSELB	set	3897
   355  0000                     _ANSELA	set	3896
   356  0000                     _SSP1CON2	set	4037
   357  0000                     _SSP1CON1	set	4038
   358  0000                     _SSP1IF	set	31987
   359  0000                     _INTCONbits	set	4082
   360  0000                     _SSP1BUF	set	4041
   361  0000                     _PIE2	set	4000
   362  0000                     _RCSTA1	set	4011
   363  0000                     _TXREG1	set	4013
   364  0000                     _PIE1	set	3997
   365  0000                     _TRISE	set	3990
   366  0000                     _TRISD	set	3989
   367  0000                     _TRISC	set	3988
   368  0000                     _TRISB	set	3987
   369  0000                     _T2CKPS0	set	32208
   370  0000                     _ADCON2bits	set	4032
   371  0000                     _ADCON0bits	set	4034
   372  0000                     _PR2	set	4027
   373  0000                     _PIE3	set	4003
   374  0000                     _EECON1bits	set	4006
   375  0000                     _EEADR	set	4009
   376  0000                     _PIE5	set	3965
   377  0000                     _PORTBbits	set	3969
   378  0000                     _LATDbits	set	3980
   379  003ED1  0D                 	db	13
   380  003ED2  43                 	db	67	;'C'
   381  003ED3  61                 	db	97	;'a'
   382  003ED4  6C                 	db	108	;'l'
   383  003ED5  20                 	db	32
   384  003ED6  41                 	db	65	;'A'
   385  003ED7  44                 	db	68	;'D'
   386  003ED8  20                 	db	32
   387  003ED9  61                 	db	97	;'a'
   388  003EDA  76                 	db	118	;'v'
   389  003EDB  65                 	db	101	;'e'
   390  003EDC  72                 	db	114	;'r'
   391  003EDD  61                 	db	97	;'a'
   392  003EDE  67                 	db	103	;'g'
   393  003EDF  65                 	db	101	;'e'
   394  003EE0  3A                 	db	58	;':'
   395  003EE1  20                 	db	32
   396  003EE2  25                 	db	37
   397  003EE3  30                 	db	48	;'0'
   398  003EE4  2E                 	db	46
   399  003EE5  30                 	db	48	;'0'
   400  003EE6  66                 	db	102	;'f'
   401  003EE7  20                 	db	32
   402  003EE8  63                 	db	99	;'c'
   403  003EE9  6F                 	db	111	;'o'
   404  003EEA  75                 	db	117	;'u'
   405  003EEB  6E                 	db	110	;'n'
   406  003EEC  74                 	db	116	;'t'
   407  003EED  73                 	db	115	;'s'
   408  003EEE  2C                 	db	44
   409  003EEF  20                 	db	32
   410  003EF0  43                 	db	67	;'C'
   411  003EF1  61                 	db	97	;'a'
   412  003EF2  6C                 	db	108	;'l'
   413  003EF3  20                 	db	32
   414  003EF4  56                 	db	86	;'V'
   415  003EF5  6F                 	db	111	;'o'
   416  003EF6  6C                 	db	108	;'l'
   417  003EF7  74                 	db	116	;'t'
   418  003EF8  61                 	db	97	;'a'
   419  003EF9  67                 	db	103	;'g'
   420  003EFA  65                 	db	101	;'e'
   421  003EFB  3A                 	db	58	;':'
   422  003EFC  20                 	db	32
   423  003EFD  25                 	db	37
   424  003EFE  30                 	db	48	;'0'
   425  003EFF  2E                 	db	46
   426  003F00  33                 	db	51	;'3'
   427  003F01  66                 	db	102	;'f'
   428  003F02  20                 	db	32
   429  003F03  76                 	db	118	;'v'
   430  003F04  6F                 	db	111	;'o'
   431  003F05  6C                 	db	108	;'l'
   432  003F06  74                 	db	116	;'t'
   433  003F07  73                 	db	115	;'s'
   434  003F08  2C                 	db	44
   435  003F09  20                 	db	32
   436  003F0A  43                 	db	67	;'C'
   437  003F0B  61                 	db	97	;'a'
   438  003F0C  6C                 	db	108	;'l'
   439  003F0D  20                 	db	32
   440  003F0E  63                 	db	99	;'c'
   441  003F0F  75                 	db	117	;'u'
   442  003F10  72                 	db	114	;'r'
   443  003F11  72                 	db	114	;'r'
   444  003F12  65                 	db	101	;'e'
   445  003F13  6E                 	db	110	;'n'
   446  003F14  74                 	db	116	;'t'
   447  003F15  3A                 	db	58	;':'
   448  003F16  20                 	db	32
   449  003F17  25                 	db	37
   450  003F18  30                 	db	48	;'0'
   451  003F19  2E                 	db	46
   452  003F1A  33                 	db	51	;'3'
   453  003F1B  66                 	db	102	;'f'
   454  003F1C  20                 	db	32
   455  003F1D  75                 	db	117	;'u'
   456  003F1E  41                 	db	65	;'A'
   457  003F1F  00                 	db	0
   458  003F20  0D                 	db	13
   459  003F21  43                 	db	67	;'C'
   460  003F22  61                 	db	97	;'a'
   461  003F23  70                 	db	112	;'p'
   462  003F24  20                 	db	32
   463  003F25  41                 	db	65	;'A'
   464  003F26  44                 	db	68	;'D'
   465  003F27  20                 	db	32
   466  003F28  61                 	db	97	;'a'
   467  003F29  76                 	db	118	;'v'
   468  003F2A  65                 	db	101	;'e'
   469  003F2B  72                 	db	114	;'r'
   470  003F2C  61                 	db	97	;'a'
   471  003F2D  67                 	db	103	;'g'
   472  003F2E  65                 	db	101	;'e'
   473  003F2F  3A                 	db	58	;':'
   474  003F30  20                 	db	32
   475  003F31  25                 	db	37
   476  003F32  30                 	db	48	;'0'
   477  003F33  2E                 	db	46
   478  003F34  30                 	db	48	;'0'
   479  003F35  66                 	db	102	;'f'
   480  003F36  20                 	db	32
   481  003F37  63                 	db	99	;'c'
   482  003F38  6F                 	db	111	;'o'
   483  003F39  75                 	db	117	;'u'
   484  003F3A  6E                 	db	110	;'n'
   485  003F3B  74                 	db	116	;'t'
   486  003F3C  73                 	db	115	;'s'
   487  003F3D  2C                 	db	44
   488  003F3E  20                 	db	32
   489  003F3F  43                 	db	67	;'C'
   490  003F40  61                 	db	97	;'a'
   491  003F41  70                 	db	112	;'p'
   492  003F42  20                 	db	32
   493  003F43  56                 	db	86	;'V'
   494  003F44  6F                 	db	111	;'o'
   495  003F45  6C                 	db	108	;'l'
   496  003F46  74                 	db	116	;'t'
   497  003F47  61                 	db	97	;'a'
   498  003F48  67                 	db	103	;'g'
   499  003F49  65                 	db	101	;'e'
   500  003F4A  3A                 	db	58	;':'
   501  003F4B  20                 	db	32
   502  003F4C  25                 	db	37
   503  003F4D  30                 	db	48	;'0'
   504  003F4E  2E                 	db	46
   505  003F4F  31                 	db	49	;'1'
   506  003F50  66                 	db	102	;'f'
   507  003F51  20                 	db	32
   508  003F52  76                 	db	118	;'v'
   509  003F53  6F                 	db	111	;'o'
   510  003F54  6C                 	db	108	;'l'
   511  003F55  74                 	db	116	;'t'
   512  003F56  73                 	db	115	;'s'
   513  003F57  2C                 	db	44
   514  003F58  20                 	db	32
   515  003F59  43                 	db	67	;'C'
   516  003F5A  61                 	db	97	;'a'
   517  003F5B  70                 	db	112	;'p'
   518  003F5C  61                 	db	97	;'a'
   519  003F5D  63                 	db	99	;'c'
   520  003F5E  69                 	db	105	;'i'
   521  003F5F  74                 	db	116	;'t'
   522  003F60  61                 	db	97	;'a'
   523  003F61  6E                 	db	110	;'n'
   524  003F62  63                 	db	99	;'c'
   525  003F63  65                 	db	101	;'e'
   526  003F64  3A                 	db	58	;':'
   527  003F65  20                 	db	32
   528  003F66  25                 	db	37
   529  003F67  30                 	db	48	;'0'
   530  003F68  2E                 	db	46
   531  003F69  31                 	db	49	;'1'
   532  003F6A  66                 	db	102	;'f'
   533  003F6B  20                 	db	32
   534  003F6C  70                 	db	112	;'p'
   535  003F6D  46                 	db	70	;'F'
   536  003F6E  00                 	db	0
   537  003F6F                     STR_2:
   538  003F6F  0D                 	db	13
   539  003F70  0D                 	db	13
   540  003F71  53                 	db	83	;'S'
   541  003F72  54                 	db	84	;'T'
   542  003F73  41                 	db	65	;'A'
   543  003F74  52                 	db	82	;'R'
   544  003F75  54                 	db	84	;'T'
   545  003F76  49                 	db	73	;'I'
   546  003F77  4E                 	db	78	;'N'
   547  003F78  47                 	db	71	;'G'
   548  003F79  20                 	db	32
   549  003F7A  49                 	db	73	;'I'
   550  003F7B  32                 	db	50	;'2'
   551  003F7C  43                 	db	67	;'C'
   552  003F7D  20                 	db	32
   553  003F7E  4D                 	db	77	;'M'
   554  003F7F  41                 	db	65	;'A'
   555  003F80  53                 	db	83	;'S'
   556  003F81  54                 	db	84	;'T'
   557  003F82  45                 	db	69	;'E'
   558  003F83  52                 	db	82	;'R'
   559  003F84  20                 	db	32
   560  003F85  20                 	db	32
   561  003F86  53                 	db	83	;'S'
   562  003F87  53                 	db	83	;'S'
   563  003F88  50                 	db	80	;'P'
   564  003F89  78                 	db	120	;'x'
   565  003F8A  78                 	db	120	;'x'
   566  003F8B  41                 	db	65	;'A'
   567  003F8C  44                 	db	68	;'D'
   568  003F8D  44                 	db	68	;'D'
   569  003F8E  20                 	db	32
   570  003F8F  3D                 	db	61	;'='
   571  003F90  20                 	db	32
   572  003F91  32                 	db	50	;'2'
   573  003F92  37                 	db	55	;'7'
   574  003F93  3B                 	db	59	;';'
   575  003F94  2E                 	db	46
   576  003F95  2E                 	db	46
   577  003F96  2E                 	db	46
   578  003F97  20                 	db	32
   579  003F98  23                 	db	35
   580  003F99  30                 	db	48	;'0'
   581  003F9A  00                 	db	0
   582  003F9B                     STR_4:
   583  003F9B  0D                 	db	13
   584  003F9C  23                 	db	35
   585  003F9D  25                 	db	37
   586  003F9E  64                 	db	100	;'d'
   587  003F9F  3A                 	db	58	;':'
   588  003FA0  20                 	db	32
   589  003FA1  53                 	db	83	;'S'
   590  003FA2  45                 	db	69	;'E'
   591  003FA3  4E                 	db	78	;'N'
   592  003FA4  44                 	db	68	;'D'
   593  003FA5  2C                 	db	44
   594  003FA6  20                 	db	32
   595  003FA7  45                 	db	69	;'E'
   596  003FA8  52                 	db	82	;'R'
   597  003FA9  52                 	db	82	;'R'
   598  003FAA  4F                 	db	79	;'O'
   599  003FAB  52                 	db	82	;'R'
   600  003FAC  53                 	db	83	;'S'
   601  003FAD  3A                 	db	58	;':'
   602  003FAE  20                 	db	32
   603  003FAF  25                 	db	37
   604  003FB0  64                 	db	100	;'d'
   605  003FB1  00                 	db	0
   606  003FB2                     STR_5:
   607  003FB2  0D                 	db	13
   608  003FB3  52                 	db	82	;'R'
   609  003FB4  45                 	db	69	;'E'
   610  003FB5  43                 	db	67	;'C'
   611  003FB6  56                 	db	86	;'V'
   612  003FB7  3A                 	db	58	;':'
   613  003FB8  20                 	db	32
   614  003FB9  25                 	db	37
   615  003FBA  73                 	db	115	;'s'
   616  003FBB  2C                 	db	44
   617  003FBC  20                 	db	32
   618  003FBD  45                 	db	69	;'E'
   619  003FBE  52                 	db	82	;'R'
   620  003FBF  52                 	db	82	;'R'
   621  003FC0  4F                 	db	79	;'O'
   622  003FC1  52                 	db	82	;'R'
   623  003FC2  53                 	db	83	;'S'
   624  003FC3  3A                 	db	58	;':'
   625  003FC4  20                 	db	32
   626  003FC5  25                 	db	37
   627  003FC6  64                 	db	100	;'d'
   628  003FC7  00                 	db	0
   629  003FC8                     STR_1:
   630  003FC8  0D                 	db	13
   631  003FC9  53                 	db	83	;'S'
   632  003FCA  4C                 	db	76	;'L'
   633  003FCB  41                 	db	65	;'A'
   634  003FCC  56                 	db	86	;'V'
   635  003FCD  45                 	db	69	;'E'
   636  003FCE  20                 	db	32
   637  003FCF  57                 	db	87	;'W'
   638  003FD0  52                 	db	82	;'R'
   639  003FD1  49                 	db	73	;'I'
   640  003FD2  54                 	db	84	;'T'
   641  003FD3  45                 	db	69	;'E'
   642  003FD4  20                 	db	32
   643  003FD5  4E                 	db	78	;'N'
   644  003FD6  4F                 	db	79	;'O'
   645  003FD7  20                 	db	32
   646  003FD8  41                 	db	65	;'A'
   647  003FD9  43                 	db	67	;'C'
   648  003FDA  4B                 	db	75	;'K'
   649  003FDB  00                 	db	0
   650  003FDC                     STR_3:
   651  003FDC  23                 	db	35
   652  003FDD  25                 	db	37
   653  003FDE  64                 	db	100	;'d'
   654  003FDF  3A                 	db	58	;':'
   655  003FE0  20                 	db	32
   656  003FE1  30                 	db	48	;'0'
   657  003FE2  31                 	db	49	;'1'
   658  003FE3  32                 	db	50	;'2'
   659  003FE4  33                 	db	51	;'3'
   660  003FE5  34                 	db	52	;'4'
   661  003FE6  35                 	db	53	;'5'
   662  003FE7  36                 	db	54	;'6'
   663  003FE8  37                 	db	55	;'7'
   664  003FE9  38                 	db	56	;'8'
   665  003FEA  39                 	db	57	;'9'
   666  003FEB  30                 	db	48	;'0'
   667  003FEC  00                 	db	0
   668  003FED                     STR_6:
   669  003FED  0D                 	db	13
   670  003FEE  52                 	db	82	;'R'
   671  003FEF  45                 	db	69	;'E'
   672  003FF0  43                 	db	67	;'C'
   673  003FF1  56                 	db	86	;'V'
   674  003FF2  3A                 	db	58	;':'
   675  003FF3  20                 	db	32
   676  003FF4  25                 	db	37
   677  003FF5  73                 	db	115	;'s'
   678  003FF6  00                 	db	0
   679  003FF7                     STR_9:
   680  003FF7  28                 	db	40
   681  003FF8  6E                 	db	110	;'n'
   682  003FF9  75                 	db	117	;'u'
   683  003FFA  6C                 	db	108	;'l'
   684  003FFB  6C                 	db	108	;'l'
   685  003FFC  29                 	db	41
   686  003FFD  00                 	db	0
   687  003FFE  00                 	db	0	; dummy byte at the end
   688  0000                     
   689                           ; #config settings
   690                           
   691                           	psect	cinit
   692  002836                     __pcinit:
   693                           	callstack 0
   694  002836                     start_initialization:
   695                           	callstack 0
   696  002836                     __initialization:
   697                           	callstack 0
   698                           
   699                           ; Initialize objects allocated to BANK1 (140 bytes)
   700                           ; load TBLPTR registers with __pidataBANK1
   701  002836  0ED0               	movlw	low __pidataBANK1
   702  002838  6EF6               	movwf	tblptrl,c
   703  00283A  0E24               	movlw	high __pidataBANK1
   704  00283C  6EF7               	movwf	tblptrh,c
   705  00283E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   706  002840  6EF8               	movwf	tblptru,c
   707  002842  EE01  F000         	lfsr	0,__pdataBANK1
   708  002846  EE10 F08C          	lfsr	1,140
   709  00284A                     copy_data0:
   710  00284A  0009               	tblrd		*+
   711  00284C  CFF5 FFEE          	movff	tablat,postinc0
   712  002850  50E5               	movf	postdec1,w,c
   713  002852  50E1               	movf	fsr1l,w,c
   714  002854  E1FA               	bnz	copy_data0
   715                           
   716                           ; Clear objects allocated to BANK2 (256 bytes)
   717  002856  EE02  F000         	lfsr	0,__pbssBANK2
   718  00285A  EE11 F000          	lfsr	1,256
   719  00285E                     clear_0:
   720  00285E  6AEE               	clrf	postinc0,c
   721  002860  50E5               	movf	postdec1,w,c
   722  002862  50E1               	movf	fsr1l,w,c
   723  002864  E1FC               	bnz	clear_0
   724  002866  50E2               	movf	fsr1h,w,c
   725  002868  E1FA               	bnz	clear_0
   726                           
   727                           ; Clear objects allocated to BANK1 (96 bytes)
   728  00286A  EE01  F08C         	lfsr	0,__pbssBANK1
   729  00286E  0E60               	movlw	96
   730  002870                     clear_1:
   731  002870  6AEE               	clrf	postinc0,c
   732  002872  06E8               	decf	wreg,f,c
   733  002874  E1FD               	bnz	clear_1
   734                           
   735                           ; Clear objects allocated to BANK0 (39 bytes)
   736  002876  EE00  F0D9         	lfsr	0,__pbssBANK0
   737  00287A  0E27               	movlw	39
   738  00287C                     clear_2:
   739  00287C  6AEE               	clrf	postinc0,c
   740  00287E  06E8               	decf	wreg,f,c
   741  002880  E1FD               	bnz	clear_2
   742                           
   743                           ; Clear objects allocated to COMRAM (3 bytes)
   744  002882  6A5A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   745  002884  6A59               	clrf	(__pbssCOMRAM+1)& (0+255),c
   746  002886  6A58               	clrf	__pbssCOMRAM& (0+255),c
   747  002888                     end_of_initialization:
   748                           	callstack 0
   749  002888                     __end_of__initialization:
   750                           	callstack 0
   751  002888  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   752  00288A  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   753  00288C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   754  00288E  6EF8               	movwf	tblptru,c
   755  002890  0100               	movlb	0
   756  002892  EFD0  F00F         	goto	_main	;jump to C main() function
   757                           
   758                           	psect	bssCOMRAM
   759  000058                     __pbssCOMRAM:
   760                           	callstack 0
   761  000058                     isr@RxIndex:
   762                           	callstack 0
   763  000058                     	ds	2
   764  00005A                     _RxBufferFull:
   765                           	callstack 0
   766  00005A                     	ds	1
   767                           
   768                           	psect	bssBANK0
   769  0000D9                     __pbssBANK0:
   770                           	callstack 0
   771  0000D9                     _RxBuffer:
   772                           	callstack 0
   773  0000D9                     	ds	33
   774  0000FA                     _I2CDataBytesReceived:
   775                           	callstack 0
   776  0000FA                     	ds	2
   777  0000FC                     isr@Timer2Counter:
   778                           	callstack 0
   779  0000FC                     	ds	2
   780  0000FE                     _errorFlag:
   781                           	callstack 0
   782  0000FE                     	ds	1
   783  0000FF                     _numberOfSetpoints:
   784                           	callstack 0
   785  0000FF                     	ds	1
   786                           
   787                           	psect	bssBANK1
   788  00018C                     __pbssBANK1:
   789                           	callstack 0
   790  00018C                     _InBuffer:
   791                           	callstack 0
   792  00018C                     	ds	64
   793  0001CC                     _I2C_WRITEdata:
   794                           	callstack 0
   795  0001CC                     	ds	32
   796                           
   797                           	psect	dataBANK1
   798  000100                     __pdataBANK1:
   799                           	callstack 0
   800  000100                     _OutBuffer:
   801                           	callstack 0
   802  000100                     	ds	64
   803  000140                     _arrThermistorResistance:
   804                           	callstack 0
   805  000140                     	ds	44
   806  00016C                     _I2C_READdata:
   807                           	callstack 0
   808  00016C                     	ds	32
   809                           
   810                           	psect	bssBANK2
   811  000200                     __pbssBANK2:
   812                           	callstack 0
   813  000200                     _arrRHCalTable:
   814                           	callstack 0
   815  000200                     	ds	256
   816                           
   817                           	psect	cstackBANK1
   818  0001EC                     __pcstackBANK1:
   819                           	callstack 0
   820  0001EC                     main@i:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x0
   824  0001EC                     	ds	2
   825                           
   826                           	psect	cstackBANK0
   827  000060                     __pcstackBANK0:
   828                           	callstack 0
   829  000060                     ??__doprnt:
   830                           
   831                           ; 1 bytes @ 0x0
   832  000060                     	ds	4
   833  000064                     __doprnt$2306:
   834                           	callstack 0
   835                           
   836                           ; 4 bytes @ 0x4
   837  000064                     	ds	4
   838  000068                     __doprnt@cp:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x8
   842  000068                     	ds	2
   843  00006A                     __doprnt@len:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0xA
   847  00006A                     	ds	2
   848  00006C                     __doprnt@val:
   849                           	callstack 0
   850                           
   851                           ; 4 bytes @ 0xC
   852  00006C                     	ds	4
   853  000070                     __doprnt@eexp:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x10
   857  000070                     	ds	2
   858  000072                     __doprnt@flag:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x12
   862  000072                     	ds	2
   863  000074                     __doprnt@tmpval:
   864                           	callstack 0
   865                           
   866                           ; 4 bytes @ 0x14
   867  000074                     	ds	4
   868  000078                     __doprnt@fval:
   869                           	callstack 0
   870                           
   871                           ; 4 bytes @ 0x18
   872  000078                     	ds	4
   873  00007C                     __doprnt@width:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0x1C
   877  00007C                     	ds	2
   878  00007E                     __doprnt@prec:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x1E
   882  00007E                     	ds	2
   883  000080                     __doprnt@c:
   884                           	callstack 0
   885                           
   886                           ; 1 bytes @ 0x20
   887  000080                     	ds	1
   888  000081                     ?_printf:
   889                           	callstack 0
   890  000081                     ?_sprintf:
   891                           	callstack 0
   892  000081                     sprintf@wh:
   893                           	callstack 0
   894  000081                     printf@f:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0x21
   898  000081                     	ds	1
   899  000082                     sprintf@f:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x22
   903  000082                     	ds	6
   904  000088                     sprintf@ap:
   905                           	callstack 0
   906                           
   907                           ; 1 bytes @ 0x28
   908  000088                     	ds	1
   909  000089                     printf@ap:
   910                           	callstack 0
   911  000089                     sprintf@pb:
   912                           	callstack 0
   913                           
   914                           ; 4 bytes @ 0x29
   915  000089                     	ds	1
   916  00008A                     printf@pb:
   917                           	callstack 0
   918                           
   919                           ; 4 bytes @ 0x2A
   920  00008A                     	ds	4
   921  00008E                     i2c_SlaveWrite@device:
   922                           	callstack 0
   923                           
   924                           ; 1 bytes @ 0x2E
   925  00008E                     	ds	1
   926  00008F                     i2c_SlaveWrite@dataByte:
   927                           	callstack 0
   928                           
   929                           ; 1 bytes @ 0x2F
   930  00008F                     	ds	1
   931  000090                     i2c_SlaveWrite@i:
   932                           	callstack 0
   933                           
   934                           ; 1 bytes @ 0x30
   935  000090                     	ds	1
   936  000091                     i2c_SlaveWrite@errorFlag:
   937                           	callstack 0
   938                           
   939                           ; 1 bytes @ 0x31
   940  000091                     	ds	1
   941  000092                     main@InBytes:
   942                           	callstack 0
   943                           
   944                           ; 32 bytes @ 0x32
   945  000092                     	ds	32
   946  0000B2                     main@OutBytes:
   947                           	callstack 0
   948                           
   949                           ; 32 bytes @ 0x52
   950  0000B2                     	ds	32
   951  0000D2                     main@trial:
   952                           	callstack 0
   953                           
   954                           ; 4 bytes @ 0x72
   955  0000D2                     	ds	4
   956  0000D6                     main@length:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x76
   960  0000D6                     	ds	2
   961  0000D8                     main@errorFlag:
   962                           	callstack 0
   963                           
   964                           ; 1 bytes @ 0x78
   965  0000D8                     	ds	1
   966                           
   967                           	psect	cstackCOMRAM
   968  000001                     __pcstackCOMRAM:
   969                           	callstack 0
   970  000001                     ??_isr:
   971  000001                     
   972                           ; 1 bytes @ 0x0
   973  000001                     	ds	2
   974  000003                     isr@ch:
   975                           	callstack 0
   976                           
   977                           ; 1 bytes @ 0x2
   978  000003                     	ds	1
   979  000004                     ??_isdigit:
   980  000004                     ?___wmul:
   981                           	callstack 0
   982  000004                     ?___awmod:
   983                           	callstack 0
   984  000004                     ?__tdiv_to_l_:
   985                           	callstack 0
   986  000004                     ?__div_to_l_:
   987                           	callstack 0
   988  000004                     ?___lldiv:
   989                           	callstack 0
   990  000004                     ?___flneg:
   991                           	callstack 0
   992  000004                     ?___xxtofl:
   993                           	callstack 0
   994  000004                     i2c_SendByte@byte:
   995                           	callstack 0
   996  000004                     i2c_GetAcknowledge@ack:
   997                           	callstack 0
   998  000004                     i2c_ReadByte@byte:
   999                           	callstack 0
  1000  000004                     i2c_SendAcknowledge@status:
  1001                           	callstack 0
  1002  000004                     putch@ch:
  1003                           	callstack 0
  1004  000004                     ___lbmod@divisor:
  1005                           	callstack 0
  1006  000004                     DelayMs@i:
  1007                           	callstack 0
  1008  000004                     ___wmul@multiplier:
  1009                           	callstack 0
  1010  000004                     ___awmod@dividend:
  1011                           	callstack 0
  1012  000004                     ___lldiv@dividend:
  1013                           	callstack 0
  1014  000004                     ___fleq@ff1:
  1015                           	callstack 0
  1016  000004                     ___flge@ff1:
  1017                           	callstack 0
  1018  000004                     ___flneg@f1:
  1019                           	callstack 0
  1020  000004                     ___xxtofl@val:
  1021                           	callstack 0
  1022  000004                     __div_to_l_@f1:
  1023                           	callstack 0
  1024  000004                     __tdiv_to_l_@f1:
  1025                           	callstack 0
  1026                           
  1027                           ; 4 bytes @ 0x3
  1028  000004                     	ds	1
  1029  000005                     i2c_SendControlByte@direction:
  1030                           	callstack 0
  1031  000005                     ___lbmod@dividend:
  1032                           	callstack 0
  1033  000005                     _isdigit$2043:
  1034                           	callstack 0
  1035                           
  1036                           ; 1 bytes @ 0x4
  1037  000005                     	ds	1
  1038  000006                     i2c_SendControlByte@controlByte:
  1039                           	callstack 0
  1040  000006                     ___lbmod@counter:
  1041                           	callstack 0
  1042  000006                     isdigit@c:
  1043                           	callstack 0
  1044  000006                     DelayMs@j:
  1045                           	callstack 0
  1046  000006                     ___wmul@multiplicand:
  1047                           	callstack 0
  1048  000006                     ___awmod@divisor:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x5
  1052  000006                     	ds	1
  1053  000007                     i2c_SendControlByte@outByte:
  1054                           	callstack 0
  1055  000007                     ___lbmod@rem:
  1056                           	callstack 0
  1057                           
  1058                           ; 1 bytes @ 0x6
  1059  000007                     	ds	1
  1060  000008                     ??___xxtofl:
  1061  000008                     i2c_SlaveRead@numBytes:
  1062                           	callstack 0
  1063  000008                     ___awmod@counter:
  1064                           	callstack 0
  1065  000008                     ___lbdiv@divisor:
  1066                           	callstack 0
  1067  000008                     DelayMs@dummy:
  1068                           	callstack 0
  1069  000008                     ___wmul@product:
  1070                           	callstack 0
  1071  000008                     ___lldiv@divisor:
  1072                           	callstack 0
  1073  000008                     ___fleq@ff2:
  1074                           	callstack 0
  1075  000008                     ___flge@ff2:
  1076                           	callstack 0
  1077  000008                     __div_to_l_@f2:
  1078                           	callstack 0
  1079  000008                     __tdiv_to_l_@f2:
  1080                           	callstack 0
  1081                           
  1082                           ; 4 bytes @ 0x7
  1083  000008                     	ds	1
  1084  000009                     i2c_SlaveRead@ptrDataIn:
  1085                           	callstack 0
  1086  000009                     ___awmod@sign:
  1087                           	callstack 0
  1088  000009                     ___lbdiv@dividend:
  1089                           	callstack 0
  1090                           
  1091                           ; 1 bytes @ 0x8
  1092  000009                     	ds	1
  1093  00000A                     ?___awdiv:
  1094                           	callstack 0
  1095  00000A                     i2c_SlaveRead@device:
  1096                           	callstack 0
  1097  00000A                     ___lbdiv@counter:
  1098                           	callstack 0
  1099  00000A                     ___awdiv@dividend:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x9
  1103  00000A                     	ds	1
  1104  00000B                     i2c_SlaveRead@errorFlag:
  1105                           	callstack 0
  1106  00000B                     ___lbdiv@quotient:
  1107                           	callstack 0
  1108                           
  1109                           ; 1 bytes @ 0xA
  1110  00000B                     	ds	1
  1111  00000C                     ??__tdiv_to_l_:
  1112  00000C                     ??___fleq:
  1113  00000C                     ??___flge:
  1114  00000C                     i2c_SlaveRead@i:
  1115                           	callstack 0
  1116  00000C                     ___xxtofl@sign:
  1117                           	callstack 0
  1118  00000C                     ___awdiv@divisor:
  1119                           	callstack 0
  1120  00000C                     ___lldiv@quotient:
  1121                           	callstack 0
  1122  00000C                     __div_to_l_@quot:
  1123                           	callstack 0
  1124                           
  1125                           ; 4 bytes @ 0xB
  1126  00000C                     	ds	1
  1127  00000D                     ___xxtofl@exp:
  1128                           	callstack 0
  1129                           
  1130                           ; 1 bytes @ 0xC
  1131  00000D                     	ds	1
  1132  00000E                     ___awdiv@counter:
  1133                           	callstack 0
  1134  00000E                     ___xxtofl@arg:
  1135                           	callstack 0
  1136                           
  1137                           ; 4 bytes @ 0xD
  1138  00000E                     	ds	1
  1139  00000F                     ___awdiv@sign:
  1140                           	callstack 0
  1141  00000F                     __tdiv_to_l_@quot:
  1142                           	callstack 0
  1143                           
  1144                           ; 4 bytes @ 0xE
  1145  00000F                     	ds	1
  1146  000010                     ___lldiv@counter:
  1147                           	callstack 0
  1148  000010                     __div_to_l_@cntr:
  1149                           	callstack 0
  1150  000010                     ___awdiv@quotient:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0xF
  1154  000010                     	ds	1
  1155  000011                     ?___llmod:
  1156                           	callstack 0
  1157  000011                     __div_to_l_@exp1:
  1158                           	callstack 0
  1159  000011                     ___llmod@dividend:
  1160                           	callstack 0
  1161                           
  1162                           ; 4 bytes @ 0x10
  1163  000011                     	ds	1
  1164  000012                     ?___flmul:
  1165                           	callstack 0
  1166  000012                     ___flmul@b:
  1167                           	callstack 0
  1168                           
  1169                           ; 4 bytes @ 0x11
  1170  000012                     	ds	1
  1171  000013                     __tdiv_to_l_@cntr:
  1172                           	callstack 0
  1173                           
  1174                           ; 1 bytes @ 0x12
  1175  000013                     	ds	1
  1176  000014                     __tdiv_to_l_@exp1:
  1177                           	callstack 0
  1178                           
  1179                           ; 1 bytes @ 0x13
  1180  000014                     	ds	1
  1181  000015                     ___llmod@divisor:
  1182                           	callstack 0
  1183                           
  1184                           ; 4 bytes @ 0x14
  1185  000015                     	ds	1
  1186  000016                     ___flmul@a:
  1187                           	callstack 0
  1188                           
  1189                           ; 4 bytes @ 0x15
  1190  000016                     	ds	3
  1191  000019                     ___llmod@counter:
  1192                           	callstack 0
  1193                           
  1194                           ; 1 bytes @ 0x18
  1195  000019                     	ds	1
  1196  00001A                     ??___flmul:
  1197                           
  1198                           ; 1 bytes @ 0x19
  1199  00001A                     	ds	4
  1200  00001E                     ___flmul@sign:
  1201                           	callstack 0
  1202                           
  1203                           ; 1 bytes @ 0x1D
  1204  00001E                     	ds	1
  1205  00001F                     ___flmul@aexp:
  1206                           	callstack 0
  1207                           
  1208                           ; 1 bytes @ 0x1E
  1209  00001F                     	ds	1
  1210  000020                     ___flmul@bexp:
  1211                           	callstack 0
  1212                           
  1213                           ; 1 bytes @ 0x1F
  1214  000020                     	ds	1
  1215  000021                     ___flmul@grs:
  1216                           	callstack 0
  1217                           
  1218                           ; 4 bytes @ 0x20
  1219  000021                     	ds	4
  1220  000025                     ___flmul@prod:
  1221                           	callstack 0
  1222                           
  1223                           ; 4 bytes @ 0x24
  1224  000025                     	ds	4
  1225  000029                     ___flmul@temp:
  1226                           	callstack 0
  1227                           
  1228                           ; 2 bytes @ 0x28
  1229  000029                     	ds	2
  1230  00002B                     ?_fround:
  1231                           	callstack 0
  1232  00002B                     ?_scale:
  1233                           	callstack 0
  1234                           
  1235                           ; 4 bytes @ 0x2A
  1236  00002B                     	ds	4
  1237  00002F                     ??_fround:
  1238  00002F                     _scale$2305:
  1239                           	callstack 0
  1240                           
  1241                           ; 4 bytes @ 0x2E
  1242  00002F                     	ds	2
  1243  000031                     _fround$2304:
  1244                           	callstack 0
  1245                           
  1246                           ; 4 bytes @ 0x30
  1247  000031                     	ds	2
  1248  000033                     scale@scl:
  1249                           	callstack 0
  1250                           
  1251                           ; 1 bytes @ 0x32
  1252  000033                     	ds	1
  1253  000034                     ?___fltol:
  1254                           	callstack 0
  1255  000034                     ___fltol@f1:
  1256                           	callstack 0
  1257                           
  1258                           ; 4 bytes @ 0x33
  1259  000034                     	ds	1
  1260  000035                     _fround$2303:
  1261                           	callstack 0
  1262                           
  1263                           ; 4 bytes @ 0x34
  1264  000035                     	ds	3
  1265  000038                     ??___fltol:
  1266                           
  1267                           ; 1 bytes @ 0x37
  1268  000038                     	ds	1
  1269  000039                     fround@prec:
  1270                           	callstack 0
  1271                           
  1272                           ; 1 bytes @ 0x38
  1273  000039                     	ds	1
  1274  00003A                     ?___fladd:
  1275                           	callstack 0
  1276  00003A                     ___fladd@b:
  1277                           	callstack 0
  1278                           
  1279                           ; 4 bytes @ 0x39
  1280  00003A                     	ds	2
  1281  00003C                     ___fltol@sign1:
  1282                           	callstack 0
  1283                           
  1284                           ; 1 bytes @ 0x3B
  1285  00003C                     	ds	1
  1286  00003D                     ___fltol@exp1:
  1287                           	callstack 0
  1288                           
  1289                           ; 1 bytes @ 0x3C
  1290  00003D                     	ds	1
  1291  00003E                     ___fladd@a:
  1292                           	callstack 0
  1293                           
  1294                           ; 4 bytes @ 0x3D
  1295  00003E                     	ds	4
  1296  000042                     ??___fladd:
  1297                           
  1298                           ; 1 bytes @ 0x41
  1299  000042                     	ds	4
  1300  000046                     ___fladd@signs:
  1301                           	callstack 0
  1302                           
  1303                           ; 1 bytes @ 0x45
  1304  000046                     	ds	1
  1305  000047                     ___fladd@aexp:
  1306                           	callstack 0
  1307                           
  1308                           ; 1 bytes @ 0x46
  1309  000047                     	ds	1
  1310  000048                     ___fladd@bexp:
  1311                           	callstack 0
  1312                           
  1313                           ; 1 bytes @ 0x47
  1314  000048                     	ds	1
  1315  000049                     ___fladd@grs:
  1316                           	callstack 0
  1317                           
  1318                           ; 1 bytes @ 0x48
  1319  000049                     	ds	1
  1320  00004A                     ?___flsub:
  1321                           	callstack 0
  1322  00004A                     ___flsub@b:
  1323                           	callstack 0
  1324                           
  1325                           ; 4 bytes @ 0x49
  1326  00004A                     	ds	4
  1327  00004E                     ___flsub@a:
  1328                           	callstack 0
  1329                           
  1330                           ; 4 bytes @ 0x4D
  1331  00004E                     	ds	4
  1332  000052                     ?__doprnt:
  1333                           	callstack 0
  1334  000052                     __doprnt@pb:
  1335                           	callstack 0
  1336                           
  1337                           ; 1 bytes @ 0x51
  1338  000052                     	ds	1
  1339  000053                     __doprnt@f:
  1340                           	callstack 0
  1341                           
  1342                           ; 2 bytes @ 0x52
  1343  000053                     	ds	2
  1344  000055                     __doprnt@ap:
  1345                           	callstack 0
  1346                           
  1347                           ; 1 bytes @ 0x54
  1348  000055                     	ds	1
  1349  000056                     i2c_SlaveWrite@numBytes:
  1350                           	callstack 0
  1351                           
  1352                           ; 1 bytes @ 0x55
  1353  000056                     	ds	1
  1354  000057                     i2c_SlaveWrite@ptrDataOut:
  1355                           	callstack 0
  1356                           
  1357                           ; 1 bytes @ 0x56
  1358  000057                     	ds	1
  1359  000058                     
  1360                           ; 1 bytes @ 0x57
  1361 ;;
  1362 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1363 ;;
  1364 ;; *************** function _main *****************
  1365 ;; Defined at:
  1366 ;;		line 82 in file "../main.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;		None
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;  OutBytes       32   82[BANK0 ] unsigned char [32]
  1371 ;;  InBytes        32   50[BANK0 ] unsigned char [32]
  1372 ;;  trial           4  114[BANK0 ] unsigned long 
  1373 ;;  FBytes          4    0        unsigned char [4]
  1374 ;;  BConvert        4    0        struct .
  1375 ;;  FConvert        4    0        struct .
  1376 ;;  i               2    0[BANK1 ] short 
  1377 ;;  length          2  118[BANK0 ] int 
  1378 ;;  errorFlag       1  120[BANK0 ] unsigned char 
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  1    wreg      void 
  1381 ;; Registers used:
  1382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 3F/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1388 ;;      Params:         0       0       0       0
  1389 ;;      Locals:         0      71       2       0
  1390 ;;      Temps:          0       0       0       0
  1391 ;;      Totals:         0      71       2       0
  1392 ;;Total ram usage:       73 bytes
  1393 ;; Hardware stack levels required when called: 6
  1394 ;; This function calls:
  1395 ;;		_DelayMs
  1396 ;;		_InitializeHardware
  1397 ;;		_InitializeI2Cmaster
  1398 ;;		_i2c_SlaveRead
  1399 ;;		_i2c_SlaveWrite
  1400 ;;		_printf
  1401 ;;		_sprintf
  1402 ;; This function is called by:
  1403 ;;		Startup code after reset
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text0
  1408  001FA0                     __ptext0:
  1409                           	callstack 0
  1410  001FA0                     _main:
  1411                           	callstack 25
  1412                           
  1413                           ;main.c: 99: unsigned long trial = 0;
  1414                           
  1415                           ;incstack = 0
  1416  001FA0  0E00               	movlw	0
  1417  001FA2  0100               	movlb	0	; () banked
  1418  001FA4  6FD2               	movwf	main@trial& (0+255),b
  1419  001FA6  0E00               	movlw	0
  1420  001FA8  6FD3               	movwf	(main@trial+1)& (0+255),b
  1421  001FAA  0E00               	movlw	0
  1422  001FAC  6FD4               	movwf	(main@trial+2)& (0+255),b
  1423  001FAE  0E00               	movlw	0
  1424  001FB0  6FD5               	movwf	(main@trial+3)& (0+255),b
  1425                           
  1426                           ;main.c: 100: unsigned char errorFlag = 0;
  1427  001FB2  0E00               	movlw	0
  1428  001FB4  6FD8               	movwf	main@errorFlag& (0+255),b
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;main.c: 101: short i;;main.c: 102: ConvertFloatType FConvert, BConvert;;main.c: 103: un
      +                          signed char FBytes[4];;main.c: 105: InitializeHardware();
  1432  001FB6  EC21  F012         	call	_InitializeHardware	;wreg free
  1433                           
  1434                           ; BSR set to: 15
  1435                           ;main.c: 111: printf("\r\rSTARTING I2C MASTER  SSPxxADD = 27;... #0");
  1436  001FBA  0E6F               	movlw	low STR_2
  1437  001FBC  0100               	movlb	0	; () banked
  1438  001FBE  6F81               	movwf	printf@f& (0+255),b
  1439  001FC0  0E3F               	movlw	high STR_2
  1440  001FC2  6F82               	movwf	(printf@f+1)& (0+255),b
  1441  001FC4  EC00  F015         	call	_printf	;wreg free
  1442                           
  1443                           ; BSR set to: 0
  1444                           ;main.c: 112: DelayMs(400);
  1445  001FC8  0E01               	movlw	1
  1446  001FCA  6E05               	movwf	(DelayMs@i+1)^0,c
  1447  001FCC  0E90               	movlw	144
  1448  001FCE  6E04               	movwf	DelayMs@i^0,c
  1449  001FD0  ECCF  F014         	call	_DelayMs	;wreg free
  1450                           
  1451                           ; BSR set to: 0
  1452                           ;main.c: 113: InitializeI2Cmaster();
  1453  001FD4  EC3D  F015         	call	_InitializeI2Cmaster	;wreg free
  1454  001FD8                     l6051:
  1455                           
  1456                           ;main.c: 118: {;main.c: 138: sprintf(OutBytes, "#%d: 01234567890", trial++);
  1457  001FD8  0EB2               	movlw	low main@OutBytes
  1458  001FDA  0100               	movlb	0	; () banked
  1459  001FDC  6F81               	movwf	sprintf@wh& (0+255),b
  1460  001FDE  0EDC               	movlw	low STR_3
  1461  001FE0  6F82               	movwf	sprintf@f& (0+255),b
  1462  001FE2  0E3F               	movlw	high STR_3
  1463  001FE4  6F83               	movwf	(sprintf@f+1)& (0+255),b
  1464  001FE6  C0D2  F084         	movff	main@trial,?_sprintf+3
  1465  001FEA  C0D3  F085         	movff	main@trial+1,?_sprintf+4
  1466  001FEE  C0D4  F086         	movff	main@trial+2,?_sprintf+5
  1467  001FF2  C0D5  F087         	movff	main@trial+3,?_sprintf+6
  1468  001FF6  ECB5  F014         	call	_sprintf	;wreg free
  1469                           
  1470                           ; BSR set to: 0
  1471  001FFA  0E01               	movlw	1
  1472  001FFC  27D2               	addwf	main@trial& (0+255),f,b
  1473  001FFE  0E00               	movlw	0
  1474  002000  23D3               	addwfc	(main@trial+1)& (0+255),f,b
  1475  002002  23D4               	addwfc	(main@trial+2)& (0+255),f,b
  1476  002004  23D5               	addwfc	(main@trial+3)& (0+255),f,b
  1477                           
  1478                           ; BSR set to: 0
  1479                           ;main.c: 139: length = 16;
  1480  002006  0E00               	movlw	0
  1481  002008  6FD7               	movwf	(main@length+1)& (0+255),b
  1482  00200A  0E10               	movlw	16
  1483  00200C  6FD6               	movwf	main@length& (0+255),b
  1484                           
  1485                           ; BSR set to: 0
  1486                           ;main.c: 140: LATDbits.LATD2 = 1;
  1487  00200E  848C               	bsf	140,2,c	;volatile
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;main.c: 141: errorFlag = i2c_SlaveWrite(0x27, length, OutBytes);
  1491  002010  0E10               	movlw	16
  1492  002012  6E56               	movwf	i2c_SlaveWrite@numBytes^0,c
  1493  002014  0EB2               	movlw	low main@OutBytes
  1494  002016  6E57               	movwf	i2c_SlaveWrite@ptrDataOut^0,c
  1495  002018  0E27               	movlw	39
  1496  00201A  EC76  F013         	call	_i2c_SlaveWrite
  1497  00201E  6FD8               	movwf	main@errorFlag& (0+255),b
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;main.c: 142: LATDbits.LATD2 = 0;
  1501  002020  948C               	bcf	140,2,c	;volatile
  1502                           
  1503                           ; BSR set to: 0
  1504                           ;main.c: 143: if (errorFlag) printf("\r#%d: SEND, ERRORS: %d", trial, errorFlag);
  1505  002022  51D8               	movf	main@errorFlag& (0+255),w,b
  1506  002024  B4D8               	btfsc	status,2,c
  1507  002026  D011               	goto	l6067
  1508                           
  1509                           ; BSR set to: 0
  1510  002028  0E9B               	movlw	low STR_4
  1511  00202A  6F81               	movwf	printf@f& (0+255),b
  1512  00202C  0E3F               	movlw	high STR_4
  1513  00202E  6F82               	movwf	(printf@f+1)& (0+255),b
  1514  002030  C0D2  F083         	movff	main@trial,?_printf+2
  1515  002034  C0D3  F084         	movff	main@trial+1,?_printf+3
  1516  002038  C0D4  F085         	movff	main@trial+2,?_printf+4
  1517  00203C  C0D5  F086         	movff	main@trial+3,?_printf+5
  1518  002040  C0D8  F087         	movff	main@errorFlag,?_printf+6
  1519  002044  6B88               	clrf	(?_printf+7)& (0+255),b
  1520  002046  EC00  F015         	call	_printf	;wreg free
  1521  00204A                     l6067:
  1522                           
  1523                           ; BSR set to: 0
  1524                           ;main.c: 144: for (i = 0; i < 32; i++) InBytes[i] = OutBytes[i] = 0;
  1525  00204A  0E00               	movlw	0
  1526  00204C  0101               	movlb	1	; () banked
  1527  00204E  6FED               	movwf	(main@i+1)& (0+255),b
  1528  002050  0E00               	movlw	0
  1529  002052  6FEC               	movwf	main@i& (0+255),b
  1530  002054                     l6073:
  1531                           
  1532                           ; BSR set to: 1
  1533  002054  51EC               	movf	main@i& (0+255),w,b
  1534  002056  0FB2               	addlw	low main@OutBytes
  1535  002058  6ED9               	movwf	fsr2l,c
  1536  00205A  6ADA               	clrf	fsr2h,c
  1537  00205C  0E00               	movlw	0
  1538  00205E  6EDF               	movwf	indf2,c
  1539  002060  51EC               	movf	main@i& (0+255),w,b
  1540  002062  0F92               	addlw	low main@InBytes
  1541  002064  6EE1               	movwf	fsr1l,c
  1542  002066  6AE2               	clrf	fsr1h,c
  1543  002068  CFDF FFE7          	movff	indf2,indf1
  1544                           
  1545                           ; BSR set to: 1
  1546  00206C  4BEC               	infsnz	main@i& (0+255),f,b
  1547  00206E  2BED               	incf	(main@i+1)& (0+255),f,b
  1548                           
  1549                           ; BSR set to: 1
  1550  002070  BFED               	btfsc	(main@i+1)& (0+255),7,b
  1551  002072  D7F0               	goto	l6073
  1552  002074  51ED               	movf	(main@i+1)& (0+255),w,b
  1553  002076  E104               	bnz	u7510
  1554  002078  0E20               	movlw	32
  1555  00207A  5DEC               	subwf	main@i& (0+255),w,b
  1556  00207C  A0D8               	btfss	status,0,c
  1557  00207E  D7EA               	goto	l6073
  1558  002080                     u7510:
  1559                           
  1560                           ; BSR set to: 1
  1561                           ;main.c: 145: errorFlag = i2c_SlaveRead(0x27, length, InBytes);
  1562  002080  C0D6  F008         	movff	main@length,i2c_SlaveRead@numBytes
  1563  002084  0E92               	movlw	low main@InBytes
  1564  002086  6E09               	movwf	i2c_SlaveRead@ptrDataIn^0,c
  1565  002088  0E27               	movlw	39
  1566  00208A  EC4B  F014         	call	_i2c_SlaveRead
  1567  00208E  0100               	movlb	0	; () banked
  1568  002090  6FD8               	movwf	main@errorFlag& (0+255),b
  1569                           
  1570                           ; BSR set to: 0
  1571                           ;main.c: 146: if (errorFlag) printf("\rRECV: %s, ERRORS: %d", InBytes, errorFlag);
  1572  002092  51D8               	movf	main@errorFlag& (0+255),w,b
  1573  002094  B4D8               	btfsc	status,2,c
  1574  002096  D00D               	goto	l6085
  1575                           
  1576                           ; BSR set to: 0
  1577  002098  0EB2               	movlw	low STR_5
  1578  00209A  6F81               	movwf	printf@f& (0+255),b
  1579  00209C  0E3F               	movlw	high STR_5
  1580  00209E  6F82               	movwf	(printf@f+1)& (0+255),b
  1581  0020A0  0E92               	movlw	low main@InBytes
  1582  0020A2  6F83               	movwf	(?_printf+2)& (0+255),b
  1583  0020A4  6B84               	clrf	(?_printf+3)& (0+255),b
  1584  0020A6  C0D8  F085         	movff	main@errorFlag,?_printf+4
  1585  0020AA  6B86               	clrf	(?_printf+5)& (0+255),b
  1586  0020AC  EC00  F015         	call	_printf	;wreg free
  1587  0020B0  D793               	goto	l6051
  1588  0020B2                     l6085:
  1589                           
  1590                           ; BSR set to: 0
  1591                           ;main.c: 147: else printf("\rRECV: %s", InBytes);
  1592  0020B2  0EED               	movlw	low STR_6
  1593  0020B4  6F81               	movwf	printf@f& (0+255),b
  1594  0020B6  0E3F               	movlw	high STR_6
  1595  0020B8  6F82               	movwf	(printf@f+1)& (0+255),b
  1596  0020BA  0E92               	movlw	low main@InBytes
  1597  0020BC  6F83               	movwf	(?_printf+2)& (0+255),b
  1598  0020BE  6B84               	clrf	(?_printf+3)& (0+255),b
  1599  0020C0  EC00  F015         	call	_printf	;wreg free
  1600  0020C4  D789               	goto	l6051
  1601  0020C6                     __end_of_main:
  1602                           	callstack 0
  1603                           
  1604 ;; *************** function _sprintf *****************
  1605 ;; Defined at:
  1606 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprintf.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  wh              1   33[BANK0 ] PTR unsigned char 
  1609 ;;		 -> main@OutBytes(32), 
  1610 ;;  f               2   34[BANK0 ] PTR const unsigned char 
  1611 ;;		 -> STR_3(17), 
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;  pb              4   41[BANK0 ] struct __prbuf
  1614 ;;  ap              1   40[BANK0 ] PTR void [1]
  1615 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  2   33[BANK0 ] int 
  1618 ;; Registers used:
  1619 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1620 ;; Tracked objects:
  1621 ;;		On entry : 3F/0
  1622 ;;		On exit  : 3F/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1625 ;;      Params:         0       7       0       0
  1626 ;;      Locals:         0       5       0       0
  1627 ;;      Temps:          0       0       0       0
  1628 ;;      Totals:         0      12       0       0
  1629 ;;Total ram usage:       12 bytes
  1630 ;; Hardware stack levels used: 1
  1631 ;; Hardware stack levels required when called: 4
  1632 ;; This function calls:
  1633 ;;		__doprnt
  1634 ;; This function is called by:
  1635 ;;		_main
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           	psect	text1
  1640  00296A                     __ptext1:
  1641                           	callstack 0
  1642  00296A                     _sprintf:
  1643                           	callstack 26
  1644                           
  1645                           ; BSR set to: 0
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;incstack = 0
  1649  00296A  C081  F089         	movff	sprintf@wh,sprintf@pb
  1650  00296E  6B8A               	clrf	(sprintf@pb+1)& (0+255),b
  1651  002970  0E00               	movlw	0
  1652  002972  6F8B               	movwf	(sprintf@pb+2)& (0+255),b
  1653  002974  0E00               	movlw	0
  1654  002976  6F8C               	movwf	(sprintf@pb+3)& (0+255),b
  1655  002978  0E84               	movlw	low (?_sprintf+3)
  1656  00297A  6F88               	movwf	sprintf@ap& (0+255),b
  1657                           
  1658                           ; BSR set to: 0
  1659  00297C  0E89               	movlw	low sprintf@pb
  1660  00297E  6E52               	movwf	__doprnt@pb^0,c
  1661  002980  C082  F053         	movff	sprintf@f,__doprnt@f
  1662  002984  C083  F054         	movff	sprintf@f+1,__doprnt@f+1
  1663  002988  0E88               	movlw	low sprintf@ap
  1664  00298A  6E55               	movwf	__doprnt@ap^0,c
  1665  00298C  EC64  F000         	call	__doprnt	;wreg free
  1666                           
  1667                           ; BSR set to: 0
  1668  002990  C089  FFD9         	movff	sprintf@pb,fsr2l
  1669  002994  C08A  FFDA         	movff	sprintf@pb+1,fsr2h
  1670  002998  0E00               	movlw	0
  1671  00299A  6EDF               	movwf	indf2,c
  1672                           
  1673                           ; BSR set to: 0
  1674  00299C  0012               	return		;funcret
  1675  00299E                     __end_of_sprintf:
  1676                           	callstack 0
  1677                           
  1678 ;; *************** function _i2c_SlaveWrite *****************
  1679 ;; Defined at:
  1680 ;;		line 126 in file "../MASTER_I2C.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;  device          1    wreg     unsigned char 
  1683 ;;  numBytes        1   85[COMRAM] unsigned char 
  1684 ;;  ptrDataOut      1   86[COMRAM] PTR unsigned char 
  1685 ;;		 -> main@OutBytes(32), 
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;  device          1   46[BANK0 ] unsigned char 
  1688 ;;  errorFlag       1   49[BANK0 ] unsigned char 
  1689 ;;  i               1   48[BANK0 ] unsigned char 
  1690 ;;  dataByte        1   47[BANK0 ] unsigned char 
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      unsigned char 
  1693 ;; Registers used:
  1694 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1695 ;; Tracked objects:
  1696 ;;		On entry : 3F/0
  1697 ;;		On exit  : 3F/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1700 ;;      Params:         2       0       0       0
  1701 ;;      Locals:         0       4       0       0
  1702 ;;      Temps:          0       0       0       0
  1703 ;;      Totals:         2       4       0       0
  1704 ;;Total ram usage:        6 bytes
  1705 ;; Hardware stack levels used: 1
  1706 ;; Hardware stack levels required when called: 5
  1707 ;; This function calls:
  1708 ;;		_DelayMs
  1709 ;;		_i2c_GetAcknowledge
  1710 ;;		_i2c_SendByte
  1711 ;;		_i2c_SendControlByte
  1712 ;;		_i2c_Start
  1713 ;;		_i2c_Stop
  1714 ;;		_printf
  1715 ;; This function is called by:
  1716 ;;		_main
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           	psect	text2
  1721  0026EC                     __ptext2:
  1722                           	callstack 0
  1723  0026EC                     _i2c_SlaveWrite:
  1724                           	callstack 25
  1725                           
  1726                           ; BSR set to: 0
  1727                           ;incstack = 0
  1728                           ;i2c_SlaveWrite@device stored from wreg
  1729  0026EC  6F8E               	movwf	i2c_SlaveWrite@device& (0+255),b
  1730                           
  1731                           ;MASTER_I2C.c: 128: unsigned char i, dataByte;;MASTER_I2C.c: 129: unsigned char errorFla
      +                          g;;MASTER_I2C.c: 131: errorFlag = 0x00;
  1732  0026EE  0E00               	movlw	0
  1733  0026F0  0100               	movlb	0	; () banked
  1734  0026F2  6F91               	movwf	i2c_SlaveWrite@errorFlag& (0+255),b
  1735                           
  1736                           ; BSR set to: 0
  1737                           ;MASTER_I2C.c: 134: i2c_Start();
  1738  0026F4  EC8F  F015         	call	_i2c_Start	;wreg free
  1739                           
  1740                           ;MASTER_I2C.c: 135: i2c_SendControlByte(device, 0x00);
  1741  0026F8  0E00               	movlw	0
  1742  0026FA  6E05               	movwf	i2c_SendControlByte@direction^0,c
  1743  0026FC  0100               	movlb	0	; () banked
  1744  0026FE  518E               	movf	i2c_SlaveWrite@device& (0+255),w,b
  1745  002700  EC6A  F015         	call	_i2c_SendControlByte
  1746                           
  1747                           ;MASTER_I2C.c: 136: errorFlag |= i2c_GetAcknowledge();
  1748  002704  EC89  F015         	call	_i2c_GetAcknowledge	;wreg free
  1749  002708  0100               	movlb	0	; () banked
  1750  00270A  1391               	iorwf	i2c_SlaveWrite@errorFlag& (0+255),f,b
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;MASTER_I2C.c: 138: if (!errorFlag)
  1754  00270C  5191               	movf	i2c_SlaveWrite@errorFlag& (0+255),w,b
  1755  00270E  A4D8               	btfss	status,2,c
  1756  002710  D016               	goto	l5927
  1757                           
  1758                           ; BSR set to: 0
  1759                           ;MASTER_I2C.c: 139: {;MASTER_I2C.c: 141: for(i=0; i<numBytes; i++)
  1760  002712  0E00               	movlw	0
  1761  002714  6F90               	movwf	i2c_SlaveWrite@i& (0+255),b
  1762  002716  D00E               	goto	l5925
  1763  002718                     l5917:
  1764                           
  1765                           ; BSR set to: 0
  1766                           ;MASTER_I2C.c: 142: {;MASTER_I2C.c: 143: dataByte = ptrDataOut[i];
  1767  002718  5057               	movf	i2c_SlaveWrite@ptrDataOut^0,w,c
  1768  00271A  2590               	addwf	i2c_SlaveWrite@i& (0+255),w,b
  1769  00271C  6ED9               	movwf	fsr2l,c
  1770  00271E  6ADA               	clrf	fsr2h,c
  1771  002720  50DF               	movf	indf2,w,c
  1772  002722  6F8F               	movwf	i2c_SlaveWrite@dataByte& (0+255),b
  1773                           
  1774                           ; BSR set to: 0
  1775                           ;MASTER_I2C.c: 144: i2c_SendByte(dataByte);
  1776  002724  518F               	movf	i2c_SlaveWrite@dataByte& (0+255),w,b
  1777  002726  EC7C  F015         	call	_i2c_SendByte
  1778                           
  1779                           ;MASTER_I2C.c: 145: errorFlag |= i2c_GetAcknowledge();
  1780  00272A  EC89  F015         	call	_i2c_GetAcknowledge	;wreg free
  1781  00272E  0100               	movlb	0	; () banked
  1782  002730  1391               	iorwf	i2c_SlaveWrite@errorFlag& (0+255),f,b
  1783                           
  1784                           ; BSR set to: 0
  1785  002732  2B90               	incf	i2c_SlaveWrite@i& (0+255),f,b
  1786  002734                     l5925:
  1787                           
  1788                           ; BSR set to: 0
  1789  002734  5056               	movf	i2c_SlaveWrite@numBytes^0,w,c
  1790  002736  5D90               	subwf	i2c_SlaveWrite@i& (0+255),w,b
  1791  002738  B0D8               	btfsc	status,0,c
  1792  00273A  D00D               	goto	l5931
  1793  00273C  D7ED               	goto	l5917
  1794  00273E                     l5927:
  1795                           
  1796                           ; BSR set to: 0
  1797                           ;MASTER_I2C.c: 148: else;MASTER_I2C.c: 149: {;MASTER_I2C.c: 150: DelayMs(100);
  1798  00273E  0E00               	movlw	0
  1799  002740  6E05               	movwf	(DelayMs@i+1)^0,c
  1800  002742  0E64               	movlw	100
  1801  002744  6E04               	movwf	DelayMs@i^0,c
  1802  002746  ECCF  F014         	call	_DelayMs	;wreg free
  1803                           
  1804                           ; BSR set to: 0
  1805                           ;MASTER_I2C.c: 151: printf("\rSLAVE WRITE NO ACK");
  1806  00274A  0EC8               	movlw	low STR_1
  1807  00274C  6F81               	movwf	printf@f& (0+255),b
  1808  00274E  0E3F               	movlw	high STR_1
  1809  002750  6F82               	movwf	(printf@f+1)& (0+255),b
  1810  002752  EC00  F015         	call	_printf	;wreg free
  1811  002756                     l5931:
  1812                           
  1813                           ; BSR set to: 0
  1814                           ;MASTER_I2C.c: 152: };MASTER_I2C.c: 155: i2c_Stop();
  1815  002756  EC94  F015         	call	_i2c_Stop	;wreg free
  1816                           
  1817                           ;MASTER_I2C.c: 157: return errorFlag;
  1818  00275A  0100               	movlb	0	; () banked
  1819  00275C  5191               	movf	i2c_SlaveWrite@errorFlag& (0+255),w,b
  1820                           
  1821                           ; BSR set to: 0
  1822  00275E  0012               	return		;funcret
  1823  002760                     __end_of_i2c_SlaveWrite:
  1824                           	callstack 0
  1825                           
  1826 ;; *************** function _printf *****************
  1827 ;; Defined at:
  1828 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\printf.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;  f               2   33[BANK0 ] PTR const unsigned char 
  1831 ;;		 -> STR_8(79), STR_7(79), STR_6(10), STR_5(22), 
  1832 ;;		 -> STR_4(23), STR_2(44), STR_1(20), 
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;  pb              4   42[BANK0 ] struct __prbuf
  1835 ;;  ap              1   41[BANK0 ] PTR void [1]
  1836 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  2   33[BANK0 ] int 
  1839 ;; Registers used:
  1840 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1841 ;; Tracked objects:
  1842 ;;		On entry : 3F/0
  1843 ;;		On exit  : 3F/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1846 ;;      Params:         0       8       0       0
  1847 ;;      Locals:         0       5       0       0
  1848 ;;      Temps:          0       0       0       0
  1849 ;;      Totals:         0      13       0       0
  1850 ;;Total ram usage:       13 bytes
  1851 ;; Hardware stack levels used: 1
  1852 ;; Hardware stack levels required when called: 4
  1853 ;; This function calls:
  1854 ;;		__doprnt
  1855 ;; This function is called by:
  1856 ;;		_i2c_SlaveWrite
  1857 ;;		_main
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           	psect	text3
  1862  002A00                     __ptext3:
  1863                           	callstack 0
  1864  002A00                     _printf:
  1865                           	callstack 26
  1866                           
  1867                           ; BSR set to: 0
  1868                           
  1869                           ; BSR set to: 0
  1870                           ;incstack = 0
  1871  002A00  0E00               	movlw	0
  1872  002A02  6F8A               	movwf	printf@pb& (0+255),b
  1873  002A04  0E00               	movlw	0
  1874  002A06  6F8B               	movwf	(printf@pb+1)& (0+255),b
  1875  002A08  0E06               	movlw	low _putch
  1876  002A0A  6F8C               	movwf	(printf@pb+2)& (0+255),b
  1877  002A0C  0E2B               	movlw	high _putch
  1878  002A0E  6F8D               	movwf	(printf@pb+3)& (0+255),b
  1879  002A10  0E83               	movlw	low (?_printf+2)
  1880  002A12  6F89               	movwf	printf@ap& (0+255),b
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;	Return value of _printf is never used
  1884  002A14  0E8A               	movlw	low printf@pb
  1885  002A16  6E52               	movwf	__doprnt@pb^0,c
  1886  002A18  C081  F053         	movff	printf@f,__doprnt@f
  1887  002A1C  C082  F054         	movff	printf@f+1,__doprnt@f+1
  1888  002A20  0E89               	movlw	low printf@ap
  1889  002A22  6E55               	movwf	__doprnt@ap^0,c
  1890  002A24  EC64  F000         	call	__doprnt	;wreg free
  1891                           
  1892                           ; BSR set to: 0
  1893  002A28  0012               	return		;funcret
  1894  002A2A                     __end_of_printf:
  1895                           	callstack 0
  1896                           
  1897 ;; *************** function __doprnt *****************
  1898 ;; Defined at:
  1899 ;;		line 471 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;  pb              1   81[COMRAM] PTR struct __prbuf
  1902 ;;		 -> sprintf@pb(4), printf@pb(4), 
  1903 ;;  f               2   82[COMRAM] PTR const unsigned char 
  1904 ;;		 -> STR_8(79), STR_7(79), STR_6(10), STR_5(22), 
  1905 ;;		 -> STR_4(23), STR_3(17), STR_2(44), STR_1(20), 
  1906 ;;  ap              1   84[COMRAM] PTR PTR void 
  1907 ;;		 -> sprintf@ap(1), printf@ap(1), 
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;  fval            4   24[BANK0 ] PTR PTR void 
  1910 ;;  tmpval          4   20[BANK0 ] struct .
  1911 ;;  val             4   12[BANK0 ] unsigned long 
  1912 ;;  prec            2   30[BANK0 ] int 
  1913 ;;  width           2   28[BANK0 ] int 
  1914 ;;  flag            2   18[BANK0 ] unsigned short 
  1915 ;;  eexp            2   16[BANK0 ] int 
  1916 ;;  len             2   10[BANK0 ] unsigned int 
  1917 ;;  cp              2    8[BANK0 ] PTR const unsigned char 
  1918 ;;		 -> ?_sprintf(2), STR_9(7), ?_printf(2), NULL(0), 
  1919 ;;		 -> main@InBytes(32), main@OutBytes(32), 
  1920 ;;  c               1   32[BANK0 ] unsigned char 
  1921 ;;  d               1    0        unsigned char 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  2   81[COMRAM] int 
  1924 ;; Registers used:
  1925 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1926 ;; Tracked objects:
  1927 ;;		On entry : 3F/0
  1928 ;;		On exit  : 3F/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1931 ;;      Params:         4       0       0       0
  1932 ;;      Locals:         0      29       0       0
  1933 ;;      Temps:          0       4       0       0
  1934 ;;      Totals:         4      33       0       0
  1935 ;;Total ram usage:       37 bytes
  1936 ;; Hardware stack levels used: 1
  1937 ;; Hardware stack levels required when called: 3
  1938 ;; This function calls:
  1939 ;;		Absolute function
  1940 ;;		___awdiv
  1941 ;;		___fladd
  1942 ;;		___fleq
  1943 ;;		___flge
  1944 ;;		___flmul
  1945 ;;		___flneg
  1946 ;;		___flsub
  1947 ;;		___fltol
  1948 ;;		___lldiv
  1949 ;;		___llmod
  1950 ;;		___wmul
  1951 ;;		___xxtofl
  1952 ;;		__div_to_l_
  1953 ;;		__tdiv_to_l_
  1954 ;;		_fround
  1955 ;;		_isdigit
  1956 ;;		_putch
  1957 ;;		_scale
  1958 ;; This function is called by:
  1959 ;;		_printf
  1960 ;;		_sprintf
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           	psect	text4
  1965  0000C8                     __ptext4:
  1966                           	callstack 0
  1967  0000C8                     __doprnt:
  1968                           	callstack 26
  1969                           
  1970                           ; BSR set to: 0
  1971                           ;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 517: int prec;;doprnt.c: 525
      +                          : unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: double fval;;doprnt.c: 534:
      +                           int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;doprnt.c: 542: double
      +                           integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long val;;doprnt.c: 546: unsign
      +                          ed len;;doprnt.c: 547: const char * cp;;doprnt.c: 553: while((c = *f++)) {
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;incstack = 0
  1975  0000C8  EFE4  F008         	goto	u7370
  1976  0000CC                     l5415:
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;doprnt.c: 555: if(c != '%')
  1980  0000CC  0E25               	movlw	37
  1981  0000CE  1980               	xorwf	__doprnt@c& (0+255),w,b
  1982  0000D0  B4D8               	btfsc	status,2,c
  1983  0000D2  D031               	goto	l5425
  1984                           
  1985                           ; BSR set to: 0
  1986  0000D4  5052               	movf	__doprnt@pb^0,w,c
  1987  0000D6  6ED9               	movwf	fsr2l,c
  1988  0000D8  6ADA               	clrf	fsr2h,c
  1989  0000DA  0E02               	movlw	2
  1990  0000DC  26D9               	addwf	fsr2l,f,c
  1991  0000DE  50DE               	movf	postinc2,w,c
  1992  0000E0  10DE               	iorwf	postinc2,w,c
  1993  0000E2  B4D8               	btfsc	status,2,c
  1994  0000E4  D013               	goto	l5421
  1995                           
  1996                           ; BSR set to: 0
  1997  0000E6  5052               	movf	__doprnt@pb^0,w,c
  1998  0000E8  6ED9               	movwf	fsr2l,c
  1999  0000EA  6ADA               	clrf	fsr2h,c
  2000  0000EC  0E02               	movlw	2
  2001  0000EE  26D9               	addwf	fsr2l,f,c
  2002  0000F0  D802               	call	u6438
  2003  0000F2  EFE4  F008         	goto	u7370
  2004  0000F6                     u6438:
  2005  0000F6  0005               	push	
  2006  0000F8  6EFA               	movwf	pclath,c
  2007  0000FA  50DE               	movf	postinc2,w,c
  2008  0000FC  6EFD               	movwf	tosl,c
  2009  0000FE  50DE               	movf	postinc2,w,c
  2010  000100  6EFE               	movwf	tosh,c
  2011  000102  50F8               	movf	tblptru,w,c
  2012  000104  6EFF               	movwf	tosu,c
  2013  000106  50FA               	movf	pclath,w,c
  2014  000108  5180               	movf	__doprnt@c& (0+255),w,b
  2015  00010A  0012               	return		;indir
  2016  00010C                     l5421:
  2017                           
  2018                           ; BSR set to: 0
  2019  00010C  5052               	movf	__doprnt@pb^0,w,c
  2020  00010E  6ED9               	movwf	fsr2l,c
  2021  000110  6ADA               	clrf	fsr2h,c
  2022  000112  CFDE F060          	movff	postinc2,??__doprnt
  2023  000116  CFDD F061          	movff	postdec2,??__doprnt+1
  2024  00011A  C060  FFD9         	movff	??__doprnt,fsr2l
  2025  00011E  C061  FFDA         	movff	??__doprnt+1,fsr2h
  2026  000122  C080  FFDF         	movff	__doprnt@c,indf2
  2027                           
  2028                           ; BSR set to: 0
  2029  000126  5052               	movf	__doprnt@pb^0,w,c
  2030  000128  6ED9               	movwf	fsr2l,c
  2031  00012A  6ADA               	clrf	fsr2h,c
  2032  00012C  2ADE               	incf	postinc2,f,c
  2033  00012E  0E00               	movlw	0
  2034  000130  22DD               	addwfc	postdec2,f,c
  2035  000132  EFE4  F008         	goto	u7370
  2036  000136                     l5425:
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  2040  000136  0E00               	movlw	0
  2041  000138  6F7D               	movwf	(__doprnt@width+1)& (0+255),b
  2042  00013A  0E00               	movlw	0
  2043  00013C  6F7C               	movwf	__doprnt@width& (0+255),b
  2044                           
  2045                           ;doprnt.c: 565: flag = 0;
  2046  00013E  0E00               	movlw	0
  2047  000140  6F73               	movwf	(__doprnt@flag+1)& (0+255),b
  2048  000142  0E00               	movlw	0
  2049  000144  6F72               	movwf	__doprnt@flag& (0+255),b
  2050  000146  D003               	goto	l5431
  2051  000148                     l5427:
  2052                           
  2053                           ; BSR set to: 0
  2054                           ;doprnt.c: 597: flag |= 0x04;
  2055  000148  8572               	bsf	__doprnt@flag& (0+255),2,b
  2056                           
  2057                           ;doprnt.c: 598: f++;
  2058  00014A  4A53               	infsnz	__doprnt@f^0,f,c
  2059  00014C  2A54               	incf	(__doprnt@f+1)^0,f,c
  2060  00014E                     l5431:
  2061                           
  2062                           ; BSR set to: 0
  2063  00014E  C053  FFF6         	movff	__doprnt@f,tblptrl
  2064  000152  C054  FFF7         	movff	__doprnt@f+1,tblptrh
  2065  000156                     	if	0	;tblptru may be non-zero
  2066  000156                     	endif
  2067  000156                     	if	0	;tblptru may be non-zero
  2068  000156                     	endif
  2069  000156  0008               	tblrd		*
  2070  000158  50F5               	movf	tablat,w,c
  2071                           
  2072                           ; Switch size 1, requested type "simple"
  2073                           ; Number of cases is 1, Range of values is 48 to 48
  2074                           ; switch strategies available:
  2075                           ; Name         Instructions Cycles
  2076                           ; simple_byte            4     3 (average)
  2077                           ;	Chosen strategy is simple_byte
  2078  00015A  0A30               	xorlw	48	; case 48
  2079  00015C  B4D8               	btfsc	status,2,c
  2080  00015E  D7F4               	goto	l5427
  2081                           
  2082                           ; BSR set to: 0
  2083                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  2084  000160  C053  FFF6         	movff	__doprnt@f,tblptrl
  2085  000164  C054  FFF7         	movff	__doprnt@f+1,tblptrh
  2086  000168                     	if	0	;tblptru may be non-zero
  2087  000168                     	endif
  2088  000168                     	if	0	;tblptru may be non-zero
  2089  000168                     	endif
  2090  000168  0008               	tblrd		*
  2091  00016A  50F5               	movf	tablat,w,c
  2092  00016C  EC50  F015         	call	_isdigit
  2093  000170  A0D8               	btfss	status,0,c
  2094  000172  D034               	goto	u6450
  2095                           
  2096                           ;doprnt.c: 615: width = 0;
  2097  000174  0E00               	movlw	0
  2098  000176  0100               	movlb	0	; () banked
  2099  000178  6F7D               	movwf	(__doprnt@width+1)& (0+255),b
  2100  00017A  0E00               	movlw	0
  2101  00017C  6F7C               	movwf	__doprnt@width& (0+255),b
  2102  00017E                     l5437:
  2103                           
  2104                           ;doprnt.c: 617: width *= 10;
  2105  00017E  C07C  F004         	movff	__doprnt@width,___wmul@multiplier
  2106  000182  C07D  F005         	movff	__doprnt@width+1,___wmul@multiplier+1
  2107  000186  0E00               	movlw	0
  2108  000188  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  2109  00018A  0E0A               	movlw	10
  2110  00018C  6E06               	movwf	___wmul@multiplicand^0,c
  2111  00018E  EC2A  F015         	call	___wmul	;wreg free
  2112  000192  C004  F07C         	movff	?___wmul,__doprnt@width
  2113  000196  C005  F07D         	movff	?___wmul+1,__doprnt@width+1
  2114                           
  2115                           ;doprnt.c: 618: width += *f++ - '0';
  2116  00019A  0ED0               	movlw	208
  2117  00019C  0100               	movlb	0	; () banked
  2118  00019E  6F60               	movwf	??__doprnt& (0+255),b
  2119  0001A0  0EFF               	movlw	255
  2120  0001A2  6F61               	movwf	(??__doprnt+1)& (0+255),b
  2121  0001A4  C053  FFF6         	movff	__doprnt@f,tblptrl
  2122  0001A8  C054  FFF7         	movff	__doprnt@f+1,tblptrh
  2123  0001AC                     	if	0	;tblptru may be non-zero
  2124  0001AC                     	endif
  2125  0001AC                     	if	0	;tblptru may be non-zero
  2126  0001AC                     	endif
  2127  0001AC  0008               	tblrd		*
  2128  0001AE  50F5               	movf	tablat,w,c
  2129  0001B0  6F62               	movwf	(??__doprnt+2)& (0+255),b
  2130  0001B2  6B63               	clrf	(??__doprnt+3)& (0+255),b
  2131  0001B4  5160               	movf	??__doprnt& (0+255),w,b
  2132  0001B6  2762               	addwf	(??__doprnt+2)& (0+255),f,b
  2133  0001B8  5161               	movf	(??__doprnt+1)& (0+255),w,b
  2134  0001BA  2363               	addwfc	(??__doprnt+3)& (0+255),f,b
  2135  0001BC  5162               	movf	(??__doprnt+2)& (0+255),w,b
  2136  0001BE  277C               	addwf	__doprnt@width& (0+255),f,b
  2137  0001C0  5163               	movf	(??__doprnt+3)& (0+255),w,b
  2138  0001C2  237D               	addwfc	(__doprnt@width+1)& (0+255),f,b
  2139                           
  2140                           ; BSR set to: 0
  2141  0001C4  4A53               	infsnz	__doprnt@f^0,f,c
  2142  0001C6  2A54               	incf	(__doprnt@f+1)^0,f,c
  2143                           
  2144                           ; BSR set to: 0
  2145                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  2146  0001C8  C053  FFF6         	movff	__doprnt@f,tblptrl
  2147  0001CC  C054  FFF7         	movff	__doprnt@f+1,tblptrh
  2148  0001D0                     	if	0	;tblptru may be non-zero
  2149  0001D0                     	endif
  2150  0001D0                     	if	0	;tblptru may be non-zero
  2151  0001D0                     	endif
  2152  0001D0  0008               	tblrd		*
  2153  0001D2  50F5               	movf	tablat,w,c
  2154  0001D4  EC50  F015         	call	_isdigit
  2155  0001D8  B0D8               	btfsc	status,0,c
  2156  0001DA  D7D1               	goto	l5437
  2157  0001DC                     u6450:
  2158                           
  2159                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
  2160  0001DC  C053  FFF6         	movff	__doprnt@f,tblptrl
  2161  0001E0  C054  FFF7         	movff	__doprnt@f+1,tblptrh
  2162  0001E4                     	if	0	;tblptru may be non-zero
  2163  0001E4                     	endif
  2164  0001E4                     	if	0	;tblptru may be non-zero
  2165  0001E4                     	endif
  2166  0001E4  0008               	tblrd		*
  2167  0001E6  50F5               	movf	tablat,w,c
  2168  0001E8  0A2E               	xorlw	46
  2169  0001EA  A4D8               	btfss	status,2,c
  2170  0001EC  D039               	goto	l5459
  2171                           
  2172                           ;doprnt.c: 629: flag |= 0x4000;
  2173  0001EE  0100               	movlb	0	; () banked
  2174  0001F0  8D73               	bsf	(__doprnt@flag+1)& (0+255),6,b
  2175                           
  2176                           ;doprnt.c: 630: f++;
  2177  0001F2  4A53               	infsnz	__doprnt@f^0,f,c
  2178  0001F4  2A54               	incf	(__doprnt@f+1)^0,f,c
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  2182  0001F6  0E00               	movlw	0
  2183  0001F8  6F7F               	movwf	(__doprnt@prec+1)& (0+255),b
  2184  0001FA  0E00               	movlw	0
  2185  0001FC  6F7E               	movwf	__doprnt@prec& (0+255),b
  2186                           
  2187                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  2188  0001FE  D025               	goto	l5457
  2189  000200                     l5451:
  2190                           
  2191                           ;doprnt.c: 647: prec *= 10;
  2192  000200  C07E  F004         	movff	__doprnt@prec,___wmul@multiplier
  2193  000204  C07F  F005         	movff	__doprnt@prec+1,___wmul@multiplier+1
  2194  000208  0E00               	movlw	0
  2195  00020A  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  2196  00020C  0E0A               	movlw	10
  2197  00020E  6E06               	movwf	___wmul@multiplicand^0,c
  2198  000210  EC2A  F015         	call	___wmul	;wreg free
  2199  000214  C004  F07E         	movff	?___wmul,__doprnt@prec
  2200  000218  C005  F07F         	movff	?___wmul+1,__doprnt@prec+1
  2201                           
  2202                           ;doprnt.c: 648: prec += *f++ - '0';
  2203  00021C  0ED0               	movlw	208
  2204  00021E  0100               	movlb	0	; () banked
  2205  000220  6F60               	movwf	??__doprnt& (0+255),b
  2206  000222  0EFF               	movlw	255
  2207  000224  6F61               	movwf	(??__doprnt+1)& (0+255),b
  2208  000226  C053  FFF6         	movff	__doprnt@f,tblptrl
  2209  00022A  C054  FFF7         	movff	__doprnt@f+1,tblptrh
  2210  00022E                     	if	0	;tblptru may be non-zero
  2211  00022E                     	endif
  2212  00022E                     	if	0	;tblptru may be non-zero
  2213  00022E                     	endif
  2214  00022E  0008               	tblrd		*
  2215  000230  50F5               	movf	tablat,w,c
  2216  000232  6F62               	movwf	(??__doprnt+2)& (0+255),b
  2217  000234  6B63               	clrf	(??__doprnt+3)& (0+255),b
  2218  000236  5160               	movf	??__doprnt& (0+255),w,b
  2219  000238  2762               	addwf	(??__doprnt+2)& (0+255),f,b
  2220  00023A  5161               	movf	(??__doprnt+1)& (0+255),w,b
  2221  00023C  2363               	addwfc	(??__doprnt+3)& (0+255),f,b
  2222  00023E  5162               	movf	(??__doprnt+2)& (0+255),w,b
  2223  000240  277E               	addwf	__doprnt@prec& (0+255),f,b
  2224  000242  5163               	movf	(??__doprnt+3)& (0+255),w,b
  2225  000244  237F               	addwfc	(__doprnt@prec+1)& (0+255),f,b
  2226                           
  2227                           ; BSR set to: 0
  2228  000246  4A53               	infsnz	__doprnt@f^0,f,c
  2229  000248  2A54               	incf	(__doprnt@f+1)^0,f,c
  2230  00024A                     l5457:
  2231                           
  2232                           ; BSR set to: 0
  2233  00024A  C053  FFF6         	movff	__doprnt@f,tblptrl
  2234  00024E  C054  FFF7         	movff	__doprnt@f+1,tblptrh
  2235  000252                     	if	0	;tblptru may be non-zero
  2236  000252                     	endif
  2237  000252                     	if	0	;tblptru may be non-zero
  2238  000252                     	endif
  2239  000252  0008               	tblrd		*
  2240  000254  50F5               	movf	tablat,w,c
  2241  000256  EC50  F015         	call	_isdigit
  2242  00025A  A0D8               	btfss	status,0,c
  2243  00025C  D0F7               	goto	l5515
  2244  00025E  D7D0               	goto	l5451
  2245  000260                     l5459:
  2246                           
  2247                           ;doprnt.c: 652: prec = 0;
  2248  000260  0E00               	movlw	0
  2249  000262  0100               	movlb	0	; () banked
  2250  000264  6F7F               	movwf	(__doprnt@prec+1)& (0+255),b
  2251  000266  0E00               	movlw	0
  2252  000268  6F7E               	movwf	__doprnt@prec& (0+255),b
  2253                           
  2254                           ; BSR set to: 0
  2255                           ;doprnt.c: 654: flag |= 0x1000;
  2256  00026A  8973               	bsf	(__doprnt@flag+1)& (0+255),4,b
  2257  00026C  D0EF               	goto	l5515
  2258  00026E                     l5463:
  2259                           
  2260                           ; BSR set to: 0
  2261                           ;doprnt.c: 689: flag |= 0x400;
  2262  00026E  8573               	bsf	(__doprnt@flag+1)& (0+255),2,b
  2263                           
  2264                           ;doprnt.c: 690: break;
  2265  000270  D10A               	goto	l5517
  2266  000272                     l5465:
  2267                           
  2268                           ; BSR set to: 0
  2269                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  2270  000272  5055               	movf	__doprnt@ap^0,w,c
  2271  000274  6ED9               	movwf	fsr2l,c
  2272  000276  6ADA               	clrf	fsr2h,c
  2273  000278  0E02               	movlw	2
  2274  00027A  26DF               	addwf	indf2,f,c
  2275  00027C  5CDF               	subwf	indf2,w,c
  2276  00027E  6ED9               	movwf	fsr2l,c
  2277  000280  6ADA               	clrf	fsr2h,c
  2278  000282  CFDE F068          	movff	postinc2,__doprnt@cp
  2279  000286  CFDE F069          	movff	postinc2,__doprnt@cp+1
  2280                           
  2281                           ; BSR set to: 0
  2282                           ;doprnt.c: 766: if(!cp)
  2283  00028A  5168               	movf	__doprnt@cp& (0+255),w,b
  2284  00028C  1169               	iorwf	(__doprnt@cp+1)& (0+255),w,b
  2285  00028E  A4D8               	btfss	status,2,c
  2286  000290  D004               	goto	l5471
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;doprnt.c: 767: cp = "(null)";
  2290  000292  0EF7               	movlw	low STR_9
  2291  000294  6F68               	movwf	__doprnt@cp& (0+255),b
  2292  000296  0E3F               	movlw	high STR_9
  2293  000298  6F69               	movwf	(__doprnt@cp+1)& (0+255),b
  2294  00029A                     l5471:
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;doprnt.c: 771: len = 0;
  2298  00029A  0E00               	movlw	0
  2299  00029C  6F6B               	movwf	(__doprnt@len+1)& (0+255),b
  2300  00029E  0E00               	movlw	0
  2301  0002A0  6F6A               	movwf	__doprnt@len& (0+255),b
  2302                           
  2303                           ;doprnt.c: 772: while(cp[len])
  2304  0002A2  D003               	goto	l5475
  2305  0002A4                     l5473:
  2306                           
  2307                           ;doprnt.c: 773: len++;
  2308  0002A4  0100               	movlb	0	; () banked
  2309  0002A6  4B6A               	infsnz	__doprnt@len& (0+255),f,b
  2310  0002A8  2B6B               	incf	(__doprnt@len+1)& (0+255),f,b
  2311  0002AA                     l5475:
  2312                           
  2313                           ; BSR set to: 0
  2314  0002AA  516A               	movf	__doprnt@len& (0+255),w,b
  2315  0002AC  2568               	addwf	__doprnt@cp& (0+255),w,b
  2316  0002AE  6F60               	movwf	??__doprnt& (0+255),b
  2317  0002B0  516B               	movf	(__doprnt@len+1)& (0+255),w,b
  2318  0002B2  2169               	addwfc	(__doprnt@cp+1)& (0+255),w,b
  2319  0002B4  6F61               	movwf	(??__doprnt+1)& (0+255),b
  2320  0002B6  C060  FFF6         	movff	??__doprnt,tblptrl
  2321  0002BA  C061  FFF7         	movff	??__doprnt+1,tblptrh
  2322  0002BE  6AF8               	clrf	tblptru,c
  2323  0002C0  0E02               	movlw	(high __ramtop+-1)
  2324  0002C2  64F7               	cpfsgt	tblptrh,c
  2325  0002C4  D003               	bra	u6497
  2326  0002C6  0008               	tblrd		*
  2327  0002C8  50F5               	movf	tablat,w,c
  2328  0002CA  D005               	bra	u6490
  2329  0002CC                     u6497:
  2330  0002CC  CFF6 FFE9          	movff	tblptrl,fsr0l
  2331  0002D0  CFF7 FFEA          	movff	tblptrh,fsr0h
  2332  0002D4  50EF               	movf	indf0,w,c
  2333  0002D6                     u6490:
  2334  0002D6  0900               	iorlw	0
  2335  0002D8  A4D8               	btfss	status,2,c
  2336  0002DA  D7E4               	goto	l5473
  2337                           
  2338                           ;doprnt.c: 779: if(prec && (prec < ((int)len)))
  2339  0002DC  0100               	movlb	0	; () banked
  2340  0002DE  517E               	movf	__doprnt@prec& (0+255),w,b
  2341  0002E0  117F               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  2342  0002E2  B4D8               	btfsc	status,2,c
  2343  0002E4  D00E               	goto	l5483
  2344                           
  2345                           ; BSR set to: 0
  2346  0002E6  516A               	movf	__doprnt@len& (0+255),w,b
  2347  0002E8  5D7E               	subwf	__doprnt@prec& (0+255),w,b
  2348  0002EA  517F               	movf	(__doprnt@prec+1)& (0+255),w,b
  2349  0002EC  0A80               	xorlw	128
  2350  0002EE  6F60               	movwf	??__doprnt& (0+255),b
  2351  0002F0  516B               	movf	(__doprnt@len+1)& (0+255),w,b
  2352  0002F2  0A80               	xorlw	128
  2353  0002F4  5960               	subwfb	??__doprnt& (0+255),w,b
  2354  0002F6  B0D8               	btfsc	status,0,c
  2355  0002F8  D004               	goto	l5483
  2356                           
  2357                           ; BSR set to: 0
  2358                           ;doprnt.c: 780: len = (unsigned int)prec;
  2359  0002FA  C07E  F06A         	movff	__doprnt@prec,__doprnt@len
  2360  0002FE  C07F  F06B         	movff	__doprnt@prec+1,__doprnt@len+1
  2361  000302                     l5483:
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;doprnt.c: 783: if(((unsigned)width) > len)
  2365  000302  517C               	movf	__doprnt@width& (0+255),w,b
  2366  000304  5D6A               	subwf	__doprnt@len& (0+255),w,b
  2367  000306  517D               	movf	(__doprnt@width+1)& (0+255),w,b
  2368  000308  596B               	subwfb	(__doprnt@len+1)& (0+255),w,b
  2369  00030A  B0D8               	btfsc	status,0,c
  2370  00030C  D005               	goto	l5487
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;doprnt.c: 784: width -= len;
  2374  00030E  516A               	movf	__doprnt@len& (0+255),w,b
  2375  000310  5F7C               	subwf	__doprnt@width& (0+255),f,b
  2376  000312  516B               	movf	(__doprnt@len+1)& (0+255),w,b
  2377  000314  5B7D               	subwfb	(__doprnt@width+1)& (0+255),f,b
  2378  000316  D033               	goto	l5497
  2379  000318                     l5487:
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;doprnt.c: 785: else;doprnt.c: 786: width = 0;
  2383  000318  0E00               	movlw	0
  2384  00031A  6F7D               	movwf	(__doprnt@width+1)& (0+255),b
  2385  00031C  0E00               	movlw	0
  2386  00031E  6F7C               	movwf	__doprnt@width& (0+255),b
  2387  000320  D02E               	goto	l5497
  2388  000322                     l5489:
  2389                           
  2390                           ; BSR set to: 0
  2391  000322  5052               	movf	__doprnt@pb^0,w,c
  2392  000324  6ED9               	movwf	fsr2l,c
  2393  000326  6ADA               	clrf	fsr2h,c
  2394  000328  0E02               	movlw	2
  2395  00032A  26D9               	addwf	fsr2l,f,c
  2396  00032C  50DE               	movf	postinc2,w,c
  2397  00032E  10DE               	iorwf	postinc2,w,c
  2398  000330  B4D8               	btfsc	status,2,c
  2399  000332  D012               	goto	l5493
  2400                           
  2401                           ; BSR set to: 0
  2402  000334  5052               	movf	__doprnt@pb^0,w,c
  2403  000336  6ED9               	movwf	fsr2l,c
  2404  000338  6ADA               	clrf	fsr2h,c
  2405  00033A  0E02               	movlw	2
  2406  00033C  26D9               	addwf	fsr2l,f,c
  2407  00033E  D801               	call	u6558
  2408  000340  D01E               	goto	l5497
  2409  000342                     u6558:
  2410  000342  0005               	push	
  2411  000344  6EFA               	movwf	pclath,c
  2412  000346  50DE               	movf	postinc2,w,c
  2413  000348  6EFD               	movwf	tosl,c
  2414  00034A  50DE               	movf	postinc2,w,c
  2415  00034C  6EFE               	movwf	tosh,c
  2416  00034E  50F8               	movf	tblptru,w,c
  2417  000350  6EFF               	movwf	tosu,c
  2418  000352  50FA               	movf	pclath,w,c
  2419  000354  0E20               	movlw	32
  2420  000356  0012               	return		;indir
  2421  000358                     l5493:
  2422                           
  2423                           ; BSR set to: 0
  2424  000358  5052               	movf	__doprnt@pb^0,w,c
  2425  00035A  6ED9               	movwf	fsr2l,c
  2426  00035C  6ADA               	clrf	fsr2h,c
  2427  00035E  CFDE F060          	movff	postinc2,??__doprnt
  2428  000362  CFDD F061          	movff	postdec2,??__doprnt+1
  2429  000366  C060  FFD9         	movff	??__doprnt,fsr2l
  2430  00036A  C061  FFDA         	movff	??__doprnt+1,fsr2h
  2431  00036E  0E20               	movlw	32
  2432  000370  6EDF               	movwf	indf2,c
  2433                           
  2434                           ; BSR set to: 0
  2435  000372  5052               	movf	__doprnt@pb^0,w,c
  2436  000374  6ED9               	movwf	fsr2l,c
  2437  000376  6ADA               	clrf	fsr2h,c
  2438  000378  2ADE               	incf	postinc2,f,c
  2439  00037A  0E00               	movlw	0
  2440  00037C  22DD               	addwfc	postdec2,f,c
  2441  00037E                     l5497:
  2442  00037E  0100               	movlb	0	; () banked
  2443  000380  077C               	decf	__doprnt@width& (0+255),f,b
  2444  000382  A0D8               	btfss	status,0,c
  2445  000384  077D               	decf	(__doprnt@width+1)& (0+255),f,b
  2446  000386  297C               	incf	__doprnt@width& (0+255),w,b
  2447  000388  E1CC               	bnz	l5489
  2448  00038A  297D               	incf	(__doprnt@width+1)& (0+255),w,b
  2449  00038C  B4D8               	btfsc	status,2,c
  2450  00038E  D054               	goto	l5511
  2451  000390  D7C8               	goto	l5489
  2452  000392                     l5499:
  2453                           
  2454                           ; BSR set to: 0
  2455  000392  5052               	movf	__doprnt@pb^0,w,c
  2456  000394  6ED9               	movwf	fsr2l,c
  2457  000396  6ADA               	clrf	fsr2h,c
  2458  000398  0E02               	movlw	2
  2459  00039A  26D9               	addwf	fsr2l,f,c
  2460  00039C  50DE               	movf	postinc2,w,c
  2461  00039E  10DE               	iorwf	postinc2,w,c
  2462  0003A0  B4D8               	btfsc	status,2,c
  2463  0003A2  D025               	goto	l5505
  2464                           
  2465                           ; BSR set to: 0
  2466  0003A4  5052               	movf	__doprnt@pb^0,w,c
  2467  0003A6  6ED9               	movwf	fsr2l,c
  2468  0003A8  6ADA               	clrf	fsr2h,c
  2469  0003AA  0E02               	movlw	2
  2470  0003AC  26D9               	addwf	fsr2l,f,c
  2471  0003AE  D801               	call	u6588
  2472  0003B0  D01A               	goto	u6589
  2473  0003B2                     u6588:
  2474  0003B2  0005               	push	
  2475  0003B4  6EFA               	movwf	pclath,c
  2476  0003B6  50DE               	movf	postinc2,w,c
  2477  0003B8  6EFD               	movwf	tosl,c
  2478  0003BA  50DE               	movf	postinc2,w,c
  2479  0003BC  6EFE               	movwf	tosh,c
  2480  0003BE  50F8               	movf	tblptru,w,c
  2481  0003C0  6EFF               	movwf	tosu,c
  2482  0003C2  50FA               	movf	pclath,w,c
  2483  0003C4  C068  FFF6         	movff	__doprnt@cp,tblptrl
  2484  0003C8  C069  FFF7         	movff	__doprnt@cp+1,tblptrh
  2485  0003CC  6AF8               	clrf	tblptru,c
  2486  0003CE  0E02               	movlw	(high __ramtop+-1)
  2487  0003D0  64F7               	cpfsgt	tblptrh,c
  2488  0003D2  D003               	bra	u6597
  2489  0003D4  0008               	tblrd		*
  2490  0003D6  50F5               	movf	tablat,w,c
  2491  0003D8  D005               	bra	u6590
  2492  0003DA                     u6597:
  2493  0003DA  CFF6 FFE9          	movff	tblptrl,fsr0l
  2494  0003DE  CFF7 FFEA          	movff	tblptrh,fsr0h
  2495  0003E2  50EF               	movf	indf0,w,c
  2496  0003E4                     u6590:
  2497  0003E4  0012               	return		;indir
  2498  0003E6                     u6589:
  2499  0003E6  0100               	movlb	0	; () banked
  2500  0003E8  4B68               	infsnz	__doprnt@cp& (0+255),f,b
  2501  0003EA  2B69               	incf	(__doprnt@cp+1)& (0+255),f,b
  2502  0003EC  D025               	goto	l5511
  2503  0003EE                     l5505:
  2504                           
  2505                           ; BSR set to: 0
  2506  0003EE  C068  FFF6         	movff	__doprnt@cp,tblptrl
  2507  0003F2  C069  FFF7         	movff	__doprnt@cp+1,tblptrh
  2508  0003F6  6AF8               	clrf	tblptru,c
  2509  0003F8  5052               	movf	__doprnt@pb^0,w,c
  2510  0003FA  6ED9               	movwf	fsr2l,c
  2511  0003FC  6ADA               	clrf	fsr2h,c
  2512  0003FE  CFDE F060          	movff	postinc2,??__doprnt
  2513  000402  CFDD F061          	movff	postdec2,??__doprnt+1
  2514  000406  C060  FFD9         	movff	??__doprnt,fsr2l
  2515  00040A  C061  FFDA         	movff	??__doprnt+1,fsr2h
  2516  00040E  0E02               	movlw	(high __ramtop+-1)
  2517  000410  64F7               	cpfsgt	tblptrh,c
  2518  000412  D003               	bra	u6607
  2519  000414  0008               	tblrd		*
  2520  000416  50F5               	movf	tablat,w,c
  2521  000418  D005               	bra	u6600
  2522  00041A                     u6607:
  2523  00041A  CFF6 FFE9          	movff	tblptrl,fsr0l
  2524  00041E  CFF7 FFEA          	movff	tblptrh,fsr0h
  2525  000422  50EF               	movf	indf0,w,c
  2526  000424                     u6600:
  2527  000424  6EDF               	movwf	indf2,c
  2528  000426  0100               	movlb	0	; () banked
  2529  000428  4B68               	infsnz	__doprnt@cp& (0+255),f,b
  2530  00042A  2B69               	incf	(__doprnt@cp+1)& (0+255),f,b
  2531                           
  2532                           ; BSR set to: 0
  2533  00042C  5052               	movf	__doprnt@pb^0,w,c
  2534  00042E  6ED9               	movwf	fsr2l,c
  2535  000430  6ADA               	clrf	fsr2h,c
  2536  000432  2ADE               	incf	postinc2,f,c
  2537  000434  0E00               	movlw	0
  2538  000436  22DD               	addwfc	postdec2,f,c
  2539  000438                     l5511:
  2540                           
  2541                           ; BSR set to: 0
  2542  000438  076A               	decf	__doprnt@len& (0+255),f,b
  2543  00043A  A0D8               	btfss	status,0,c
  2544  00043C  076B               	decf	(__doprnt@len+1)& (0+255),f,b
  2545  00043E  296A               	incf	__doprnt@len& (0+255),w,b
  2546  000440  E1A8               	bnz	l5499
  2547  000442  296B               	incf	(__doprnt@len+1)& (0+255),w,b
  2548  000444  B4D8               	btfsc	status,2,c
  2549  000446  EFE4  F008         	goto	u7370
  2550  00044A  D7A3               	goto	l5499
  2551  00044C                     l5515:
  2552  00044C  C053  FFF6         	movff	__doprnt@f,tblptrl
  2553  000450  C054  FFF7         	movff	__doprnt@f+1,tblptrh
  2554  000454  4A53               	infsnz	__doprnt@f^0,f,c
  2555  000456  2A54               	incf	(__doprnt@f+1)^0,f,c
  2556  000458                     	if	0	;tblptru may be non-zero
  2557  000458                     	endif
  2558  000458                     	if	0	;tblptru may be non-zero
  2559  000458                     	endif
  2560  000458  0008               	tblrd		*
  2561  00045A  CFF5 F080          	movff	tablat,__doprnt@c
  2562  00045E  0100               	movlb	0	; () banked
  2563  000460  5180               	movf	__doprnt@c& (0+255),w,b
  2564                           
  2565                           ; Switch size 1, requested type "simple"
  2566                           ; Number of cases is 5, Range of values is 0 to 115
  2567                           ; switch strategies available:
  2568                           ; Name         Instructions Cycles
  2569                           ; simple_byte           16     9 (average)
  2570                           ;	Chosen strategy is simple_byte
  2571  000462  0A00               	xorlw	0	; case 0
  2572  000464  B4D8               	btfsc	status,2,c
  2573  000466  EFF2  F008         	goto	u7380
  2574  00046A  0A64               	xorlw	100	; case 100
  2575  00046C  B4D8               	btfsc	status,2,c
  2576  00046E  D00B               	goto	l5517
  2577  000470  0A02               	xorlw	2	; case 102
  2578  000472  B4D8               	btfsc	status,2,c
  2579  000474  D6FC               	goto	l5463
  2580  000476  0A0F               	xorlw	15	; case 105
  2581  000478  B4D8               	btfsc	status,2,c
  2582  00047A  D005               	goto	l5517
  2583  00047C  0A1A               	xorlw	26	; case 115
  2584  00047E  B4D8               	btfsc	status,2,c
  2585  000480  D6F8               	goto	l5465
  2586  000482  EFE4  F008         	goto	u7370
  2587  000486                     l5517:
  2588                           
  2589                           ; BSR set to: 0
  2590                           ;doprnt.c: 851: if(flag & (0x700)) {
  2591  000486  0E07               	movlw	7
  2592  000488  1573               	andwf	(__doprnt@flag+1)& (0+255),w,b
  2593  00048A  B4D8               	btfsc	status,2,c
  2594  00048C  EFFD  F006         	goto	l5727
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;doprnt.c: 853: if(flag & 0x1000)
  2598  000490  A973               	btfss	(__doprnt@flag+1)& (0+255),4,b
  2599  000492  D004               	goto	l5523
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;doprnt.c: 855: prec = 6;
  2603  000494  0E00               	movlw	0
  2604  000496  6F7F               	movwf	(__doprnt@prec+1)& (0+255),b
  2605  000498  0E06               	movlw	6
  2606  00049A  6F7E               	movwf	__doprnt@prec& (0+255),b
  2607  00049C                     l5523:
  2608                           
  2609                           ; BSR set to: 0
  2610                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2611  00049C  5055               	movf	__doprnt@ap^0,w,c
  2612  00049E  6ED9               	movwf	fsr2l,c
  2613  0004A0  6ADA               	clrf	fsr2h,c
  2614  0004A2  CFDF F060          	movff	indf2,??__doprnt
  2615  0004A6  0E04               	movlw	4
  2616  0004A8  26DF               	addwf	indf2,f,c
  2617  0004AA  5160               	movf	??__doprnt& (0+255),w,b
  2618  0004AC  6ED9               	movwf	fsr2l,c
  2619  0004AE  6ADA               	clrf	fsr2h,c
  2620  0004B0  CFDE F078          	movff	postinc2,__doprnt@fval
  2621  0004B4  CFDE F079          	movff	postinc2,__doprnt@fval+1
  2622  0004B8  CFDE F07A          	movff	postinc2,__doprnt@fval+2
  2623  0004BC  CFDE F07B          	movff	postinc2,__doprnt@fval+3
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;doprnt.c: 857: if(fval < 0.0) {
  2627  0004C0  AF7B               	btfss	(__doprnt@fval+3)& (0+255),7,b
  2628  0004C2  D014               	goto	l5531
  2629                           
  2630                           ; BSR set to: 0
  2631                           ;doprnt.c: 858: fval = -fval;
  2632  0004C4  C078  F004         	movff	__doprnt@fval,___flneg@f1
  2633  0004C8  C079  F005         	movff	__doprnt@fval+1,___flneg@f1+1
  2634  0004CC  C07A  F006         	movff	__doprnt@fval+2,___flneg@f1+2
  2635  0004D0  C07B  F007         	movff	__doprnt@fval+3,___flneg@f1+3
  2636  0004D4  ECE9  F014         	call	___flneg
  2637  0004D8  C004  F078         	movff	?___flneg,__doprnt@fval
  2638  0004DC  C005  F079         	movff	?___flneg+1,__doprnt@fval+1
  2639  0004E0  C006  F07A         	movff	?___flneg+2,__doprnt@fval+2
  2640  0004E4  C007  F07B         	movff	?___flneg+3,__doprnt@fval+3
  2641                           
  2642                           ; BSR set to: 0
  2643                           ;doprnt.c: 859: flag |= 0x03;
  2644  0004E8  0E03               	movlw	3
  2645  0004EA  1372               	iorwf	__doprnt@flag& (0+255),f,b
  2646  0004EC                     l5531:
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  2650  0004EC  0E00               	movlw	0
  2651  0004EE  6F71               	movwf	(__doprnt@eexp+1)& (0+255),b
  2652  0004F0  0E00               	movlw	0
  2653  0004F2  6F70               	movwf	__doprnt@eexp& (0+255),b
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;doprnt.c: 862: if( fval!=0) {
  2657  0004F4  C078  F004         	movff	__doprnt@fval,___fleq@ff1
  2658  0004F8  C079  F005         	movff	__doprnt@fval+1,___fleq@ff1+1
  2659  0004FC  C07A  F006         	movff	__doprnt@fval+2,___fleq@ff1+2
  2660  000500  C07B  F007         	movff	__doprnt@fval+3,___fleq@ff1+3
  2661  000504  0E00               	movlw	0
  2662  000506  6E08               	movwf	___fleq@ff2^0,c
  2663  000508  0E00               	movlw	0
  2664  00050A  6E09               	movwf	(___fleq@ff2+1)^0,c
  2665  00050C  0E00               	movlw	0
  2666  00050E  6E0A               	movwf	(___fleq@ff2+2)^0,c
  2667  000510  0E00               	movlw	0
  2668  000512  6E0B               	movwf	(___fleq@ff2+3)^0,c
  2669  000514  ECAE  F012         	call	___fleq	;wreg free
  2670  000518  B0D8               	btfsc	status,0,c
  2671  00051A  D082               	goto	l5559
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  2675  00051C  357A               	rlcf	(__doprnt@fval+2)& (0+255),w,b
  2676  00051E  357B               	rlcf	(__doprnt@fval+3)& (0+255),w,b
  2677  000520  0F82               	addlw	130
  2678  000522  6F70               	movwf	__doprnt@eexp& (0+255),b
  2679  000524  6B71               	clrf	(__doprnt@eexp+1)& (0+255),b
  2680  000526  0EFF               	movlw	255
  2681  000528  2371               	addwfc	(__doprnt@eexp+1)& (0+255),f,b
  2682                           
  2683                           ; BSR set to: 0
  2684                           ;doprnt.c: 864: eexp--;
  2685  00052A  0770               	decf	__doprnt@eexp& (0+255),f,b
  2686  00052C  A0D8               	btfss	status,0,c
  2687  00052E  0771               	decf	(__doprnt@eexp+1)& (0+255),f,b
  2688                           
  2689                           ; BSR set to: 0
  2690                           ;doprnt.c: 865: eexp *= 3;
  2691  000530  C070  F004         	movff	__doprnt@eexp,___wmul@multiplier
  2692  000534  C071  F005         	movff	__doprnt@eexp+1,___wmul@multiplier+1
  2693  000538  0E00               	movlw	0
  2694  00053A  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  2695  00053C  0E03               	movlw	3
  2696  00053E  6E06               	movwf	___wmul@multiplicand^0,c
  2697  000540  EC2A  F015         	call	___wmul	;wreg free
  2698  000544  C004  F070         	movff	?___wmul,__doprnt@eexp
  2699  000548  C005  F071         	movff	?___wmul+1,__doprnt@eexp+1
  2700                           
  2701                           ;doprnt.c: 866: eexp /= 10;
  2702  00054C  C070  F00A         	movff	__doprnt@eexp,___awdiv@dividend
  2703  000550  C071  F00B         	movff	__doprnt@eexp+1,___awdiv@dividend+1
  2704  000554  0E00               	movlw	0
  2705  000556  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  2706  000558  0E0A               	movlw	10
  2707  00055A  6E0C               	movwf	___awdiv@divisor^0,c
  2708  00055C  ECF3  F012         	call	___awdiv	;wreg free
  2709  000560  C00A  F070         	movff	?___awdiv,__doprnt@eexp
  2710  000564  C00B  F071         	movff	?___awdiv+1,__doprnt@eexp+1
  2711                           
  2712                           ;doprnt.c: 867: if(eexp < 0)
  2713  000568  0100               	movlb	0	; () banked
  2714  00056A  AF71               	btfss	(__doprnt@eexp+1)& (0+255),7,b
  2715  00056C  D003               	goto	l5547
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;doprnt.c: 868: eexp--;
  2719  00056E  0770               	decf	__doprnt@eexp& (0+255),f,b
  2720  000570  A0D8               	btfss	status,0,c
  2721  000572  0771               	decf	(__doprnt@eexp+1)& (0+255),f,b
  2722  000574                     l5547:
  2723                           
  2724                           ; BSR set to: 0
  2725                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  2726  000574  5170               	movf	__doprnt@eexp& (0+255),w,b
  2727  000576  0800               	sublw	0
  2728  000578  ECF7  F008         	call	_scale
  2729  00057C  C02B  F074         	movff	?_scale,__doprnt@tmpval
  2730  000580  C02C  F075         	movff	?_scale+1,__doprnt@tmpval+1
  2731  000584  C02D  F076         	movff	?_scale+2,__doprnt@tmpval+2
  2732  000588  C02E  F077         	movff	?_scale+3,__doprnt@tmpval+3
  2733                           
  2734                           ;doprnt.c: 873: tmpval.integ *= fval;
  2735  00058C  C074  F012         	movff	__doprnt@tmpval,___flmul@b
  2736  000590  C075  F013         	movff	__doprnt@tmpval+1,___flmul@b+1
  2737  000594  C076  F014         	movff	__doprnt@tmpval+2,___flmul@b+2
  2738  000598  C077  F015         	movff	__doprnt@tmpval+3,___flmul@b+3
  2739  00059C  C078  F016         	movff	__doprnt@fval,___flmul@a
  2740  0005A0  C079  F017         	movff	__doprnt@fval+1,___flmul@a+1
  2741  0005A4  C07A  F018         	movff	__doprnt@fval+2,___flmul@a+2
  2742  0005A8  C07B  F019         	movff	__doprnt@fval+3,___flmul@a+3
  2743  0005AC  ECDF  F00A         	call	___flmul	;wreg free
  2744  0005B0  C012  F074         	movff	?___flmul,__doprnt@tmpval
  2745  0005B4  C013  F075         	movff	?___flmul+1,__doprnt@tmpval+1
  2746  0005B8  C014  F076         	movff	?___flmul+2,__doprnt@tmpval+2
  2747  0005BC  C015  F077         	movff	?___flmul+3,__doprnt@tmpval+3
  2748                           
  2749                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  2750  0005C0  C074  F004         	movff	__doprnt@tmpval,___flge@ff1
  2751  0005C4  C075  F005         	movff	__doprnt@tmpval+1,___flge@ff1+1
  2752  0005C8  C076  F006         	movff	__doprnt@tmpval+2,___flge@ff1+2
  2753  0005CC  C077  F007         	movff	__doprnt@tmpval+3,___flge@ff1+3
  2754  0005D0  0E00               	movlw	0
  2755  0005D2  6E08               	movwf	___flge@ff2^0,c
  2756  0005D4  0E00               	movlw	0
  2757  0005D6  6E09               	movwf	(___flge@ff2+1)^0,c
  2758  0005D8  0E80               	movlw	128
  2759  0005DA  6E0A               	movwf	(___flge@ff2+2)^0,c
  2760  0005DC  0E3F               	movlw	63
  2761  0005DE  6E0B               	movwf	(___flge@ff2+3)^0,c
  2762  0005E0  EC5C  F011         	call	___flge	;wreg free
  2763  0005E4  B0D8               	btfsc	status,0,c
  2764  0005E6  D005               	goto	l5555
  2765                           
  2766                           ;doprnt.c: 875: eexp--;
  2767  0005E8  0100               	movlb	0	; () banked
  2768  0005EA  0770               	decf	__doprnt@eexp& (0+255),f,b
  2769  0005EC  A0D8               	btfss	status,0,c
  2770  0005EE  0771               	decf	(__doprnt@eexp+1)& (0+255),f,b
  2771  0005F0  D017               	goto	l5559
  2772  0005F2                     l5555:
  2773                           
  2774                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  2775  0005F2  C074  F004         	movff	__doprnt@tmpval,___flge@ff1
  2776  0005F6  C075  F005         	movff	__doprnt@tmpval+1,___flge@ff1+1
  2777  0005FA  C076  F006         	movff	__doprnt@tmpval+2,___flge@ff1+2
  2778  0005FE  C077  F007         	movff	__doprnt@tmpval+3,___flge@ff1+3
  2779  000602  0E00               	movlw	0
  2780  000604  6E08               	movwf	___flge@ff2^0,c
  2781  000606  0E00               	movlw	0
  2782  000608  6E09               	movwf	(___flge@ff2+1)^0,c
  2783  00060A  0E20               	movlw	32
  2784  00060C  6E0A               	movwf	(___flge@ff2+2)^0,c
  2785  00060E  0E41               	movlw	65
  2786  000610  6E0B               	movwf	(___flge@ff2+3)^0,c
  2787  000612  EC5C  F011         	call	___flge	;wreg free
  2788  000616  A0D8               	btfss	status,0,c
  2789  000618  D003               	goto	l5559
  2790                           
  2791                           ;doprnt.c: 877: eexp++;
  2792  00061A  0100               	movlb	0	; () banked
  2793  00061C  4B70               	infsnz	__doprnt@eexp& (0+255),f,b
  2794  00061E  2B71               	incf	(__doprnt@eexp+1)& (0+255),f,b
  2795  000620                     l5559:
  2796                           
  2797                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  2798  000620  0100               	movlb	0	; () banked
  2799  000622  BF7F               	btfsc	(__doprnt@prec+1)& (0+255),7,b
  2800  000624  D006               	goto	u6690
  2801  000626  517F               	movf	(__doprnt@prec+1)& (0+255),w,b
  2802  000628  E121               	bnz	l5563
  2803  00062A  0E0D               	movlw	13
  2804  00062C  5D7E               	subwf	__doprnt@prec& (0+255),w,b
  2805  00062E  B0D8               	btfsc	status,0,c
  2806  000630  D01D               	goto	l5563
  2807  000632                     u6690:
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  2811  000632  C078  F03A         	movff	__doprnt@fval,___fladd@b
  2812  000636  C079  F03B         	movff	__doprnt@fval+1,___fladd@b+1
  2813  00063A  C07A  F03C         	movff	__doprnt@fval+2,___fladd@b+2
  2814  00063E  C07B  F03D         	movff	__doprnt@fval+3,___fladd@b+3
  2815  000642  517E               	movf	__doprnt@prec& (0+255),w,b
  2816  000644  ECFB  F00D         	call	_fround
  2817  000648  C02B  F03E         	movff	?_fround,___fladd@a
  2818  00064C  C02C  F03F         	movff	?_fround+1,___fladd@a+1
  2819  000650  C02D  F040         	movff	?_fround+2,___fladd@a+2
  2820  000654  C02E  F041         	movff	?_fround+3,___fladd@a+3
  2821  000658  EC75  F00C         	call	___fladd	;wreg free
  2822  00065C  C03A  F078         	movff	?___fladd,__doprnt@fval
  2823  000660  C03B  F079         	movff	?___fladd+1,__doprnt@fval+1
  2824  000664  C03C  F07A         	movff	?___fladd+2,__doprnt@fval+2
  2825  000668  C03D  F07B         	movff	?___fladd+3,__doprnt@fval+3
  2826  00066C                     l5563:
  2827                           
  2828                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2829  00066C  0100               	movlb	0	; () banked
  2830  00066E  BF71               	btfsc	(__doprnt@eexp+1)& (0+255),7,b
  2831  000670  D006               	goto	u6700
  2832  000672  5171               	movf	(__doprnt@eexp+1)& (0+255),w,b
  2833  000674  E131               	bnz	l5571
  2834  000676  0E0A               	movlw	10
  2835  000678  5D70               	subwf	__doprnt@eexp& (0+255),w,b
  2836  00067A  B0D8               	btfsc	status,0,c
  2837  00067C  D02D               	goto	u6730
  2838  00067E                     u6700:
  2839                           
  2840                           ; BSR set to: 0
  2841  00067E  C078  F004         	movff	__doprnt@fval,___fleq@ff1
  2842  000682  C079  F005         	movff	__doprnt@fval+1,___fleq@ff1+1
  2843  000686  C07A  F006         	movff	__doprnt@fval+2,___fleq@ff1+2
  2844  00068A  C07B  F007         	movff	__doprnt@fval+3,___fleq@ff1+3
  2845  00068E  0E00               	movlw	0
  2846  000690  6E08               	movwf	___fleq@ff2^0,c
  2847  000692  0E00               	movlw	0
  2848  000694  6E09               	movwf	(___fleq@ff2+1)^0,c
  2849  000696  0E00               	movlw	0
  2850  000698  6E0A               	movwf	(___fleq@ff2+2)^0,c
  2851  00069A  0E00               	movlw	0
  2852  00069C  6E0B               	movwf	(___fleq@ff2+3)^0,c
  2853  00069E  ECAE  F012         	call	___fleq	;wreg free
  2854  0006A2  B0D8               	btfsc	status,0,c
  2855  0006A4  D064               	goto	l5585
  2856                           
  2857                           ; BSR set to: 0
  2858  0006A6  C078  F034         	movff	__doprnt@fval,___fltol@f1
  2859  0006AA  C079  F035         	movff	__doprnt@fval+1,___fltol@f1+1
  2860  0006AE  C07A  F036         	movff	__doprnt@fval+2,___fltol@f1+2
  2861  0006B2  C07B  F037         	movff	__doprnt@fval+3,___fltol@f1+3
  2862  0006B6  ECC4  F011         	call	___fltol	;wreg free
  2863  0006BA  5034               	movf	?___fltol^0,w,c
  2864  0006BC  1035               	iorwf	(?___fltol+1)^0,w,c
  2865  0006BE  1036               	iorwf	(?___fltol+2)^0,w,c
  2866  0006C0  1037               	iorwf	(?___fltol+3)^0,w,c
  2867  0006C2  A4D8               	btfss	status,2,c
  2868  0006C4  D054               	goto	l5585
  2869  0006C6  0100               	movlb	0	; () banked
  2870  0006C8  BF71               	btfsc	(__doprnt@eexp+1)& (0+255),7,b
  2871  0006CA  D051               	goto	l5585
  2872  0006CC  5171               	movf	(__doprnt@eexp+1)& (0+255),w,b
  2873  0006CE  E104               	bnz	u6730
  2874  0006D0  0E02               	movlw	2
  2875  0006D2  5D70               	subwf	__doprnt@eexp& (0+255),w,b
  2876  0006D4  A0D8               	btfss	status,0,c
  2877  0006D6  D04B               	goto	l5585
  2878  0006D8                     u6730:
  2879  0006D8                     l5571:
  2880                           
  2881                           ; BSR set to: 0
  2882                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  2883  0006D8  C074  F004         	movff	__doprnt@tmpval,___flge@ff1
  2884  0006DC  C075  F005         	movff	__doprnt@tmpval+1,___flge@ff1+1
  2885  0006E0  C076  F006         	movff	__doprnt@tmpval+2,___flge@ff1+2
  2886  0006E4  C077  F007         	movff	__doprnt@tmpval+3,___flge@ff1+3
  2887  0006E8  0E5F               	movlw	95
  2888  0006EA  6E08               	movwf	___flge@ff2^0,c
  2889  0006EC  0E70               	movlw	112
  2890  0006EE  6E09               	movwf	(___flge@ff2+1)^0,c
  2891  0006F0  0E89               	movlw	137
  2892  0006F2  6E0A               	movwf	(___flge@ff2+2)^0,c
  2893  0006F4  0E40               	movlw	64
  2894  0006F6  6E0B               	movwf	(___flge@ff2+3)^0,c
  2895  0006F8  EC5C  F011         	call	___flge	;wreg free
  2896  0006FC  B0D8               	btfsc	status,0,c
  2897  0006FE  D003               	goto	l5575
  2898                           
  2899                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2900  000700  0100               	movlb	0	; () banked
  2901  000702  0EF7               	movlw	247
  2902  000704  D002               	goto	L1
  2903  000706                     l5575:
  2904                           
  2905                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2906  000706  0100               	movlb	0	; () banked
  2907  000708  0EF8               	movlw	248
  2908  00070A                     L1:
  2909  00070A  2770               	addwf	__doprnt@eexp& (0+255),f,b
  2910  00070C  0EFF               	movlw	255
  2911  00070E  2371               	addwfc	(__doprnt@eexp+1)& (0+255),f,b
  2912                           
  2913                           ; BSR set to: 0
  2914                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2915  000710  5170               	movf	__doprnt@eexp& (0+255),w,b
  2916  000712  ECF7  F008         	call	_scale
  2917  000716  C02B  F074         	movff	?_scale,__doprnt@tmpval
  2918  00071A  C02C  F075         	movff	?_scale+1,__doprnt@tmpval+1
  2919  00071E  C02D  F076         	movff	?_scale+2,__doprnt@tmpval+2
  2920  000722  C02E  F077         	movff	?_scale+3,__doprnt@tmpval+3
  2921  000726  C078  F004         	movff	__doprnt@fval,__div_to_l_@f1
  2922  00072A  C079  F005         	movff	__doprnt@fval+1,__div_to_l_@f1+1
  2923  00072E  C07A  F006         	movff	__doprnt@fval+2,__div_to_l_@f1+2
  2924  000732  C07B  F007         	movff	__doprnt@fval+3,__div_to_l_@f1+3
  2925  000736  C074  F008         	movff	__doprnt@tmpval,__div_to_l_@f2
  2926  00073A  C075  F009         	movff	__doprnt@tmpval+1,__div_to_l_@f2+1
  2927  00073E  C076  F00A         	movff	__doprnt@tmpval+2,__div_to_l_@f2+2
  2928  000742  C077  F00B         	movff	__doprnt@tmpval+3,__div_to_l_@f2+3
  2929  000746  ECE2  F010         	call	__div_to_l_	;wreg free
  2930  00074A  C004  F06C         	movff	?__div_to_l_,__doprnt@val
  2931  00074E  C005  F06D         	movff	?__div_to_l_+1,__doprnt@val+1
  2932  000752  C006  F06E         	movff	?__div_to_l_+2,__doprnt@val+2
  2933  000756  C007  F06F         	movff	?__div_to_l_+3,__doprnt@val+3
  2934                           
  2935                           ;doprnt.c: 1155: fval = 0.0;
  2936  00075A  0E00               	movlw	0
  2937  00075C  0100               	movlb	0	; () banked
  2938  00075E  6F78               	movwf	__doprnt@fval& (0+255),b
  2939  000760  0E00               	movlw	0
  2940  000762  6F79               	movwf	(__doprnt@fval+1)& (0+255),b
  2941  000764  0E00               	movlw	0
  2942  000766  6F7A               	movwf	(__doprnt@fval+2)& (0+255),b
  2943  000768  0E00               	movlw	0
  2944  00076A  6F7B               	movwf	(__doprnt@fval+3)& (0+255),b
  2945                           
  2946                           ;doprnt.c: 1156: } else {
  2947  00076C  D03C               	goto	l5589
  2948  00076E                     l5585:
  2949                           
  2950                           ;doprnt.c: 1157: val = (unsigned long)fval;
  2951  00076E  C078  F034         	movff	__doprnt@fval,___fltol@f1
  2952  000772  C079  F035         	movff	__doprnt@fval+1,___fltol@f1+1
  2953  000776  C07A  F036         	movff	__doprnt@fval+2,___fltol@f1+2
  2954  00077A  C07B  F037         	movff	__doprnt@fval+3,___fltol@f1+3
  2955  00077E  ECC4  F011         	call	___fltol	;wreg free
  2956  000782  C034  F06C         	movff	?___fltol,__doprnt@val
  2957  000786  C035  F06D         	movff	?___fltol+1,__doprnt@val+1
  2958  00078A  C036  F06E         	movff	?___fltol+2,__doprnt@val+2
  2959  00078E  C037  F06F         	movff	?___fltol+3,__doprnt@val+3
  2960                           
  2961                           ;doprnt.c: 1158: fval -= (double)val;
  2962  000792  C078  F04A         	movff	__doprnt@fval,___flsub@b
  2963  000796  C079  F04B         	movff	__doprnt@fval+1,___flsub@b+1
  2964  00079A  C07A  F04C         	movff	__doprnt@fval+2,___flsub@b+2
  2965  00079E  C07B  F04D         	movff	__doprnt@fval+3,___flsub@b+3
  2966  0007A2  C06C  F004         	movff	__doprnt@val,___xxtofl@val
  2967  0007A6  C06D  F005         	movff	__doprnt@val+1,___xxtofl@val+1
  2968  0007AA  C06E  F006         	movff	__doprnt@val+2,___xxtofl@val+2
  2969  0007AE  C06F  F007         	movff	__doprnt@val+3,___xxtofl@val+3
  2970  0007B2  0E00               	movlw	0
  2971  0007B4  EC30  F00F         	call	___xxtofl
  2972  0007B8  C004  F04E         	movff	?___xxtofl,___flsub@a
  2973  0007BC  C005  F04F         	movff	?___xxtofl+1,___flsub@a+1
  2974  0007C0  C006  F050         	movff	?___xxtofl+2,___flsub@a+2
  2975  0007C4  C007  F051         	movff	?___xxtofl+3,___flsub@a+3
  2976  0007C8  EC75  F014         	call	___flsub	;wreg free
  2977  0007CC  C04A  F078         	movff	?___flsub,__doprnt@fval
  2978  0007D0  C04B  F079         	movff	?___flsub+1,__doprnt@fval+1
  2979  0007D4  C04C  F07A         	movff	?___flsub+2,__doprnt@fval+2
  2980  0007D8  C04D  F07B         	movff	?___flsub+3,__doprnt@fval+3
  2981                           
  2982                           ;doprnt.c: 1159: eexp = 0;
  2983  0007DC  0E00               	movlw	0
  2984  0007DE  0100               	movlb	0	; () banked
  2985  0007E0  6F71               	movwf	(__doprnt@eexp+1)& (0+255),b
  2986  0007E2  0E00               	movlw	0
  2987  0007E4  6F70               	movwf	__doprnt@eexp& (0+255),b
  2988  0007E6                     l5589:
  2989                           
  2990                           ; BSR set to: 0
  2991                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  2992  0007E6  0E01               	movlw	1
  2993  0007E8  6F80               	movwf	__doprnt@c& (0+255),b
  2994  0007EA                     l5595:
  2995                           
  2996                           ; BSR set to: 0
  2997                           ;doprnt.c: 1163: if(val < dpowers[c])
  2998  0007EA  5180               	movf	__doprnt@c& (0+255),w,b
  2999  0007EC  0D04               	mullw	4
  3000  0007EE  0EA9               	movlw	low _dpowers
  3001  0007F0  24F3               	addwf	243,w,c
  3002  0007F2  6EF6               	movwf	tblptrl,c
  3003  0007F4  0E3E               	movlw	high _dpowers
  3004  0007F6  20F4               	addwfc	244,w,c
  3005  0007F8  6EF7               	movwf	tblptrh,c
  3006  0007FA                     	if	0	;There are less than 3 active tblptr bytes
  3007  0007FA                     	endif
  3008  0007FA  0009               	tblrd		*+
  3009  0007FC  50F5               	movf	tablat,w,c
  3010  0007FE  5D6C               	subwf	__doprnt@val& (0+255),w,b
  3011  000800  0009               	tblrd		*+
  3012  000802  50F5               	movf	tablat,w,c
  3013  000804  596D               	subwfb	(__doprnt@val+1)& (0+255),w,b
  3014  000806  0009               	tblrd		*+
  3015  000808  50F5               	movf	tablat,w,c
  3016  00080A  596E               	subwfb	(__doprnt@val+2)& (0+255),w,b
  3017  00080C  0009               	tblrd		*+
  3018  00080E  50F5               	movf	tablat,w,c
  3019  000810  596F               	subwfb	(__doprnt@val+3)& (0+255),w,b
  3020  000812  A0D8               	btfss	status,0,c
  3021  000814  D005               	goto	u6760
  3022                           
  3023                           ; BSR set to: 0
  3024  000816  2B80               	incf	__doprnt@c& (0+255),f,b
  3025                           
  3026                           ; BSR set to: 0
  3027  000818  0E0A               	movlw	10
  3028  00081A  1980               	xorwf	__doprnt@c& (0+255),w,b
  3029  00081C  A4D8               	btfss	status,2,c
  3030  00081E  D7E5               	goto	l5595
  3031  000820                     u6760:
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;doprnt.c: 1168: width -= prec + c + eexp;
  3035  000820  5180               	movf	__doprnt@c& (0+255),w,b
  3036  000822  257E               	addwf	__doprnt@prec& (0+255),w,b
  3037  000824  6F60               	movwf	??__doprnt& (0+255),b
  3038  000826  0E00               	movlw	0
  3039  000828  217F               	addwfc	(__doprnt@prec+1)& (0+255),w,b
  3040  00082A  6F61               	movwf	(??__doprnt+1)& (0+255),b
  3041  00082C  5170               	movf	__doprnt@eexp& (0+255),w,b
  3042  00082E  2760               	addwf	??__doprnt& (0+255),f,b
  3043  000830  5171               	movf	(__doprnt@eexp+1)& (0+255),w,b
  3044  000832  2361               	addwfc	(??__doprnt+1)& (0+255),f,b
  3045  000834  5160               	movf	??__doprnt& (0+255),w,b
  3046  000836  5F7C               	subwf	__doprnt@width& (0+255),f,b
  3047  000838  5161               	movf	(??__doprnt+1)& (0+255),w,b
  3048  00083A  5B7D               	subwfb	(__doprnt@width+1)& (0+255),f,b
  3049                           
  3050                           ;doprnt.c: 1169: if(;doprnt.c: 1173: prec)
  3051  00083C  517E               	movf	__doprnt@prec& (0+255),w,b
  3052  00083E  117F               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  3053  000840  B4D8               	btfsc	status,2,c
  3054  000842  D003               	goto	l5607
  3055                           
  3056                           ; BSR set to: 0
  3057                           ;doprnt.c: 1174: width--;
  3058  000844  077C               	decf	__doprnt@width& (0+255),f,b
  3059  000846  A0D8               	btfss	status,0,c
  3060  000848  077D               	decf	(__doprnt@width+1)& (0+255),f,b
  3061  00084A                     l5607:
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;doprnt.c: 1175: if(flag & 0x03)
  3065  00084A  C072  F060         	movff	__doprnt@flag,??__doprnt
  3066  00084E  0E03               	movlw	3
  3067  000850  1760               	andwf	??__doprnt& (0+255),f,b
  3068  000852  B4D8               	btfsc	status,2,c
  3069  000854  D003               	goto	l5611
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;doprnt.c: 1176: width--;
  3073  000856  077C               	decf	__doprnt@width& (0+255),f,b
  3074  000858  A0D8               	btfss	status,0,c
  3075  00085A  077D               	decf	(__doprnt@width+1)& (0+255),f,b
  3076  00085C                     l5611:
  3077                           
  3078                           ; BSR set to: 0
  3079                           ;doprnt.c: 1179: if(flag & 0x04) {
  3080  00085C  A572               	btfss	__doprnt@flag& (0+255),2,b
  3081  00085E  D0A2               	goto	l5645
  3082                           
  3083                           ; BSR set to: 0
  3084                           ;doprnt.c: 1183: if(flag & 0x03)
  3085  000860  C072  F060         	movff	__doprnt@flag,??__doprnt
  3086  000864  0E03               	movlw	3
  3087  000866  1760               	andwf	??__doprnt& (0+255),f,b
  3088  000868  B4D8               	btfsc	status,2,c
  3089  00086A  D061               	goto	l5633
  3090                           
  3091                           ; BSR set to: 0
  3092  00086C  5052               	movf	__doprnt@pb^0,w,c
  3093  00086E  6ED9               	movwf	fsr2l,c
  3094  000870  6ADA               	clrf	fsr2h,c
  3095  000872  0E02               	movlw	2
  3096  000874  26D9               	addwf	fsr2l,f,c
  3097  000876  50DE               	movf	postinc2,w,c
  3098  000878  10DE               	iorwf	postinc2,w,c
  3099  00087A  B4D8               	btfsc	status,2,c
  3100  00087C  D012               	goto	l5619
  3101                           
  3102                           ; BSR set to: 0
  3103  00087E  5052               	movf	__doprnt@pb^0,w,c
  3104  000880  6ED9               	movwf	fsr2l,c
  3105  000882  6ADA               	clrf	fsr2h,c
  3106  000884  0E02               	movlw	2
  3107  000886  26D9               	addwf	fsr2l,f,c
  3108  000888  D801               	call	u6828
  3109  00088A  D051               	goto	l5633
  3110  00088C                     u6828:
  3111  00088C  0005               	push	
  3112  00088E  6EFA               	movwf	pclath,c
  3113  000890  50DE               	movf	postinc2,w,c
  3114  000892  6EFD               	movwf	tosl,c
  3115  000894  50DE               	movf	postinc2,w,c
  3116  000896  6EFE               	movwf	tosh,c
  3117  000898  50F8               	movf	tblptru,w,c
  3118  00089A  6EFF               	movwf	tosu,c
  3119  00089C  50FA               	movf	pclath,w,c
  3120  00089E  0E2D               	movlw	45
  3121  0008A0  0012               	return		;indir
  3122  0008A2                     l5619:
  3123                           
  3124                           ; BSR set to: 0
  3125  0008A2  5052               	movf	__doprnt@pb^0,w,c
  3126  0008A4  6ED9               	movwf	fsr2l,c
  3127  0008A6  6ADA               	clrf	fsr2h,c
  3128  0008A8  CFDE F060          	movff	postinc2,??__doprnt
  3129  0008AC  CFDD F061          	movff	postdec2,??__doprnt+1
  3130  0008B0  C060  FFD9         	movff	??__doprnt,fsr2l
  3131  0008B4  C061  FFDA         	movff	??__doprnt+1,fsr2h
  3132  0008B8  0E2D               	movlw	45
  3133  0008BA  6EDF               	movwf	indf2,c
  3134                           
  3135                           ; BSR set to: 0
  3136  0008BC  5052               	movf	__doprnt@pb^0,w,c
  3137  0008BE  6ED9               	movwf	fsr2l,c
  3138  0008C0  6ADA               	clrf	fsr2h,c
  3139  0008C2  2ADE               	incf	postinc2,f,c
  3140  0008C4  0E00               	movlw	0
  3141  0008C6  22DD               	addwfc	postdec2,f,c
  3142  0008C8  D032               	goto	l5633
  3143  0008CA                     l5623:
  3144                           
  3145                           ; BSR set to: 0
  3146  0008CA  5052               	movf	__doprnt@pb^0,w,c
  3147  0008CC  6ED9               	movwf	fsr2l,c
  3148  0008CE  6ADA               	clrf	fsr2h,c
  3149  0008D0  0E02               	movlw	2
  3150  0008D2  26D9               	addwf	fsr2l,f,c
  3151  0008D4  50DE               	movf	postinc2,w,c
  3152  0008D6  10DE               	iorwf	postinc2,w,c
  3153  0008D8  B4D8               	btfsc	status,2,c
  3154  0008DA  D012               	goto	l5627
  3155                           
  3156                           ; BSR set to: 0
  3157  0008DC  5052               	movf	__doprnt@pb^0,w,c
  3158  0008DE  6ED9               	movwf	fsr2l,c
  3159  0008E0  6ADA               	clrf	fsr2h,c
  3160  0008E2  0E02               	movlw	2
  3161  0008E4  26D9               	addwf	fsr2l,f,c
  3162  0008E6  D801               	call	u6848
  3163  0008E8  D01E               	goto	l5631
  3164  0008EA                     u6848:
  3165  0008EA  0005               	push	
  3166  0008EC  6EFA               	movwf	pclath,c
  3167  0008EE  50DE               	movf	postinc2,w,c
  3168  0008F0  6EFD               	movwf	tosl,c
  3169  0008F2  50DE               	movf	postinc2,w,c
  3170  0008F4  6EFE               	movwf	tosh,c
  3171  0008F6  50F8               	movf	tblptru,w,c
  3172  0008F8  6EFF               	movwf	tosu,c
  3173  0008FA  50FA               	movf	pclath,w,c
  3174  0008FC  0E30               	movlw	48
  3175  0008FE  0012               	return		;indir
  3176  000900                     l5627:
  3177                           
  3178                           ; BSR set to: 0
  3179  000900  5052               	movf	__doprnt@pb^0,w,c
  3180  000902  6ED9               	movwf	fsr2l,c
  3181  000904  6ADA               	clrf	fsr2h,c
  3182  000906  CFDE F060          	movff	postinc2,??__doprnt
  3183  00090A  CFDD F061          	movff	postdec2,??__doprnt+1
  3184  00090E  C060  FFD9         	movff	??__doprnt,fsr2l
  3185  000912  C061  FFDA         	movff	??__doprnt+1,fsr2h
  3186  000916  0E30               	movlw	48
  3187  000918  6EDF               	movwf	indf2,c
  3188                           
  3189                           ; BSR set to: 0
  3190  00091A  5052               	movf	__doprnt@pb^0,w,c
  3191  00091C  6ED9               	movwf	fsr2l,c
  3192  00091E  6ADA               	clrf	fsr2h,c
  3193  000920  2ADE               	incf	postinc2,f,c
  3194  000922  0E00               	movlw	0
  3195  000924  22DD               	addwfc	postdec2,f,c
  3196  000926                     l5631:
  3197                           
  3198                           ;doprnt.c: 1196: width--;
  3199  000926  0100               	movlb	0	; () banked
  3200  000928  077C               	decf	__doprnt@width& (0+255),f,b
  3201  00092A  A0D8               	btfss	status,0,c
  3202  00092C  077D               	decf	(__doprnt@width+1)& (0+255),f,b
  3203  00092E                     l5633:
  3204  00092E  0100               	movlb	0	; () banked
  3205  000930  BF7D               	btfsc	(__doprnt@width+1)& (0+255),7,b
  3206  000932  D0DD               	goto	l5667
  3207  000934  517D               	movf	(__doprnt@width+1)& (0+255),w,b
  3208  000936  E1C9               	bnz	l5623
  3209  000938  057C               	decf	__doprnt@width& (0+255),w,b
  3210  00093A  A0D8               	btfss	status,0,c
  3211  00093C  D0D8               	goto	l5667
  3212  00093E  D7C5               	goto	l5623
  3213  000940                     l5635:
  3214                           
  3215                           ; BSR set to: 0
  3216  000940  5052               	movf	__doprnt@pb^0,w,c
  3217  000942  6ED9               	movwf	fsr2l,c
  3218  000944  6ADA               	clrf	fsr2h,c
  3219  000946  0E02               	movlw	2
  3220  000948  26D9               	addwf	fsr2l,f,c
  3221  00094A  50DE               	movf	postinc2,w,c
  3222  00094C  10DE               	iorwf	postinc2,w,c
  3223  00094E  B4D8               	btfsc	status,2,c
  3224  000950  D012               	goto	l5639
  3225                           
  3226                           ; BSR set to: 0
  3227  000952  5052               	movf	__doprnt@pb^0,w,c
  3228  000954  6ED9               	movwf	fsr2l,c
  3229  000956  6ADA               	clrf	fsr2h,c
  3230  000958  0E02               	movlw	2
  3231  00095A  26D9               	addwf	fsr2l,f,c
  3232  00095C  D801               	call	u6878
  3233  00095E  D01E               	goto	l5643
  3234  000960                     u6878:
  3235  000960  0005               	push	
  3236  000962  6EFA               	movwf	pclath,c
  3237  000964  50DE               	movf	postinc2,w,c
  3238  000966  6EFD               	movwf	tosl,c
  3239  000968  50DE               	movf	postinc2,w,c
  3240  00096A  6EFE               	movwf	tosh,c
  3241  00096C  50F8               	movf	tblptru,w,c
  3242  00096E  6EFF               	movwf	tosu,c
  3243  000970  50FA               	movf	pclath,w,c
  3244  000972  0E20               	movlw	32
  3245  000974  0012               	return		;indir
  3246  000976                     l5639:
  3247                           
  3248                           ; BSR set to: 0
  3249  000976  5052               	movf	__doprnt@pb^0,w,c
  3250  000978  6ED9               	movwf	fsr2l,c
  3251  00097A  6ADA               	clrf	fsr2h,c
  3252  00097C  CFDE F060          	movff	postinc2,??__doprnt
  3253  000980  CFDD F061          	movff	postdec2,??__doprnt+1
  3254  000984  C060  FFD9         	movff	??__doprnt,fsr2l
  3255  000988  C061  FFDA         	movff	??__doprnt+1,fsr2h
  3256  00098C  0E20               	movlw	32
  3257  00098E  6EDF               	movwf	indf2,c
  3258                           
  3259                           ; BSR set to: 0
  3260  000990  5052               	movf	__doprnt@pb^0,w,c
  3261  000992  6ED9               	movwf	fsr2l,c
  3262  000994  6ADA               	clrf	fsr2h,c
  3263  000996  2ADE               	incf	postinc2,f,c
  3264  000998  0E00               	movlw	0
  3265  00099A  22DD               	addwfc	postdec2,f,c
  3266  00099C                     l5643:
  3267                           
  3268                           ;doprnt.c: 1208: width--;
  3269  00099C  0100               	movlb	0	; () banked
  3270  00099E  077C               	decf	__doprnt@width& (0+255),f,b
  3271  0009A0  A0D8               	btfss	status,0,c
  3272  0009A2  077D               	decf	(__doprnt@width+1)& (0+255),f,b
  3273  0009A4                     l5645:
  3274                           
  3275                           ; BSR set to: 0
  3276  0009A4  BF7D               	btfsc	(__doprnt@width+1)& (0+255),7,b
  3277  0009A6  D005               	goto	u6880
  3278  0009A8  517D               	movf	(__doprnt@width+1)& (0+255),w,b
  3279  0009AA  E1CA               	bnz	l5635
  3280  0009AC  057C               	decf	__doprnt@width& (0+255),w,b
  3281  0009AE  B0D8               	btfsc	status,0,c
  3282  0009B0  D7C7               	goto	l5635
  3283  0009B2                     u6880:
  3284                           
  3285                           ; BSR set to: 0
  3286                           ;doprnt.c: 1209: };doprnt.c: 1214: if(flag & 0x03)
  3287  0009B2  C072  F060         	movff	__doprnt@flag,??__doprnt
  3288  0009B6  0E03               	movlw	3
  3289  0009B8  1760               	andwf	??__doprnt& (0+255),f,b
  3290  0009BA  B4D8               	btfsc	status,2,c
  3291  0009BC  D098               	goto	l5667
  3292                           
  3293                           ; BSR set to: 0
  3294  0009BE  5052               	movf	__doprnt@pb^0,w,c
  3295  0009C0  6ED9               	movwf	fsr2l,c
  3296  0009C2  6ADA               	clrf	fsr2h,c
  3297  0009C4  0E02               	movlw	2
  3298  0009C6  26D9               	addwf	fsr2l,f,c
  3299  0009C8  50DE               	movf	postinc2,w,c
  3300  0009CA  10DE               	iorwf	postinc2,w,c
  3301  0009CC  B4D8               	btfsc	status,2,c
  3302  0009CE  D012               	goto	l5653
  3303                           
  3304                           ; BSR set to: 0
  3305  0009D0  5052               	movf	__doprnt@pb^0,w,c
  3306  0009D2  6ED9               	movwf	fsr2l,c
  3307  0009D4  6ADA               	clrf	fsr2h,c
  3308  0009D6  0E02               	movlw	2
  3309  0009D8  26D9               	addwf	fsr2l,f,c
  3310  0009DA  D801               	call	u6918
  3311  0009DC  D088               	goto	l5667
  3312  0009DE                     u6918:
  3313  0009DE  0005               	push	
  3314  0009E0  6EFA               	movwf	pclath,c
  3315  0009E2  50DE               	movf	postinc2,w,c
  3316  0009E4  6EFD               	movwf	tosl,c
  3317  0009E6  50DE               	movf	postinc2,w,c
  3318  0009E8  6EFE               	movwf	tosh,c
  3319  0009EA  50F8               	movf	tblptru,w,c
  3320  0009EC  6EFF               	movwf	tosu,c
  3321  0009EE  50FA               	movf	pclath,w,c
  3322  0009F0  0E2D               	movlw	45
  3323  0009F2  0012               	return		;indir
  3324  0009F4                     l5653:
  3325                           
  3326                           ; BSR set to: 0
  3327  0009F4  5052               	movf	__doprnt@pb^0,w,c
  3328  0009F6  6ED9               	movwf	fsr2l,c
  3329  0009F8  6ADA               	clrf	fsr2h,c
  3330  0009FA  CFDE F060          	movff	postinc2,??__doprnt
  3331  0009FE  CFDD F061          	movff	postdec2,??__doprnt+1
  3332  000A02  C060  FFD9         	movff	??__doprnt,fsr2l
  3333  000A06  C061  FFDA         	movff	??__doprnt+1,fsr2h
  3334  000A0A  0E2D               	movlw	45
  3335  000A0C  D069               	goto	L7
  3336  000A0E                     l5657:
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  3340  000A0E  C06C  F004         	movff	__doprnt@val,___lldiv@dividend
  3341  000A12  C06D  F005         	movff	__doprnt@val+1,___lldiv@dividend+1
  3342  000A16  C06E  F006         	movff	__doprnt@val+2,___lldiv@dividend+2
  3343  000A1A  C06F  F007         	movff	__doprnt@val+3,___lldiv@dividend+3
  3344  000A1E  5180               	movf	__doprnt@c& (0+255),w,b
  3345  000A20  0D04               	mullw	4
  3346  000A22  0EA9               	movlw	low _dpowers
  3347  000A24  24F3               	addwf	243,w,c
  3348  000A26  6EF6               	movwf	tblptrl,c
  3349  000A28  0E3E               	movlw	high _dpowers
  3350  000A2A  20F4               	addwfc	244,w,c
  3351  000A2C  6EF7               	movwf	tblptrh,c
  3352  000A2E                     	if	0	;There are less than 3 active tblptr bytes
  3353  000A2E                     	endif
  3354  000A2E  0009               	tblrd		*+
  3355  000A30  CFF5 F008          	movff	tablat,___lldiv@divisor
  3356  000A34  0009               	tblrd		*+
  3357  000A36  CFF5 F009          	movff	tablat,___lldiv@divisor+1
  3358  000A3A  0009               	tblrd		*+
  3359  000A3C  CFF5 F00A          	movff	tablat,___lldiv@divisor+2
  3360  000A40  000A               	tblrd		*-
  3361  000A42  CFF5 F00B          	movff	tablat,___lldiv@divisor+3
  3362  000A46  EC35  F013         	call	___lldiv
  3363  000A4A  C004  F074         	movff	?___lldiv,__doprnt@tmpval
  3364  000A4E  C005  F075         	movff	?___lldiv+1,__doprnt@tmpval+1
  3365  000A52  C006  F076         	movff	?___lldiv+2,__doprnt@tmpval+2
  3366  000A56  C007  F077         	movff	?___lldiv+3,__doprnt@tmpval+3
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;doprnt.c: 1228: tmpval.vd %= 10;
  3370  000A5A  C074  F011         	movff	__doprnt@tmpval,___llmod@dividend
  3371  000A5E  C075  F012         	movff	__doprnt@tmpval+1,___llmod@dividend+1
  3372  000A62  C076  F013         	movff	__doprnt@tmpval+2,___llmod@dividend+2
  3373  000A66  C077  F014         	movff	__doprnt@tmpval+3,___llmod@dividend+3
  3374  000A6A  0E0A               	movlw	10
  3375  000A6C  6E15               	movwf	___llmod@divisor^0,c
  3376  000A6E  0E00               	movlw	0
  3377  000A70  6E16               	movwf	(___llmod@divisor+1)^0,c
  3378  000A72  0E00               	movlw	0
  3379  000A74  6E17               	movwf	(___llmod@divisor+2)^0,c
  3380  000A76  0E00               	movlw	0
  3381  000A78  6E18               	movwf	(___llmod@divisor+3)^0,c
  3382  000A7A  ECE8  F013         	call	___llmod	;wreg free
  3383  000A7E  C011  F074         	movff	?___llmod,__doprnt@tmpval
  3384  000A82  C012  F075         	movff	?___llmod+1,__doprnt@tmpval+1
  3385  000A86  C013  F076         	movff	?___llmod+2,__doprnt@tmpval+2
  3386  000A8A  C014  F077         	movff	?___llmod+3,__doprnt@tmpval+3
  3387                           
  3388                           ; BSR set to: 0
  3389  000A8E  5052               	movf	__doprnt@pb^0,w,c
  3390  000A90  6ED9               	movwf	fsr2l,c
  3391  000A92  6ADA               	clrf	fsr2h,c
  3392  000A94  0E02               	movlw	2
  3393  000A96  26D9               	addwf	fsr2l,f,c
  3394  000A98  50DE               	movf	postinc2,w,c
  3395  000A9A  10DE               	iorwf	postinc2,w,c
  3396  000A9C  B4D8               	btfsc	status,2,c
  3397  000A9E  D013               	goto	l5665
  3398                           
  3399                           ; BSR set to: 0
  3400  000AA0  5052               	movf	__doprnt@pb^0,w,c
  3401  000AA2  6ED9               	movwf	fsr2l,c
  3402  000AA4  6ADA               	clrf	fsr2h,c
  3403  000AA6  0E02               	movlw	2
  3404  000AA8  26D9               	addwf	fsr2l,f,c
  3405  000AAA  D801               	call	u6938
  3406  000AAC  D020               	goto	l5667
  3407  000AAE                     u6938:
  3408  000AAE  0005               	push	
  3409  000AB0  6EFA               	movwf	pclath,c
  3410  000AB2  50DE               	movf	postinc2,w,c
  3411  000AB4  6EFD               	movwf	tosl,c
  3412  000AB6  50DE               	movf	postinc2,w,c
  3413  000AB8  6EFE               	movwf	tosh,c
  3414  000ABA  50F8               	movf	tblptru,w,c
  3415  000ABC  6EFF               	movwf	tosu,c
  3416  000ABE  50FA               	movf	pclath,w,c
  3417  000AC0  5174               	movf	__doprnt@tmpval& (0+255),w,b
  3418  000AC2  0F30               	addlw	48
  3419  000AC4  0012               	return		;indir
  3420  000AC6                     l5665:
  3421                           
  3422                           ; BSR set to: 0
  3423  000AC6  5052               	movf	__doprnt@pb^0,w,c
  3424  000AC8  6ED9               	movwf	fsr2l,c
  3425  000ACA  6ADA               	clrf	fsr2h,c
  3426  000ACC  CFDE F060          	movff	postinc2,??__doprnt
  3427  000AD0  CFDD F061          	movff	postdec2,??__doprnt+1
  3428  000AD4  C060  FFD9         	movff	??__doprnt,fsr2l
  3429  000AD8  C061  FFDA         	movff	??__doprnt+1,fsr2h
  3430  000ADC  5174               	movf	__doprnt@tmpval& (0+255),w,b
  3431  000ADE  0F30               	addlw	48
  3432  000AE0                     L7:
  3433  000AE0  6EDF               	movwf	indf2,c
  3434  000AE2  5052               	movf	__doprnt@pb^0,w,c
  3435  000AE4  6ED9               	movwf	fsr2l,c
  3436  000AE6  6ADA               	clrf	fsr2h,c
  3437  000AE8  2ADE               	incf	postinc2,f,c
  3438  000AEA  0E00               	movlw	0
  3439  000AEC  22DD               	addwfc	postdec2,f,c
  3440  000AEE                     l5667:
  3441  000AEE  0100               	movlb	0	; () banked
  3442  000AF0  0780               	decf	__doprnt@c& (0+255),f,b
  3443  000AF2  2980               	incf	__doprnt@c& (0+255),w,b
  3444  000AF4  B4D8               	btfsc	status,2,c
  3445  000AF6  D033               	goto	l5679
  3446  000AF8  D78A               	goto	l5657
  3447  000AFA                     l5669:
  3448                           
  3449                           ; BSR set to: 0
  3450  000AFA  5052               	movf	__doprnt@pb^0,w,c
  3451  000AFC  6ED9               	movwf	fsr2l,c
  3452  000AFE  6ADA               	clrf	fsr2h,c
  3453  000B00  0E02               	movlw	2
  3454  000B02  26D9               	addwf	fsr2l,f,c
  3455  000B04  50DE               	movf	postinc2,w,c
  3456  000B06  10DE               	iorwf	postinc2,w,c
  3457  000B08  B4D8               	btfsc	status,2,c
  3458  000B0A  D012               	goto	l5673
  3459                           
  3460                           ; BSR set to: 0
  3461  000B0C  5052               	movf	__doprnt@pb^0,w,c
  3462  000B0E  6ED9               	movwf	fsr2l,c
  3463  000B10  6ADA               	clrf	fsr2h,c
  3464  000B12  0E02               	movlw	2
  3465  000B14  26D9               	addwf	fsr2l,f,c
  3466  000B16  D801               	call	u6968
  3467  000B18  D01E               	goto	l5677
  3468  000B1A                     u6968:
  3469  000B1A  0005               	push	
  3470  000B1C  6EFA               	movwf	pclath,c
  3471  000B1E  50DE               	movf	postinc2,w,c
  3472  000B20  6EFD               	movwf	tosl,c
  3473  000B22  50DE               	movf	postinc2,w,c
  3474  000B24  6EFE               	movwf	tosh,c
  3475  000B26  50F8               	movf	tblptru,w,c
  3476  000B28  6EFF               	movwf	tosu,c
  3477  000B2A  50FA               	movf	pclath,w,c
  3478  000B2C  0E30               	movlw	48
  3479  000B2E  0012               	return		;indir
  3480  000B30                     l5673:
  3481                           
  3482                           ; BSR set to: 0
  3483  000B30  5052               	movf	__doprnt@pb^0,w,c
  3484  000B32  6ED9               	movwf	fsr2l,c
  3485  000B34  6ADA               	clrf	fsr2h,c
  3486  000B36  CFDE F060          	movff	postinc2,??__doprnt
  3487  000B3A  CFDD F061          	movff	postdec2,??__doprnt+1
  3488  000B3E  C060  FFD9         	movff	??__doprnt,fsr2l
  3489  000B42  C061  FFDA         	movff	??__doprnt+1,fsr2h
  3490  000B46  0E30               	movlw	48
  3491  000B48  6EDF               	movwf	indf2,c
  3492                           
  3493                           ; BSR set to: 0
  3494  000B4A  5052               	movf	__doprnt@pb^0,w,c
  3495  000B4C  6ED9               	movwf	fsr2l,c
  3496  000B4E  6ADA               	clrf	fsr2h,c
  3497  000B50  2ADE               	incf	postinc2,f,c
  3498  000B52  0E00               	movlw	0
  3499  000B54  22DD               	addwfc	postdec2,f,c
  3500  000B56                     l5677:
  3501                           
  3502                           ;doprnt.c: 1235: eexp--;
  3503  000B56  0100               	movlb	0	; () banked
  3504  000B58  0770               	decf	__doprnt@eexp& (0+255),f,b
  3505  000B5A  A0D8               	btfss	status,0,c
  3506  000B5C  0771               	decf	(__doprnt@eexp+1)& (0+255),f,b
  3507  000B5E                     l5679:
  3508                           
  3509                           ; BSR set to: 0
  3510  000B5E  BF71               	btfsc	(__doprnt@eexp+1)& (0+255),7,b
  3511  000B60  D005               	goto	u6970
  3512  000B62  5171               	movf	(__doprnt@eexp+1)& (0+255),w,b
  3513  000B64  E1CA               	bnz	l5669
  3514  000B66  0570               	decf	__doprnt@eexp& (0+255),w,b
  3515  000B68  B0D8               	btfsc	status,0,c
  3516  000B6A  D7C7               	goto	l5669
  3517  000B6C                     u6970:
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  3521  000B6C  BF7F               	btfsc	(__doprnt@prec+1)& (0+255),7,b
  3522  000B6E  D009               	goto	l1234
  3523  000B70  517F               	movf	(__doprnt@prec+1)& (0+255),w,b
  3524  000B72  E104               	bnz	u6980
  3525  000B74  0E09               	movlw	9
  3526  000B76  5D7E               	subwf	__doprnt@prec& (0+255),w,b
  3527  000B78  A0D8               	btfss	status,0,c
  3528  000B7A  D003               	goto	l1234
  3529  000B7C                     u6980:
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3533  000B7C  0E08               	movlw	8
  3534  000B7E  6F80               	movwf	__doprnt@c& (0+255),b
  3535  000B80  D002               	goto	l5685
  3536  000B82                     l1234:
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  3540  000B82  C07E  F080         	movff	__doprnt@prec,__doprnt@c
  3541  000B86                     l5685:
  3542                           
  3543                           ; BSR set to: 0
  3544                           ;doprnt.c: 1241: prec -= (int)c;
  3545  000B86  5180               	movf	__doprnt@c& (0+255),w,b
  3546  000B88  5F7E               	subwf	__doprnt@prec& (0+255),f,b
  3547  000B8A  0E00               	movlw	0
  3548  000B8C  5B7F               	subwfb	(__doprnt@prec+1)& (0+255),f,b
  3549                           
  3550                           ; BSR set to: 0
  3551                           ;doprnt.c: 1245: if(c)
  3552  000B8E  5180               	movf	__doprnt@c& (0+255),w,b
  3553  000B90  B4D8               	btfsc	status,2,c
  3554  000B92  D02E               	goto	l5697
  3555                           
  3556                           ; BSR set to: 0
  3557  000B94  5052               	movf	__doprnt@pb^0,w,c
  3558  000B96  6ED9               	movwf	fsr2l,c
  3559  000B98  6ADA               	clrf	fsr2h,c
  3560  000B9A  0E02               	movlw	2
  3561  000B9C  26D9               	addwf	fsr2l,f,c
  3562  000B9E  50DE               	movf	postinc2,w,c
  3563  000BA0  10DE               	iorwf	postinc2,w,c
  3564  000BA2  B4D8               	btfsc	status,2,c
  3565  000BA4  D012               	goto	l5693
  3566                           
  3567                           ; BSR set to: 0
  3568  000BA6  5052               	movf	__doprnt@pb^0,w,c
  3569  000BA8  6ED9               	movwf	fsr2l,c
  3570  000BAA  6ADA               	clrf	fsr2h,c
  3571  000BAC  0E02               	movlw	2
  3572  000BAE  26D9               	addwf	fsr2l,f,c
  3573  000BB0  D801               	call	u7018
  3574  000BB2  D01E               	goto	l5697
  3575  000BB4                     u7018:
  3576  000BB4  0005               	push	
  3577  000BB6  6EFA               	movwf	pclath,c
  3578  000BB8  50DE               	movf	postinc2,w,c
  3579  000BBA  6EFD               	movwf	tosl,c
  3580  000BBC  50DE               	movf	postinc2,w,c
  3581  000BBE  6EFE               	movwf	tosh,c
  3582  000BC0  50F8               	movf	tblptru,w,c
  3583  000BC2  6EFF               	movwf	tosu,c
  3584  000BC4  50FA               	movf	pclath,w,c
  3585  000BC6  0E2E               	movlw	46
  3586  000BC8  0012               	return		;indir
  3587  000BCA                     l5693:
  3588                           
  3589                           ; BSR set to: 0
  3590  000BCA  5052               	movf	__doprnt@pb^0,w,c
  3591  000BCC  6ED9               	movwf	fsr2l,c
  3592  000BCE  6ADA               	clrf	fsr2h,c
  3593  000BD0  CFDE F060          	movff	postinc2,??__doprnt
  3594  000BD4  CFDD F061          	movff	postdec2,??__doprnt+1
  3595  000BD8  C060  FFD9         	movff	??__doprnt,fsr2l
  3596  000BDC  C061  FFDA         	movff	??__doprnt+1,fsr2h
  3597  000BE0  0E2E               	movlw	46
  3598  000BE2  6EDF               	movwf	indf2,c
  3599                           
  3600                           ; BSR set to: 0
  3601  000BE4  5052               	movf	__doprnt@pb^0,w,c
  3602  000BE6  6ED9               	movwf	fsr2l,c
  3603  000BE8  6ADA               	clrf	fsr2h,c
  3604  000BEA  2ADE               	incf	postinc2,f,c
  3605  000BEC  0E00               	movlw	0
  3606  000BEE  22DD               	addwfc	postdec2,f,c
  3607  000BF0                     l5697:
  3608                           
  3609                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  3610  000BF0  0100               	movlb	0	; () banked
  3611  000BF2  5180               	movf	__doprnt@c& (0+255),w,b
  3612  000BF4  ECF7  F008         	call	_scale
  3613  000BF8  C02B  F064         	movff	?_scale,__doprnt$2306
  3614  000BFC  C02C  F065         	movff	?_scale+1,__doprnt$2306+1
  3615  000C00  C02D  F066         	movff	?_scale+2,__doprnt$2306+2
  3616  000C04  C02E  F067         	movff	?_scale+3,__doprnt$2306+3
  3617                           
  3618                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  3619  000C08  C078  F016         	movff	__doprnt@fval,___flmul@a
  3620  000C0C  C079  F017         	movff	__doprnt@fval+1,___flmul@a+1
  3621  000C10  C07A  F018         	movff	__doprnt@fval+2,___flmul@a+2
  3622  000C14  C07B  F019         	movff	__doprnt@fval+3,___flmul@a+3
  3623  000C18  C064  F012         	movff	__doprnt$2306,___flmul@b
  3624  000C1C  C065  F013         	movff	__doprnt$2306+1,___flmul@b+1
  3625  000C20  C066  F014         	movff	__doprnt$2306+2,___flmul@b+2
  3626  000C24  C067  F015         	movff	__doprnt$2306+3,___flmul@b+3
  3627  000C28  ECDF  F00A         	call	___flmul	;wreg free
  3628  000C2C  C012  F034         	movff	?___flmul,___fltol@f1
  3629  000C30  C013  F035         	movff	?___flmul+1,___fltol@f1+1
  3630  000C34  C014  F036         	movff	?___flmul+2,___fltol@f1+2
  3631  000C38  C015  F037         	movff	?___flmul+3,___fltol@f1+3
  3632  000C3C  ECC4  F011         	call	___fltol	;wreg free
  3633  000C40  C034  F06C         	movff	?___fltol,__doprnt@val
  3634  000C44  C035  F06D         	movff	?___fltol+1,__doprnt@val+1
  3635  000C48  C036  F06E         	movff	?___fltol+2,__doprnt@val+2
  3636  000C4C  C037  F06F         	movff	?___fltol+3,__doprnt@val+3
  3637                           
  3638                           ;doprnt.c: 1254: while(c--) {
  3639  000C50  D097               	goto	l5713
  3640  000C52                     l5701:
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  3644  000C52  C06C  F004         	movff	__doprnt@val,___lldiv@dividend
  3645  000C56  C06D  F005         	movff	__doprnt@val+1,___lldiv@dividend+1
  3646  000C5A  C06E  F006         	movff	__doprnt@val+2,___lldiv@dividend+2
  3647  000C5E  C06F  F007         	movff	__doprnt@val+3,___lldiv@dividend+3
  3648  000C62  5180               	movf	__doprnt@c& (0+255),w,b
  3649  000C64  0D04               	mullw	4
  3650  000C66  0EA9               	movlw	low _dpowers
  3651  000C68  24F3               	addwf	243,w,c
  3652  000C6A  6EF6               	movwf	tblptrl,c
  3653  000C6C  0E3E               	movlw	high _dpowers
  3654  000C6E  20F4               	addwfc	244,w,c
  3655  000C70  6EF7               	movwf	tblptrh,c
  3656  000C72                     	if	0	;There are less than 3 active tblptr bytes
  3657  000C72                     	endif
  3658  000C72  0009               	tblrd		*+
  3659  000C74  CFF5 F008          	movff	tablat,___lldiv@divisor
  3660  000C78  0009               	tblrd		*+
  3661  000C7A  CFF5 F009          	movff	tablat,___lldiv@divisor+1
  3662  000C7E  0009               	tblrd		*+
  3663  000C80  CFF5 F00A          	movff	tablat,___lldiv@divisor+2
  3664  000C84  000A               	tblrd		*-
  3665  000C86  CFF5 F00B          	movff	tablat,___lldiv@divisor+3
  3666  000C8A  EC35  F013         	call	___lldiv	;wreg free
  3667  000C8E  C004  F074         	movff	?___lldiv,__doprnt@tmpval
  3668  000C92  C005  F075         	movff	?___lldiv+1,__doprnt@tmpval+1
  3669  000C96  C006  F076         	movff	?___lldiv+2,__doprnt@tmpval+2
  3670  000C9A  C007  F077         	movff	?___lldiv+3,__doprnt@tmpval+3
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;doprnt.c: 1256: tmpval.vd %= 10;
  3674  000C9E  C074  F011         	movff	__doprnt@tmpval,___llmod@dividend
  3675  000CA2  C075  F012         	movff	__doprnt@tmpval+1,___llmod@dividend+1
  3676  000CA6  C076  F013         	movff	__doprnt@tmpval+2,___llmod@dividend+2
  3677  000CAA  C077  F014         	movff	__doprnt@tmpval+3,___llmod@dividend+3
  3678  000CAE  0E0A               	movlw	10
  3679  000CB0  6E15               	movwf	___llmod@divisor^0,c
  3680  000CB2  0E00               	movlw	0
  3681  000CB4  6E16               	movwf	(___llmod@divisor+1)^0,c
  3682  000CB6  0E00               	movlw	0
  3683  000CB8  6E17               	movwf	(___llmod@divisor+2)^0,c
  3684  000CBA  0E00               	movlw	0
  3685  000CBC  6E18               	movwf	(___llmod@divisor+3)^0,c
  3686  000CBE  ECE8  F013         	call	___llmod	;wreg free
  3687  000CC2  C011  F074         	movff	?___llmod,__doprnt@tmpval
  3688  000CC6  C012  F075         	movff	?___llmod+1,__doprnt@tmpval+1
  3689  000CCA  C013  F076         	movff	?___llmod+2,__doprnt@tmpval+2
  3690  000CCE  C014  F077         	movff	?___llmod+3,__doprnt@tmpval+3
  3691                           
  3692                           ; BSR set to: 0
  3693  000CD2  5052               	movf	__doprnt@pb^0,w,c
  3694  000CD4  6ED9               	movwf	fsr2l,c
  3695  000CD6  6ADA               	clrf	fsr2h,c
  3696  000CD8  0E02               	movlw	2
  3697  000CDA  26D9               	addwf	fsr2l,f,c
  3698  000CDC  50DE               	movf	postinc2,w,c
  3699  000CDE  10DE               	iorwf	postinc2,w,c
  3700  000CE0  B4D8               	btfsc	status,2,c
  3701  000CE2  D013               	goto	l5709
  3702                           
  3703                           ; BSR set to: 0
  3704  000CE4  5052               	movf	__doprnt@pb^0,w,c
  3705  000CE6  6ED9               	movwf	fsr2l,c
  3706  000CE8  6ADA               	clrf	fsr2h,c
  3707  000CEA  0E02               	movlw	2
  3708  000CEC  26D9               	addwf	fsr2l,f,c
  3709  000CEE  D801               	call	u7038
  3710  000CF0  D020               	goto	l5711
  3711  000CF2                     u7038:
  3712  000CF2  0005               	push	
  3713  000CF4  6EFA               	movwf	pclath,c
  3714  000CF6  50DE               	movf	postinc2,w,c
  3715  000CF8  6EFD               	movwf	tosl,c
  3716  000CFA  50DE               	movf	postinc2,w,c
  3717  000CFC  6EFE               	movwf	tosh,c
  3718  000CFE  50F8               	movf	tblptru,w,c
  3719  000D00  6EFF               	movwf	tosu,c
  3720  000D02  50FA               	movf	pclath,w,c
  3721  000D04  5174               	movf	__doprnt@tmpval& (0+255),w,b
  3722  000D06  0F30               	addlw	48
  3723  000D08  0012               	return		;indir
  3724  000D0A                     l5709:
  3725                           
  3726                           ; BSR set to: 0
  3727  000D0A  5052               	movf	__doprnt@pb^0,w,c
  3728  000D0C  6ED9               	movwf	fsr2l,c
  3729  000D0E  6ADA               	clrf	fsr2h,c
  3730  000D10  CFDE F060          	movff	postinc2,??__doprnt
  3731  000D14  CFDD F061          	movff	postdec2,??__doprnt+1
  3732  000D18  C060  FFD9         	movff	??__doprnt,fsr2l
  3733  000D1C  C061  FFDA         	movff	??__doprnt+1,fsr2h
  3734  000D20  5174               	movf	__doprnt@tmpval& (0+255),w,b
  3735  000D22  0F30               	addlw	48
  3736  000D24  6EDF               	movwf	indf2,c
  3737  000D26  5052               	movf	__doprnt@pb^0,w,c
  3738  000D28  6ED9               	movwf	fsr2l,c
  3739  000D2A  6ADA               	clrf	fsr2h,c
  3740  000D2C  2ADE               	incf	postinc2,f,c
  3741  000D2E  0E00               	movlw	0
  3742  000D30  22DD               	addwfc	postdec2,f,c
  3743  000D32                     l5711:
  3744                           
  3745                           ;doprnt.c: 1258: val %= dpowers[c];
  3746  000D32  C06C  F011         	movff	__doprnt@val,___llmod@dividend
  3747  000D36  C06D  F012         	movff	__doprnt@val+1,___llmod@dividend+1
  3748  000D3A  C06E  F013         	movff	__doprnt@val+2,___llmod@dividend+2
  3749  000D3E  C06F  F014         	movff	__doprnt@val+3,___llmod@dividend+3
  3750  000D42  0100               	movlb	0	; () banked
  3751  000D44  5180               	movf	__doprnt@c& (0+255),w,b
  3752  000D46  0D04               	mullw	4
  3753  000D48  0EA9               	movlw	low _dpowers
  3754  000D4A  24F3               	addwf	243,w,c
  3755  000D4C  6EF6               	movwf	tblptrl,c
  3756  000D4E  0E3E               	movlw	high _dpowers
  3757  000D50  20F4               	addwfc	244,w,c
  3758  000D52  6EF7               	movwf	tblptrh,c
  3759  000D54                     	if	0	;There are less than 3 active tblptr bytes
  3760  000D54                     	endif
  3761  000D54  0009               	tblrd		*+
  3762  000D56  CFF5 F015          	movff	tablat,___llmod@divisor
  3763  000D5A  0009               	tblrd		*+
  3764  000D5C  CFF5 F016          	movff	tablat,___llmod@divisor+1
  3765  000D60  0009               	tblrd		*+
  3766  000D62  CFF5 F017          	movff	tablat,___llmod@divisor+2
  3767  000D66  000A               	tblrd		*-
  3768  000D68  CFF5 F018          	movff	tablat,___llmod@divisor+3
  3769  000D6C  ECE8  F013         	call	___llmod
  3770  000D70  C011  F06C         	movff	?___llmod,__doprnt@val
  3771  000D74  C012  F06D         	movff	?___llmod+1,__doprnt@val+1
  3772  000D78  C013  F06E         	movff	?___llmod+2,__doprnt@val+2
  3773  000D7C  C014  F06F         	movff	?___llmod+3,__doprnt@val+3
  3774  000D80                     l5713:
  3775  000D80  0100               	movlb	0	; () banked
  3776  000D82  0780               	decf	__doprnt@c& (0+255),f,b
  3777  000D84  2980               	incf	__doprnt@c& (0+255),w,b
  3778  000D86  B4D8               	btfsc	status,2,c
  3779  000D88  D033               	goto	l5725
  3780  000D8A  D763               	goto	l5701
  3781  000D8C                     l5715:
  3782                           
  3783                           ; BSR set to: 0
  3784  000D8C  5052               	movf	__doprnt@pb^0,w,c
  3785  000D8E  6ED9               	movwf	fsr2l,c
  3786  000D90  6ADA               	clrf	fsr2h,c
  3787  000D92  0E02               	movlw	2
  3788  000D94  26D9               	addwf	fsr2l,f,c
  3789  000D96  50DE               	movf	postinc2,w,c
  3790  000D98  10DE               	iorwf	postinc2,w,c
  3791  000D9A  B4D8               	btfsc	status,2,c
  3792  000D9C  D012               	goto	l5719
  3793                           
  3794                           ; BSR set to: 0
  3795  000D9E  5052               	movf	__doprnt@pb^0,w,c
  3796  000DA0  6ED9               	movwf	fsr2l,c
  3797  000DA2  6ADA               	clrf	fsr2h,c
  3798  000DA4  0E02               	movlw	2
  3799  000DA6  26D9               	addwf	fsr2l,f,c
  3800  000DA8  D801               	call	u7068
  3801  000DAA  D01E               	goto	l5723
  3802  000DAC                     u7068:
  3803  000DAC  0005               	push	
  3804  000DAE  6EFA               	movwf	pclath,c
  3805  000DB0  50DE               	movf	postinc2,w,c
  3806  000DB2  6EFD               	movwf	tosl,c
  3807  000DB4  50DE               	movf	postinc2,w,c
  3808  000DB6  6EFE               	movwf	tosh,c
  3809  000DB8  50F8               	movf	tblptru,w,c
  3810  000DBA  6EFF               	movwf	tosu,c
  3811  000DBC  50FA               	movf	pclath,w,c
  3812  000DBE  0E30               	movlw	48
  3813  000DC0  0012               	return		;indir
  3814  000DC2                     l5719:
  3815                           
  3816                           ; BSR set to: 0
  3817  000DC2  5052               	movf	__doprnt@pb^0,w,c
  3818  000DC4  6ED9               	movwf	fsr2l,c
  3819  000DC6  6ADA               	clrf	fsr2h,c
  3820  000DC8  CFDE F060          	movff	postinc2,??__doprnt
  3821  000DCC  CFDD F061          	movff	postdec2,??__doprnt+1
  3822  000DD0  C060  FFD9         	movff	??__doprnt,fsr2l
  3823  000DD4  C061  FFDA         	movff	??__doprnt+1,fsr2h
  3824  000DD8  0E30               	movlw	48
  3825  000DDA  6EDF               	movwf	indf2,c
  3826                           
  3827                           ; BSR set to: 0
  3828  000DDC  5052               	movf	__doprnt@pb^0,w,c
  3829  000DDE  6ED9               	movwf	fsr2l,c
  3830  000DE0  6ADA               	clrf	fsr2h,c
  3831  000DE2  2ADE               	incf	postinc2,f,c
  3832  000DE4  0E00               	movlw	0
  3833  000DE6  22DD               	addwfc	postdec2,f,c
  3834  000DE8                     l5723:
  3835                           
  3836                           ;doprnt.c: 1263: prec--;
  3837  000DE8  0100               	movlb	0	; () banked
  3838  000DEA  077E               	decf	__doprnt@prec& (0+255),f,b
  3839  000DEC  A0D8               	btfss	status,0,c
  3840  000DEE  077F               	decf	(__doprnt@prec+1)& (0+255),f,b
  3841  000DF0                     l5725:
  3842                           
  3843                           ; BSR set to: 0
  3844  000DF0  517E               	movf	__doprnt@prec& (0+255),w,b
  3845  000DF2  117F               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  3846  000DF4  B4D8               	btfsc	status,2,c
  3847  000DF6  D1E8               	goto	u7370
  3848  000DF8  D7C9               	goto	l5715
  3849  000DFA                     l5727:
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;doprnt.c: 1272: };doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_
      +                          arg((*(int **)ap), (int)0));
  3853  000DFA  5055               	movf	__doprnt@ap^0,w,c
  3854  000DFC  6ED9               	movwf	fsr2l,c
  3855  000DFE  6ADA               	clrf	fsr2h,c
  3856  000E00  50DF               	movf	indf2,w,c
  3857  000E02  2ADF               	incf	indf2,f,c
  3858  000E04  2ADF               	incf	indf2,f,c
  3859  000E06  6ED9               	movwf	fsr2l,c
  3860  000E08  6ADA               	clrf	fsr2h,c
  3861  000E0A  CFDE F06C          	movff	postinc2,__doprnt@val
  3862  000E0E  CFDD F06D          	movff	postdec2,__doprnt@val+1
  3863  000E12  0E00               	movlw	0
  3864  000E14  BF6D               	btfsc	(__doprnt@val+1)& (0+255),7,b
  3865  000E16  0EFF               	movlw	-1
  3866  000E18  6F6E               	movwf	(__doprnt@val+2)& (0+255),b
  3867  000E1A  6F6F               	movwf	(__doprnt@val+3)& (0+255),b
  3868                           
  3869                           ; BSR set to: 0
  3870                           ;doprnt.c: 1287: if((long)val < 0) {
  3871  000E1C  AF6F               	btfss	(__doprnt@val+3)& (0+255),7,b
  3872  000E1E  D00A               	goto	l5735
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;doprnt.c: 1288: flag |= 0x03;
  3876  000E20  0E03               	movlw	3
  3877  000E22  1372               	iorwf	__doprnt@flag& (0+255),f,b
  3878                           
  3879                           ; BSR set to: 0
  3880                           ;doprnt.c: 1289: val = -val;
  3881  000E24  1F6F               	comf	(__doprnt@val+3)& (0+255),f,b
  3882  000E26  1F6E               	comf	(__doprnt@val+2)& (0+255),f,b
  3883  000E28  1F6D               	comf	(__doprnt@val+1)& (0+255),f,b
  3884  000E2A  6D6C               	negf	__doprnt@val& (0+255),b
  3885  000E2C  0E00               	movlw	0
  3886  000E2E  236D               	addwfc	(__doprnt@val+1)& (0+255),f,b
  3887  000E30  236E               	addwfc	(__doprnt@val+2)& (0+255),f,b
  3888  000E32  236F               	addwfc	(__doprnt@val+3)& (0+255),f,b
  3889  000E34                     l5735:
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1316: if(prec == 0 && val == 0)
  3893  000E34  517E               	movf	__doprnt@prec& (0+255),w,b
  3894  000E36  117F               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  3895  000E38  A4D8               	btfss	status,2,c
  3896  000E3A  D008               	goto	l5741
  3897                           
  3898                           ; BSR set to: 0
  3899  000E3C  516C               	movf	__doprnt@val& (0+255),w,b
  3900  000E3E  116D               	iorwf	(__doprnt@val+1)& (0+255),w,b
  3901  000E40  116E               	iorwf	(__doprnt@val+2)& (0+255),w,b
  3902  000E42  116F               	iorwf	(__doprnt@val+3)& (0+255),w,b
  3903  000E44  A4D8               	btfss	status,2,c
  3904  000E46  D002               	goto	l5741
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;doprnt.c: 1317: prec++;
  3908  000E48  4B7E               	infsnz	__doprnt@prec& (0+255),f,b
  3909  000E4A  2B7F               	incf	(__doprnt@prec+1)& (0+255),f,b
  3910  000E4C                     l5741:
  3911                           
  3912                           ; BSR set to: 0
  3913                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3914  000E4C  0E01               	movlw	1
  3915  000E4E  6F80               	movwf	__doprnt@c& (0+255),b
  3916  000E50                     l5747:
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;doprnt.c: 1332: if(val < dpowers[c])
  3920  000E50  5180               	movf	__doprnt@c& (0+255),w,b
  3921  000E52  0D04               	mullw	4
  3922  000E54  0EA9               	movlw	low _dpowers
  3923  000E56  24F3               	addwf	243,w,c
  3924  000E58  6EF6               	movwf	tblptrl,c
  3925  000E5A  0E3E               	movlw	high _dpowers
  3926  000E5C  20F4               	addwfc	244,w,c
  3927  000E5E  6EF7               	movwf	tblptrh,c
  3928  000E60                     	if	0	;There are less than 3 active tblptr bytes
  3929  000E60                     	endif
  3930  000E60  0009               	tblrd		*+
  3931  000E62  50F5               	movf	tablat,w,c
  3932  000E64  5D6C               	subwf	__doprnt@val& (0+255),w,b
  3933  000E66  0009               	tblrd		*+
  3934  000E68  50F5               	movf	tablat,w,c
  3935  000E6A  596D               	subwfb	(__doprnt@val+1)& (0+255),w,b
  3936  000E6C  0009               	tblrd		*+
  3937  000E6E  50F5               	movf	tablat,w,c
  3938  000E70  596E               	subwfb	(__doprnt@val+2)& (0+255),w,b
  3939  000E72  0009               	tblrd		*+
  3940  000E74  50F5               	movf	tablat,w,c
  3941  000E76  596F               	subwfb	(__doprnt@val+3)& (0+255),w,b
  3942  000E78  A0D8               	btfss	status,0,c
  3943  000E7A  D005               	goto	u7120
  3944                           
  3945                           ; BSR set to: 0
  3946  000E7C  2B80               	incf	__doprnt@c& (0+255),f,b
  3947                           
  3948                           ; BSR set to: 0
  3949  000E7E  0E0A               	movlw	10
  3950  000E80  1980               	xorwf	__doprnt@c& (0+255),w,b
  3951  000E82  A4D8               	btfss	status,2,c
  3952  000E84  D7E5               	goto	l5747
  3953  000E86                     u7120:
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;doprnt.c: 1365: if(c < prec)
  3957  000E86  5180               	movf	__doprnt@c& (0+255),w,b
  3958  000E88  6F60               	movwf	??__doprnt& (0+255),b
  3959  000E8A  6B61               	clrf	(??__doprnt+1)& (0+255),b
  3960  000E8C  517E               	movf	__doprnt@prec& (0+255),w,b
  3961  000E8E  5D60               	subwf	??__doprnt& (0+255),w,b
  3962  000E90  5161               	movf	(??__doprnt+1)& (0+255),w,b
  3963  000E92  0A80               	xorlw	128
  3964  000E94  6F62               	movwf	(??__doprnt+2)& (0+255),b
  3965  000E96  517F               	movf	(__doprnt@prec+1)& (0+255),w,b
  3966  000E98  0A80               	xorlw	128
  3967  000E9A  5962               	subwfb	(??__doprnt+2)& (0+255),w,b
  3968  000E9C  B0D8               	btfsc	status,0,c
  3969  000E9E  D003               	goto	l5759
  3970                           
  3971                           ; BSR set to: 0
  3972                           ;doprnt.c: 1366: c = (char)prec;
  3973  000EA0  C07E  F080         	movff	__doprnt@prec,__doprnt@c
  3974  000EA4  D010               	goto	l5763
  3975  000EA6                     l5759:
  3976                           
  3977                           ; BSR set to: 0
  3978                           ;doprnt.c: 1367: else if(prec < c)
  3979  000EA6  5180               	movf	__doprnt@c& (0+255),w,b
  3980  000EA8  6F60               	movwf	??__doprnt& (0+255),b
  3981  000EAA  6B61               	clrf	(??__doprnt+1)& (0+255),b
  3982  000EAC  5160               	movf	??__doprnt& (0+255),w,b
  3983  000EAE  5D7E               	subwf	__doprnt@prec& (0+255),w,b
  3984  000EB0  517F               	movf	(__doprnt@prec+1)& (0+255),w,b
  3985  000EB2  0A80               	xorlw	128
  3986  000EB4  6F62               	movwf	(??__doprnt+2)& (0+255),b
  3987  000EB6  5161               	movf	(??__doprnt+1)& (0+255),w,b
  3988  000EB8  0A80               	xorlw	128
  3989  000EBA  5962               	subwfb	(??__doprnt+2)& (0+255),w,b
  3990  000EBC  B0D8               	btfsc	status,0,c
  3991  000EBE  D003               	goto	l5763
  3992                           
  3993                           ; BSR set to: 0
  3994                           ;doprnt.c: 1368: prec = c;
  3995  000EC0  C080  F07E         	movff	__doprnt@c,__doprnt@prec
  3996  000EC4  6B7F               	clrf	(__doprnt@prec+1)& (0+255),b
  3997  000EC6                     l5763:
  3998                           
  3999                           ; BSR set to: 0
  4000                           ;doprnt.c: 1371: if(width && flag & 0x03)
  4001  000EC6  517C               	movf	__doprnt@width& (0+255),w,b
  4002  000EC8  117D               	iorwf	(__doprnt@width+1)& (0+255),w,b
  4003  000ECA  B4D8               	btfsc	status,2,c
  4004  000ECC  D009               	goto	l5769
  4005                           
  4006                           ; BSR set to: 0
  4007  000ECE  C072  F060         	movff	__doprnt@flag,??__doprnt
  4008  000ED2  0E03               	movlw	3
  4009  000ED4  1760               	andwf	??__doprnt& (0+255),f,b
  4010  000ED6  B4D8               	btfsc	status,2,c
  4011  000ED8  D003               	goto	l5769
  4012                           
  4013                           ; BSR set to: 0
  4014                           ;doprnt.c: 1372: width--;
  4015  000EDA  077C               	decf	__doprnt@width& (0+255),f,b
  4016  000EDC  A0D8               	btfss	status,0,c
  4017  000EDE  077D               	decf	(__doprnt@width+1)& (0+255),f,b
  4018  000EE0                     l5769:
  4019                           
  4020                           ; BSR set to: 0
  4021                           ;doprnt.c: 1374: if(flag & 0x4000) {
  4022  000EE0  AD73               	btfss	(__doprnt@flag+1)& (0+255),6,b
  4023  000EE2  D013               	goto	l5777
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;doprnt.c: 1375: if(width > prec)
  4027  000EE4  517C               	movf	__doprnt@width& (0+255),w,b
  4028  000EE6  5D7E               	subwf	__doprnt@prec& (0+255),w,b
  4029  000EE8  517F               	movf	(__doprnt@prec+1)& (0+255),w,b
  4030  000EEA  0A80               	xorlw	128
  4031  000EEC  6F60               	movwf	??__doprnt& (0+255),b
  4032  000EEE  517D               	movf	(__doprnt@width+1)& (0+255),w,b
  4033  000EF0  0A80               	xorlw	128
  4034  000EF2  5960               	subwfb	??__doprnt& (0+255),w,b
  4035  000EF4  B0D8               	btfsc	status,0,c
  4036  000EF6  D005               	goto	l5775
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;doprnt.c: 1376: width -= prec;
  4040  000EF8  517E               	movf	__doprnt@prec& (0+255),w,b
  4041  000EFA  5F7C               	subwf	__doprnt@width& (0+255),f,b
  4042  000EFC  517F               	movf	(__doprnt@prec+1)& (0+255),w,b
  4043  000EFE  5B7D               	subwfb	(__doprnt@width+1)& (0+255),f,b
  4044  000F00  D004               	goto	l5777
  4045  000F02                     l5775:
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;doprnt.c: 1377: else;doprnt.c: 1378: width = 0;
  4049  000F02  0E00               	movlw	0
  4050  000F04  6F7D               	movwf	(__doprnt@width+1)& (0+255),b
  4051  000F06  0E00               	movlw	0
  4052  000F08  6F7C               	movwf	__doprnt@width& (0+255),b
  4053  000F0A                     l5777:
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;doprnt.c: 1379: };doprnt.c: 1407: if(width > c)
  4057  000F0A  5180               	movf	__doprnt@c& (0+255),w,b
  4058  000F0C  6F60               	movwf	??__doprnt& (0+255),b
  4059  000F0E  6B61               	clrf	(??__doprnt+1)& (0+255),b
  4060  000F10  517C               	movf	__doprnt@width& (0+255),w,b
  4061  000F12  5D60               	subwf	??__doprnt& (0+255),w,b
  4062  000F14  5161               	movf	(??__doprnt+1)& (0+255),w,b
  4063  000F16  0A80               	xorlw	128
  4064  000F18  6F62               	movwf	(??__doprnt+2)& (0+255),b
  4065  000F1A  517D               	movf	(__doprnt@width+1)& (0+255),w,b
  4066  000F1C  0A80               	xorlw	128
  4067  000F1E  5962               	subwfb	(??__doprnt+2)& (0+255),w,b
  4068  000F20  B0D8               	btfsc	status,0,c
  4069  000F22  D005               	goto	l5781
  4070                           
  4071                           ; BSR set to: 0
  4072                           ;doprnt.c: 1408: width -= c;
  4073  000F24  5180               	movf	__doprnt@c& (0+255),w,b
  4074  000F26  5F7C               	subwf	__doprnt@width& (0+255),f,b
  4075  000F28  0E00               	movlw	0
  4076  000F2A  5B7D               	subwfb	(__doprnt@width+1)& (0+255),f,b
  4077  000F2C  D004               	goto	l5783
  4078  000F2E                     l5781:
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  4082  000F2E  0E00               	movlw	0
  4083  000F30  6F7D               	movwf	(__doprnt@width+1)& (0+255),b
  4084  000F32  0E00               	movlw	0
  4085  000F34  6F7C               	movwf	__doprnt@width& (0+255),b
  4086  000F36                     l5783:
  4087                           
  4088                           ; BSR set to: 0
  4089                           ;doprnt.c: 1413: if(flag & 0x04) {
  4090  000F36  A572               	btfss	__doprnt@flag& (0+255),2,b
  4091  000F38  D06C               	goto	l5807
  4092                           
  4093                           ; BSR set to: 0
  4094                           ;doprnt.c: 1418: if(flag & 0x03)
  4095  000F3A  C072  F060         	movff	__doprnt@flag,??__doprnt
  4096  000F3E  0E03               	movlw	3
  4097  000F40  1760               	andwf	??__doprnt& (0+255),f,b
  4098  000F42  B4D8               	btfsc	status,2,c
  4099  000F44  D02E               	goto	l5795
  4100                           
  4101                           ; BSR set to: 0
  4102  000F46  5052               	movf	__doprnt@pb^0,w,c
  4103  000F48  6ED9               	movwf	fsr2l,c
  4104  000F4A  6ADA               	clrf	fsr2h,c
  4105  000F4C  0E02               	movlw	2
  4106  000F4E  26D9               	addwf	fsr2l,f,c
  4107  000F50  50DE               	movf	postinc2,w,c
  4108  000F52  10DE               	iorwf	postinc2,w,c
  4109  000F54  B4D8               	btfsc	status,2,c
  4110  000F56  D012               	goto	l5791
  4111                           
  4112                           ; BSR set to: 0
  4113  000F58  5052               	movf	__doprnt@pb^0,w,c
  4114  000F5A  6ED9               	movwf	fsr2l,c
  4115  000F5C  6ADA               	clrf	fsr2h,c
  4116  000F5E  0E02               	movlw	2
  4117  000F60  26D9               	addwf	fsr2l,f,c
  4118  000F62  D801               	call	u7238
  4119  000F64  D01E               	goto	l5795
  4120  000F66                     u7238:
  4121  000F66  0005               	push	
  4122  000F68  6EFA               	movwf	pclath,c
  4123  000F6A  50DE               	movf	postinc2,w,c
  4124  000F6C  6EFD               	movwf	tosl,c
  4125  000F6E  50DE               	movf	postinc2,w,c
  4126  000F70  6EFE               	movwf	tosh,c
  4127  000F72  50F8               	movf	tblptru,w,c
  4128  000F74  6EFF               	movwf	tosu,c
  4129  000F76  50FA               	movf	pclath,w,c
  4130  000F78  0E2D               	movlw	45
  4131  000F7A  0012               	return		;indir
  4132  000F7C                     l5791:
  4133                           
  4134                           ; BSR set to: 0
  4135  000F7C  5052               	movf	__doprnt@pb^0,w,c
  4136  000F7E  6ED9               	movwf	fsr2l,c
  4137  000F80  6ADA               	clrf	fsr2h,c
  4138  000F82  CFDE F060          	movff	postinc2,??__doprnt
  4139  000F86  CFDD F061          	movff	postdec2,??__doprnt+1
  4140  000F8A  C060  FFD9         	movff	??__doprnt,fsr2l
  4141  000F8E  C061  FFDA         	movff	??__doprnt+1,fsr2h
  4142  000F92  0E2D               	movlw	45
  4143  000F94  6EDF               	movwf	indf2,c
  4144                           
  4145                           ; BSR set to: 0
  4146  000F96  5052               	movf	__doprnt@pb^0,w,c
  4147  000F98  6ED9               	movwf	fsr2l,c
  4148  000F9A  6ADA               	clrf	fsr2h,c
  4149  000F9C  2ADE               	incf	postinc2,f,c
  4150  000F9E  0E00               	movlw	0
  4151  000FA0  22DD               	addwfc	postdec2,f,c
  4152  000FA2                     l5795:
  4153                           
  4154                           ;doprnt.c: 1441: if(width)
  4155  000FA2  0100               	movlb	0	; () banked
  4156  000FA4  517C               	movf	__doprnt@width& (0+255),w,b
  4157  000FA6  117D               	iorwf	(__doprnt@width+1)& (0+255),w,b
  4158  000FA8  B4D8               	btfsc	status,2,c
  4159  000FAA  D105               	goto	l5839
  4160                           
  4161                           ; BSR set to: 0
  4162  000FAC  5052               	movf	__doprnt@pb^0,w,c
  4163  000FAE  6ED9               	movwf	fsr2l,c
  4164  000FB0  6ADA               	clrf	fsr2h,c
  4165  000FB2  0E02               	movlw	2
  4166  000FB4  26D9               	addwf	fsr2l,f,c
  4167  000FB6  50DE               	movf	postinc2,w,c
  4168  000FB8  10DE               	iorwf	postinc2,w,c
  4169  000FBA  B4D8               	btfsc	status,2,c
  4170  000FBC  D012               	goto	l5801
  4171                           
  4172                           ; BSR set to: 0
  4173  000FBE  5052               	movf	__doprnt@pb^0,w,c
  4174  000FC0  6ED9               	movwf	fsr2l,c
  4175  000FC2  6ADA               	clrf	fsr2h,c
  4176  000FC4  0E02               	movlw	2
  4177  000FC6  26D9               	addwf	fsr2l,f,c
  4178  000FC8  D801               	call	u7268
  4179  000FCA  D01E               	goto	l5805
  4180  000FCC                     u7268:
  4181  000FCC  0005               	push	
  4182  000FCE  6EFA               	movwf	pclath,c
  4183  000FD0  50DE               	movf	postinc2,w,c
  4184  000FD2  6EFD               	movwf	tosl,c
  4185  000FD4  50DE               	movf	postinc2,w,c
  4186  000FD6  6EFE               	movwf	tosh,c
  4187  000FD8  50F8               	movf	tblptru,w,c
  4188  000FDA  6EFF               	movwf	tosu,c
  4189  000FDC  50FA               	movf	pclath,w,c
  4190  000FDE  0E30               	movlw	48
  4191  000FE0  0012               	return		;indir
  4192  000FE2                     l5801:
  4193                           
  4194                           ; BSR set to: 0
  4195  000FE2  5052               	movf	__doprnt@pb^0,w,c
  4196  000FE4  6ED9               	movwf	fsr2l,c
  4197  000FE6  6ADA               	clrf	fsr2h,c
  4198  000FE8  CFDE F060          	movff	postinc2,??__doprnt
  4199  000FEC  CFDD F061          	movff	postdec2,??__doprnt+1
  4200  000FF0  C060  FFD9         	movff	??__doprnt,fsr2l
  4201  000FF4  C061  FFDA         	movff	??__doprnt+1,fsr2h
  4202  000FF8  0E30               	movlw	48
  4203  000FFA  6EDF               	movwf	indf2,c
  4204                           
  4205                           ; BSR set to: 0
  4206  000FFC  5052               	movf	__doprnt@pb^0,w,c
  4207  000FFE  6ED9               	movwf	fsr2l,c
  4208  001000  6ADA               	clrf	fsr2h,c
  4209  001002  2ADE               	incf	postinc2,f,c
  4210  001004  0E00               	movlw	0
  4211  001006  22DD               	addwfc	postdec2,f,c
  4212  001008                     l5805:
  4213                           
  4214                           ;doprnt.c: 1444: while(--width);
  4215  001008  0100               	movlb	0	; () banked
  4216  00100A  077C               	decf	__doprnt@width& (0+255),f,b
  4217  00100C  A0D8               	btfss	status,0,c
  4218  00100E  077D               	decf	(__doprnt@width+1)& (0+255),f,b
  4219  001010  D7C9               	goto	L8
  4220  001012                     l5807:
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  4224  001012  517C               	movf	__doprnt@width& (0+255),w,b
  4225  001014  117D               	iorwf	(__doprnt@width+1)& (0+255),w,b
  4226  001016  B4D8               	btfsc	status,2,c
  4227  001018  D036               	goto	u7310
  4228  00101A                     u7280:
  4229                           
  4230                           ; BSR set to: 0
  4231  00101A  5052               	movf	__doprnt@pb^0,w,c
  4232  00101C  6ED9               	movwf	fsr2l,c
  4233  00101E  6ADA               	clrf	fsr2h,c
  4234  001020  0E02               	movlw	2
  4235  001022  26D9               	addwf	fsr2l,f,c
  4236  001024  50DE               	movf	postinc2,w,c
  4237  001026  10DE               	iorwf	postinc2,w,c
  4238  001028  B4D8               	btfsc	status,2,c
  4239  00102A  D012               	goto	l5813
  4240                           
  4241                           ; BSR set to: 0
  4242  00102C  5052               	movf	__doprnt@pb^0,w,c
  4243  00102E  6ED9               	movwf	fsr2l,c
  4244  001030  6ADA               	clrf	fsr2h,c
  4245  001032  0E02               	movlw	2
  4246  001034  26D9               	addwf	fsr2l,f,c
  4247  001036  D801               	call	u7308
  4248  001038  D01E               	goto	l5817
  4249  00103A                     u7308:
  4250  00103A  0005               	push	
  4251  00103C  6EFA               	movwf	pclath,c
  4252  00103E  50DE               	movf	postinc2,w,c
  4253  001040  6EFD               	movwf	tosl,c
  4254  001042  50DE               	movf	postinc2,w,c
  4255  001044  6EFE               	movwf	tosh,c
  4256  001046  50F8               	movf	tblptru,w,c
  4257  001048  6EFF               	movwf	tosu,c
  4258  00104A  50FA               	movf	pclath,w,c
  4259  00104C  0E20               	movlw	32
  4260  00104E  0012               	return		;indir
  4261  001050                     l5813:
  4262                           
  4263                           ; BSR set to: 0
  4264  001050  5052               	movf	__doprnt@pb^0,w,c
  4265  001052  6ED9               	movwf	fsr2l,c
  4266  001054  6ADA               	clrf	fsr2h,c
  4267  001056  CFDE F060          	movff	postinc2,??__doprnt
  4268  00105A  CFDD F061          	movff	postdec2,??__doprnt+1
  4269  00105E  C060  FFD9         	movff	??__doprnt,fsr2l
  4270  001062  C061  FFDA         	movff	??__doprnt+1,fsr2h
  4271  001066  0E20               	movlw	32
  4272  001068  6EDF               	movwf	indf2,c
  4273                           
  4274                           ; BSR set to: 0
  4275  00106A  5052               	movf	__doprnt@pb^0,w,c
  4276  00106C  6ED9               	movwf	fsr2l,c
  4277  00106E  6ADA               	clrf	fsr2h,c
  4278  001070  2ADE               	incf	postinc2,f,c
  4279  001072  0E00               	movlw	0
  4280  001074  22DD               	addwfc	postdec2,f,c
  4281  001076                     l5817:
  4282                           
  4283                           ;doprnt.c: 1457: while(--width);
  4284  001076  0100               	movlb	0	; () banked
  4285  001078  077C               	decf	__doprnt@width& (0+255),f,b
  4286  00107A  A0D8               	btfss	status,0,c
  4287  00107C  077D               	decf	(__doprnt@width+1)& (0+255),f,b
  4288  00107E  517C               	movf	__doprnt@width& (0+255),w,b
  4289  001080  117D               	iorwf	(__doprnt@width+1)& (0+255),w,b
  4290  001082  A4D8               	btfss	status,2,c
  4291  001084  D7CA               	goto	u7280
  4292  001086                     u7310:
  4293                           
  4294                           ; BSR set to: 0
  4295                           ;doprnt.c: 1464: if(flag & 0x03)
  4296  001086  C072  F060         	movff	__doprnt@flag,??__doprnt
  4297  00108A  0E03               	movlw	3
  4298  00108C  1760               	andwf	??__doprnt& (0+255),f,b
  4299  00108E  B4D8               	btfsc	status,2,c
  4300  001090  D092               	goto	l5839
  4301                           
  4302                           ; BSR set to: 0
  4303  001092  5052               	movf	__doprnt@pb^0,w,c
  4304  001094  6ED9               	movwf	fsr2l,c
  4305  001096  6ADA               	clrf	fsr2h,c
  4306  001098  0E02               	movlw	2
  4307  00109A  26D9               	addwf	fsr2l,f,c
  4308  00109C  50DE               	movf	postinc2,w,c
  4309  00109E  10DE               	iorwf	postinc2,w,c
  4310  0010A0  B4D8               	btfsc	status,2,c
  4311  0010A2  D012               	goto	l5825
  4312                           
  4313                           ; BSR set to: 0
  4314  0010A4  5052               	movf	__doprnt@pb^0,w,c
  4315  0010A6  6ED9               	movwf	fsr2l,c
  4316  0010A8  6ADA               	clrf	fsr2h,c
  4317  0010AA  0E02               	movlw	2
  4318  0010AC  26D9               	addwf	fsr2l,f,c
  4319  0010AE  D801               	call	u7348
  4320  0010B0  D082               	goto	l5839
  4321  0010B2                     u7348:
  4322  0010B2  0005               	push	
  4323  0010B4  6EFA               	movwf	pclath,c
  4324  0010B6  50DE               	movf	postinc2,w,c
  4325  0010B8  6EFD               	movwf	tosl,c
  4326  0010BA  50DE               	movf	postinc2,w,c
  4327  0010BC  6EFE               	movwf	tosh,c
  4328  0010BE  50F8               	movf	tblptru,w,c
  4329  0010C0  6EFF               	movwf	tosu,c
  4330  0010C2  50FA               	movf	pclath,w,c
  4331  0010C4  0E2D               	movlw	45
  4332  0010C6  0012               	return		;indir
  4333  0010C8                     l5825:
  4334                           
  4335                           ; BSR set to: 0
  4336  0010C8  5052               	movf	__doprnt@pb^0,w,c
  4337  0010CA  6ED9               	movwf	fsr2l,c
  4338  0010CC  6ADA               	clrf	fsr2h,c
  4339  0010CE  CFDE F060          	movff	postinc2,??__doprnt
  4340  0010D2  CFDD F061          	movff	postdec2,??__doprnt+1
  4341  0010D6  C060  FFD9         	movff	??__doprnt,fsr2l
  4342  0010DA  C061  FFDA         	movff	??__doprnt+1,fsr2h
  4343  0010DE  0E2D               	movlw	45
  4344  0010E0  6EDF               	movwf	indf2,c
  4345  0010E2  D063               	goto	l5837
  4346  0010E4                     l5829:
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  4350  0010E4  C07E  F060         	movff	__doprnt@prec,??__doprnt
  4351  0010E8  C07F  F061         	movff	__doprnt@prec+1,??__doprnt+1
  4352  0010EC  90D8               	bcf	status,0,c
  4353  0010EE  3760               	rlcf	??__doprnt& (0+255),f,b
  4354  0010F0  3761               	rlcf	(??__doprnt+1)& (0+255),f,b
  4355  0010F2  90D8               	bcf	status,0,c
  4356  0010F4  3760               	rlcf	??__doprnt& (0+255),f,b
  4357  0010F6  3761               	rlcf	(??__doprnt+1)& (0+255),f,b
  4358  0010F8  0EA9               	movlw	low _dpowers
  4359  0010FA  2560               	addwf	??__doprnt& (0+255),w,b
  4360  0010FC  6EF6               	movwf	tblptrl,c
  4361  0010FE  0E3E               	movlw	high _dpowers
  4362  001100  2161               	addwfc	(??__doprnt+1)& (0+255),w,b
  4363  001102  6EF7               	movwf	tblptrh,c
  4364  001104                     	if	0	;There are less than 3 active tblptr bytes
  4365  001104                     	endif
  4366  001104  0009               	tblrd		*+
  4367  001106  CFF5 F008          	movff	tablat,___lldiv@divisor
  4368  00110A  0009               	tblrd		*+
  4369  00110C  CFF5 F009          	movff	tablat,___lldiv@divisor+1
  4370  001110  0009               	tblrd		*+
  4371  001112  CFF5 F00A          	movff	tablat,___lldiv@divisor+2
  4372  001116  000A               	tblrd		*-
  4373  001118  CFF5 F00B          	movff	tablat,___lldiv@divisor+3
  4374  00111C  C06C  F004         	movff	__doprnt@val,___lldiv@dividend
  4375  001120  C06D  F005         	movff	__doprnt@val+1,___lldiv@dividend+1
  4376  001124  C06E  F006         	movff	__doprnt@val+2,___lldiv@dividend+2
  4377  001128  C06F  F007         	movff	__doprnt@val+3,___lldiv@dividend+3
  4378  00112C  EC35  F013         	call	___lldiv
  4379  001130  C004  F011         	movff	?___lldiv,___llmod@dividend
  4380  001134  C005  F012         	movff	?___lldiv+1,___llmod@dividend+1
  4381  001138  C006  F013         	movff	?___lldiv+2,___llmod@dividend+2
  4382  00113C  C007  F014         	movff	?___lldiv+3,___llmod@dividend+3
  4383  001140  0E0A               	movlw	10
  4384  001142  6E15               	movwf	___llmod@divisor^0,c
  4385  001144  0E00               	movlw	0
  4386  001146  6E16               	movwf	(___llmod@divisor+1)^0,c
  4387  001148  0E00               	movlw	0
  4388  00114A  6E17               	movwf	(___llmod@divisor+2)^0,c
  4389  00114C  0E00               	movlw	0
  4390  00114E  6E18               	movwf	(___llmod@divisor+3)^0,c
  4391  001150  ECE8  F013         	call	___llmod	;wreg free
  4392  001154  5011               	movf	?___llmod^0,w,c
  4393  001156  0F30               	addlw	48
  4394  001158  6F80               	movwf	__doprnt@c& (0+255),b
  4395                           
  4396                           ; BSR set to: 0
  4397  00115A  5052               	movf	__doprnt@pb^0,w,c
  4398  00115C  6ED9               	movwf	fsr2l,c
  4399  00115E  6ADA               	clrf	fsr2h,c
  4400  001160  0E02               	movlw	2
  4401  001162  26D9               	addwf	fsr2l,f,c
  4402  001164  50DE               	movf	postinc2,w,c
  4403  001166  10DE               	iorwf	postinc2,w,c
  4404  001168  B4D8               	btfsc	status,2,c
  4405  00116A  D012               	goto	l5835
  4406                           
  4407                           ; BSR set to: 0
  4408  00116C  5052               	movf	__doprnt@pb^0,w,c
  4409  00116E  6ED9               	movwf	fsr2l,c
  4410  001170  6ADA               	clrf	fsr2h,c
  4411  001172  0E02               	movlw	2
  4412  001174  26D9               	addwf	fsr2l,f,c
  4413  001176  D801               	call	u7368
  4414  001178  D01E               	goto	l5839
  4415  00117A                     u7368:
  4416  00117A  0005               	push	
  4417  00117C  6EFA               	movwf	pclath,c
  4418  00117E  50DE               	movf	postinc2,w,c
  4419  001180  6EFD               	movwf	tosl,c
  4420  001182  50DE               	movf	postinc2,w,c
  4421  001184  6EFE               	movwf	tosh,c
  4422  001186  50F8               	movf	tblptru,w,c
  4423  001188  6EFF               	movwf	tosu,c
  4424  00118A  50FA               	movf	pclath,w,c
  4425  00118C  5180               	movf	__doprnt@c& (0+255),w,b
  4426  00118E  0012               	return		;indir
  4427  001190                     l5835:
  4428                           
  4429                           ; BSR set to: 0
  4430  001190  5052               	movf	__doprnt@pb^0,w,c
  4431  001192  6ED9               	movwf	fsr2l,c
  4432  001194  6ADA               	clrf	fsr2h,c
  4433  001196  CFDE F060          	movff	postinc2,??__doprnt
  4434  00119A  CFDD F061          	movff	postdec2,??__doprnt+1
  4435  00119E  C060  FFD9         	movff	??__doprnt,fsr2l
  4436  0011A2  C061  FFDA         	movff	??__doprnt+1,fsr2h
  4437  0011A6  C080  FFDF         	movff	__doprnt@c,indf2
  4438  0011AA                     l5837:
  4439                           
  4440                           ; BSR set to: 0
  4441  0011AA  5052               	movf	__doprnt@pb^0,w,c
  4442  0011AC  6ED9               	movwf	fsr2l,c
  4443  0011AE  6ADA               	clrf	fsr2h,c
  4444  0011B0  2ADE               	incf	postinc2,f,c
  4445  0011B2  0E00               	movlw	0
  4446  0011B4  22DD               	addwfc	postdec2,f,c
  4447  0011B6                     l5839:
  4448  0011B6  0100               	movlb	0	; () banked
  4449  0011B8  077E               	decf	__doprnt@prec& (0+255),f,b
  4450  0011BA  A0D8               	btfss	status,0,c
  4451  0011BC  077F               	decf	(__doprnt@prec+1)& (0+255),f,b
  4452  0011BE  297E               	incf	__doprnt@prec& (0+255),w,b
  4453  0011C0  E191               	bnz	l5829
  4454  0011C2  297F               	incf	(__doprnt@prec+1)& (0+255),w,b
  4455  0011C4  A4D8               	btfss	status,2,c
  4456  0011C6  D78E               	goto	l5829
  4457  0011C8                     u7370:
  4458  0011C8  C053  FFF6         	movff	__doprnt@f,tblptrl
  4459  0011CC  C054  FFF7         	movff	__doprnt@f+1,tblptrh
  4460  0011D0  4A53               	infsnz	__doprnt@f^0,f,c
  4461  0011D2  2A54               	incf	(__doprnt@f+1)^0,f,c
  4462  0011D4                     	if	0	;tblptru may be non-zero
  4463  0011D4                     	endif
  4464  0011D4                     	if	0	;tblptru may be non-zero
  4465  0011D4                     	endif
  4466  0011D4  0008               	tblrd		*
  4467  0011D6  CFF5 F080          	movff	tablat,__doprnt@c
  4468  0011DA  0100               	movlb	0	; () banked
  4469  0011DC  5180               	movf	__doprnt@c& (0+255),w,b
  4470  0011DE  A4D8               	btfss	status,2,c
  4471  0011E0  EF66  F000         	goto	l5415
  4472  0011E4                     u7380:
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;doprnt.c: 1566: return 0;
  4476  0011E4  0E00               	movlw	0
  4477  0011E6  6E53               	movwf	(?__doprnt+1)^0,c
  4478  0011E8  0E00               	movlw	0
  4479  0011EA  6E52               	movwf	?__doprnt^0,c
  4480                           
  4481                           ; BSR set to: 0
  4482  0011EC  0012               	return		;funcret
  4483  0011EE                     __end_of__doprnt:
  4484                           	callstack 0
  4485                           
  4486 ;; *************** function _scale *****************
  4487 ;; Defined at:
  4488 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;  scl             1    wreg     char 
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;  scl             1   50[COMRAM] char 
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  4   42[COMRAM] char 
  4495 ;; Registers used:
  4496 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4497 ;; Tracked objects:
  4498 ;;		On entry : 3F/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4502 ;;      Params:         4       0       0       0
  4503 ;;      Locals:         5       0       0       0
  4504 ;;      Temps:          0       0       0       0
  4505 ;;      Totals:         9       0       0       0
  4506 ;;Total ram usage:        9 bytes
  4507 ;; Hardware stack levels used: 1
  4508 ;; Hardware stack levels required when called: 2
  4509 ;; This function calls:
  4510 ;;		___awdiv
  4511 ;;		___awmod
  4512 ;;		___flmul
  4513 ;; This function is called by:
  4514 ;;		__doprnt
  4515 ;; This function uses a non-reentrant model
  4516 ;;
  4517                           
  4518                           	psect	text5
  4519  0011EE                     __ptext5:
  4520                           	callstack 0
  4521  0011EE                     _scale:
  4522                           	callstack 26
  4523                           
  4524                           ; BSR set to: 0
  4525                           ;incstack = 0
  4526                           ;scale@scl stored from wreg
  4527  0011EE  6E33               	movwf	scale@scl^0,c
  4528                           
  4529                           ;doprnt.c: 436: if(scl < 0) {
  4530  0011F0  AE33               	btfss	scale@scl^0,7,c
  4531  0011F2  D0F3               	goto	l5265
  4532                           
  4533                           ;doprnt.c: 437: scl = -scl;
  4534  0011F4  6C33               	negf	scale@scl^0,c
  4535                           
  4536                           ;doprnt.c: 438: if(scl>=110)
  4537  0011F6  5033               	movf	scale@scl^0,w,c
  4538  0011F8  0A80               	xorlw	128
  4539  0011FA  0F12               	addlw	-238
  4540  0011FC  A0D8               	btfss	status,0,c
  4541  0011FE  D088               	goto	l5255
  4542                           
  4543                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4544  001200  0E00               	movlw	0
  4545  001202  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  4546  001204  0E0A               	movlw	10
  4547  001206  6E0C               	movwf	___awdiv@divisor^0,c
  4548  001208  0E00               	movlw	0
  4549  00120A  6E07               	movwf	(___awmod@divisor+1)^0,c
  4550  00120C  0E64               	movlw	100
  4551  00120E  6E06               	movwf	___awmod@divisor^0,c
  4552  001210  5033               	movf	scale@scl^0,w,c
  4553  001212  6E04               	movwf	___awmod@dividend^0,c
  4554  001214  6A05               	clrf	(___awmod@dividend+1)^0,c
  4555  001216  BE04               	btfsc	___awmod@dividend^0,7,c
  4556  001218  0605               	decf	(___awmod@dividend+1)^0,f,c
  4557  00121A  ECB0  F013         	call	___awmod
  4558  00121E  C004  F00A         	movff	?___awmod,___awdiv@dividend
  4559  001222  C005  F00B         	movff	?___awmod+1,___awdiv@dividend+1
  4560  001226  ECF3  F012         	call	___awdiv	;wreg free
  4561  00122A  0E09               	movlw	9
  4562  00122C  260A               	addwf	?___awdiv^0,f,c
  4563  00122E  500A               	movf	?___awdiv^0,w,c
  4564  001230  0D04               	mullw	4
  4565  001232  0E75               	movlw	low __npowers_
  4566  001234  24F3               	addwf	243,w,c
  4567  001236  6EF6               	movwf	tblptrl,c
  4568  001238  0E3E               	movlw	high __npowers_
  4569  00123A  20F4               	addwfc	244,w,c
  4570  00123C  6EF7               	movwf	tblptrh,c
  4571  00123E                     	if	0	;There are less than 3 active tblptr bytes
  4572  00123E                     	endif
  4573  00123E  0009               	tblrd		*+
  4574  001240  CFF5 F016          	movff	tablat,___flmul@a
  4575  001244  0009               	tblrd		*+
  4576  001246  CFF5 F017          	movff	tablat,___flmul@a+1
  4577  00124A  0009               	tblrd		*+
  4578  00124C  CFF5 F018          	movff	tablat,___flmul@a+2
  4579  001250  000A               	tblrd		*-
  4580  001252  CFF5 F019          	movff	tablat,___flmul@a+3
  4581  001256  0E00               	movlw	0
  4582  001258  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  4583  00125A  0E64               	movlw	100
  4584  00125C  6E0C               	movwf	___awdiv@divisor^0,c
  4585  00125E  5033               	movf	scale@scl^0,w,c
  4586  001260  6E0A               	movwf	___awdiv@dividend^0,c
  4587  001262  6A0B               	clrf	(___awdiv@dividend+1)^0,c
  4588  001264  BE0A               	btfsc	___awdiv@dividend^0,7,c
  4589  001266  060B               	decf	(___awdiv@dividend+1)^0,f,c
  4590  001268  ECF3  F012         	call	___awdiv	;wreg free
  4591  00126C  0E12               	movlw	18
  4592  00126E  260A               	addwf	?___awdiv^0,f,c
  4593  001270  500A               	movf	?___awdiv^0,w,c
  4594  001272  0D04               	mullw	4
  4595  001274  0E75               	movlw	low __npowers_
  4596  001276  24F3               	addwf	243,w,c
  4597  001278  6EF6               	movwf	tblptrl,c
  4598  00127A  0E3E               	movlw	high __npowers_
  4599  00127C  20F4               	addwfc	244,w,c
  4600  00127E  6EF7               	movwf	tblptrh,c
  4601  001280                     	if	0	;There are less than 3 active tblptr bytes
  4602  001280                     	endif
  4603  001280  0009               	tblrd		*+
  4604  001282  CFF5 F012          	movff	tablat,___flmul@b
  4605  001286  0009               	tblrd		*+
  4606  001288  CFF5 F013          	movff	tablat,___flmul@b+1
  4607  00128C  0009               	tblrd		*+
  4608  00128E  CFF5 F014          	movff	tablat,___flmul@b+2
  4609  001292  000A               	tblrd		*-
  4610  001294  CFF5 F015          	movff	tablat,___flmul@b+3
  4611  001298  ECDF  F00A         	call	___flmul	;wreg free
  4612  00129C  C012  F02F         	movff	?___flmul,_scale$2305
  4613  0012A0  C013  F030         	movff	?___flmul+1,_scale$2305+1
  4614  0012A4  C014  F031         	movff	?___flmul+2,_scale$2305+2
  4615  0012A8  C015  F032         	movff	?___flmul+3,_scale$2305+3
  4616                           
  4617                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4618  0012AC  C02F  F012         	movff	_scale$2305,___flmul@b
  4619  0012B0  C030  F013         	movff	_scale$2305+1,___flmul@b+1
  4620  0012B4  C031  F014         	movff	_scale$2305+2,___flmul@b+2
  4621  0012B8  C032  F015         	movff	_scale$2305+3,___flmul@b+3
  4622  0012BC  0E00               	movlw	0
  4623  0012BE  6E07               	movwf	(___awmod@divisor+1)^0,c
  4624  0012C0  0E0A               	movlw	10
  4625  0012C2  6E06               	movwf	___awmod@divisor^0,c
  4626  0012C4  5033               	movf	scale@scl^0,w,c
  4627  0012C6  6E04               	movwf	___awmod@dividend^0,c
  4628  0012C8  6A05               	clrf	(___awmod@dividend+1)^0,c
  4629  0012CA  BE04               	btfsc	___awmod@dividend^0,7,c
  4630  0012CC  0605               	decf	(___awmod@dividend+1)^0,f,c
  4631  0012CE  ECB0  F013         	call	___awmod	;wreg free
  4632  0012D2  5004               	movf	?___awmod^0,w,c
  4633  0012D4  0D04               	mullw	4
  4634  0012D6  0E75               	movlw	low __npowers_
  4635  0012D8  24F3               	addwf	243,w,c
  4636  0012DA  6EF6               	movwf	tblptrl,c
  4637  0012DC  0E3E               	movlw	high __npowers_
  4638  0012DE  20F4               	addwfc	244,w,c
  4639  0012E0  6EF7               	movwf	tblptrh,c
  4640  0012E2                     	if	0	;There are less than 3 active tblptr bytes
  4641  0012E2                     	endif
  4642  0012E2  0009               	tblrd		*+
  4643  0012E4  CFF5 F016          	movff	tablat,___flmul@a
  4644  0012E8  0009               	tblrd		*+
  4645  0012EA  CFF5 F017          	movff	tablat,___flmul@a+1
  4646  0012EE  0009               	tblrd		*+
  4647  0012F0  CFF5 F018          	movff	tablat,___flmul@a+2
  4648  0012F4  000A               	tblrd		*-
  4649  0012F6  CFF5 F019          	movff	tablat,___flmul@a+3
  4650  0012FA  ECDF  F00A         	call	___flmul	;wreg free
  4651  0012FE  C012  F02B         	movff	?___flmul,?_scale
  4652  001302  C013  F02C         	movff	?___flmul+1,?_scale+1
  4653  001306  C014  F02D         	movff	?___flmul+2,?_scale+2
  4654  00130A  C015  F02E         	movff	?___flmul+3,?_scale+3
  4655  00130E  0012               	return	
  4656  001310                     l5255:
  4657                           
  4658                           ;doprnt.c: 440: else if(scl > 10)
  4659  001310  5033               	movf	scale@scl^0,w,c
  4660  001312  0A80               	xorlw	128
  4661  001314  0F75               	addlw	-139
  4662  001316  A0D8               	btfss	status,0,c
  4663  001318  D04B               	goto	l5261
  4664                           
  4665                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  4666  00131A  0E00               	movlw	0
  4667  00131C  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  4668  00131E  0E0A               	movlw	10
  4669  001320  6E0C               	movwf	___awdiv@divisor^0,c
  4670  001322  5033               	movf	scale@scl^0,w,c
  4671  001324  6E0A               	movwf	___awdiv@dividend^0,c
  4672  001326  6A0B               	clrf	(___awdiv@dividend+1)^0,c
  4673  001328  BE0A               	btfsc	___awdiv@dividend^0,7,c
  4674  00132A  060B               	decf	(___awdiv@dividend+1)^0,f,c
  4675  00132C  ECF3  F012         	call	___awdiv	;wreg free
  4676  001330  0E09               	movlw	9
  4677  001332  260A               	addwf	?___awdiv^0,f,c
  4678  001334  500A               	movf	?___awdiv^0,w,c
  4679  001336  0D04               	mullw	4
  4680  001338  0E75               	movlw	low __npowers_
  4681  00133A  24F3               	addwf	243,w,c
  4682  00133C  6EF6               	movwf	tblptrl,c
  4683  00133E  0E3E               	movlw	high __npowers_
  4684  001340  20F4               	addwfc	244,w,c
  4685  001342  6EF7               	movwf	tblptrh,c
  4686  001344                     	if	0	;There are less than 3 active tblptr bytes
  4687  001344                     	endif
  4688  001344  0009               	tblrd		*+
  4689  001346  CFF5 F012          	movff	tablat,___flmul@b
  4690  00134A  0009               	tblrd		*+
  4691  00134C  CFF5 F013          	movff	tablat,___flmul@b+1
  4692  001350  0009               	tblrd		*+
  4693  001352  CFF5 F014          	movff	tablat,___flmul@b+2
  4694  001356  000A               	tblrd		*-
  4695  001358  CFF5 F015          	movff	tablat,___flmul@b+3
  4696  00135C  0E00               	movlw	0
  4697  00135E  6E07               	movwf	(___awmod@divisor+1)^0,c
  4698  001360  0E0A               	movlw	10
  4699  001362  6E06               	movwf	___awmod@divisor^0,c
  4700  001364  5033               	movf	scale@scl^0,w,c
  4701  001366  6E04               	movwf	___awmod@dividend^0,c
  4702  001368  6A05               	clrf	(___awmod@dividend+1)^0,c
  4703  00136A  BE04               	btfsc	___awmod@dividend^0,7,c
  4704  00136C  0605               	decf	(___awmod@dividend+1)^0,f,c
  4705  00136E  ECB0  F013         	call	___awmod	;wreg free
  4706  001372  5004               	movf	?___awmod^0,w,c
  4707  001374  0D04               	mullw	4
  4708  001376  0E75               	movlw	low __npowers_
  4709  001378  24F3               	addwf	243,w,c
  4710  00137A  6EF6               	movwf	tblptrl,c
  4711  00137C  0E3E               	movlw	high __npowers_
  4712  00137E  20F4               	addwfc	244,w,c
  4713  001380  6EF7               	movwf	tblptrh,c
  4714  001382                     	if	0	;There are less than 3 active tblptr bytes
  4715  001382                     	endif
  4716  001382  0009               	tblrd		*+
  4717  001384  CFF5 F016          	movff	tablat,___flmul@a
  4718  001388  0009               	tblrd		*+
  4719  00138A  CFF5 F017          	movff	tablat,___flmul@a+1
  4720  00138E  0009               	tblrd		*+
  4721  001390  CFF5 F018          	movff	tablat,___flmul@a+2
  4722  001394  000A               	tblrd		*-
  4723  001396  CFF5 F019          	movff	tablat,___flmul@a+3
  4724  00139A  ECDF  F00A         	call	___flmul	;wreg free
  4725  00139E  C012  F02B         	movff	?___flmul,?_scale
  4726  0013A2  C013  F02C         	movff	?___flmul+1,?_scale+1
  4727  0013A6  C014  F02D         	movff	?___flmul+2,?_scale+2
  4728  0013AA  C015  F02E         	movff	?___flmul+3,?_scale+3
  4729  0013AE  0012               	return	
  4730  0013B0                     l5261:
  4731                           
  4732                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  4733  0013B0  5033               	movf	scale@scl^0,w,c
  4734  0013B2  0D04               	mullw	4
  4735  0013B4  0E75               	movlw	low __npowers_
  4736  0013B6  24F3               	addwf	243,w,c
  4737  0013B8  6EF6               	movwf	tblptrl,c
  4738  0013BA  0E3E               	movlw	high __npowers_
  4739  0013BC  20F4               	addwfc	244,w,c
  4740  0013BE  6EF7               	movwf	tblptrh,c
  4741  0013C0                     	if	0	;There are less than 3 active tblptr bytes
  4742  0013C0                     	endif
  4743  0013C0  0009               	tblrd		*+
  4744  0013C2  CFF5 F02B          	movff	tablat,?_scale
  4745  0013C6  0009               	tblrd		*+
  4746  0013C8  CFF5 F02C          	movff	tablat,?_scale+1
  4747  0013CC  0009               	tblrd		*+
  4748  0013CE  CFF5 F02D          	movff	tablat,?_scale+2
  4749  0013D2  000A               	tblrd		*-
  4750  0013D4  CFF5 F02E          	movff	tablat,?_scale+3
  4751  0013D8  0012               	return	
  4752  0013DA                     l5265:
  4753                           
  4754                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  4755  0013DA  5033               	movf	scale@scl^0,w,c
  4756  0013DC  0A80               	xorlw	128
  4757  0013DE  0F12               	addlw	-238
  4758  0013E0  A0D8               	btfss	status,0,c
  4759  0013E2  D088               	goto	l5273
  4760                           
  4761                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  4762  0013E4  0E00               	movlw	0
  4763  0013E6  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  4764  0013E8  0E0A               	movlw	10
  4765  0013EA  6E0C               	movwf	___awdiv@divisor^0,c
  4766  0013EC  0E00               	movlw	0
  4767  0013EE  6E07               	movwf	(___awmod@divisor+1)^0,c
  4768  0013F0  0E64               	movlw	100
  4769  0013F2  6E06               	movwf	___awmod@divisor^0,c
  4770  0013F4  5033               	movf	scale@scl^0,w,c
  4771  0013F6  6E04               	movwf	___awmod@dividend^0,c
  4772  0013F8  6A05               	clrf	(___awmod@dividend+1)^0,c
  4773  0013FA  BE04               	btfsc	___awmod@dividend^0,7,c
  4774  0013FC  0605               	decf	(___awmod@dividend+1)^0,f,c
  4775  0013FE  ECB0  F013         	call	___awmod	;wreg free
  4776  001402  C004  F00A         	movff	?___awmod,___awdiv@dividend
  4777  001406  C005  F00B         	movff	?___awmod+1,___awdiv@dividend+1
  4778  00140A  ECF3  F012         	call	___awdiv	;wreg free
  4779  00140E  0E09               	movlw	9
  4780  001410  260A               	addwf	?___awdiv^0,f,c
  4781  001412  500A               	movf	?___awdiv^0,w,c
  4782  001414  0D04               	mullw	4
  4783  001416  0E41               	movlw	low __powers_
  4784  001418  24F3               	addwf	243,w,c
  4785  00141A  6EF6               	movwf	tblptrl,c
  4786  00141C  0E3E               	movlw	high __powers_
  4787  00141E  20F4               	addwfc	244,w,c
  4788  001420  6EF7               	movwf	tblptrh,c
  4789  001422                     	if	0	;There are less than 3 active tblptr bytes
  4790  001422                     	endif
  4791  001422  0009               	tblrd		*+
  4792  001424  CFF5 F016          	movff	tablat,___flmul@a
  4793  001428  0009               	tblrd		*+
  4794  00142A  CFF5 F017          	movff	tablat,___flmul@a+1
  4795  00142E  0009               	tblrd		*+
  4796  001430  CFF5 F018          	movff	tablat,___flmul@a+2
  4797  001434  000A               	tblrd		*-
  4798  001436  CFF5 F019          	movff	tablat,___flmul@a+3
  4799  00143A  0E00               	movlw	0
  4800  00143C  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  4801  00143E  0E64               	movlw	100
  4802  001440  6E0C               	movwf	___awdiv@divisor^0,c
  4803  001442  5033               	movf	scale@scl^0,w,c
  4804  001444  6E0A               	movwf	___awdiv@dividend^0,c
  4805  001446  6A0B               	clrf	(___awdiv@dividend+1)^0,c
  4806  001448  BE0A               	btfsc	___awdiv@dividend^0,7,c
  4807  00144A  060B               	decf	(___awdiv@dividend+1)^0,f,c
  4808  00144C  ECF3  F012         	call	___awdiv	;wreg free
  4809  001450  0E12               	movlw	18
  4810  001452  260A               	addwf	?___awdiv^0,f,c
  4811  001454  500A               	movf	?___awdiv^0,w,c
  4812  001456  0D04               	mullw	4
  4813  001458  0E41               	movlw	low __powers_
  4814  00145A  24F3               	addwf	243,w,c
  4815  00145C  6EF6               	movwf	tblptrl,c
  4816  00145E  0E3E               	movlw	high __powers_
  4817  001460  20F4               	addwfc	244,w,c
  4818  001462  6EF7               	movwf	tblptrh,c
  4819  001464                     	if	0	;There are less than 3 active tblptr bytes
  4820  001464                     	endif
  4821  001464  0009               	tblrd		*+
  4822  001466  CFF5 F012          	movff	tablat,___flmul@b
  4823  00146A  0009               	tblrd		*+
  4824  00146C  CFF5 F013          	movff	tablat,___flmul@b+1
  4825  001470  0009               	tblrd		*+
  4826  001472  CFF5 F014          	movff	tablat,___flmul@b+2
  4827  001476  000A               	tblrd		*-
  4828  001478  CFF5 F015          	movff	tablat,___flmul@b+3
  4829  00147C  ECDF  F00A         	call	___flmul	;wreg free
  4830  001480  C012  F02F         	movff	?___flmul,_scale$2305
  4831  001484  C013  F030         	movff	?___flmul+1,_scale$2305+1
  4832  001488  C014  F031         	movff	?___flmul+2,_scale$2305+2
  4833  00148C  C015  F032         	movff	?___flmul+3,_scale$2305+3
  4834                           
  4835                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  4836  001490  C02F  F012         	movff	_scale$2305,___flmul@b
  4837  001494  C030  F013         	movff	_scale$2305+1,___flmul@b+1
  4838  001498  C031  F014         	movff	_scale$2305+2,___flmul@b+2
  4839  00149C  C032  F015         	movff	_scale$2305+3,___flmul@b+3
  4840  0014A0  0E00               	movlw	0
  4841  0014A2  6E07               	movwf	(___awmod@divisor+1)^0,c
  4842  0014A4  0E0A               	movlw	10
  4843  0014A6  6E06               	movwf	___awmod@divisor^0,c
  4844  0014A8  5033               	movf	scale@scl^0,w,c
  4845  0014AA  6E04               	movwf	___awmod@dividend^0,c
  4846  0014AC  6A05               	clrf	(___awmod@dividend+1)^0,c
  4847  0014AE  BE04               	btfsc	___awmod@dividend^0,7,c
  4848  0014B0  0605               	decf	(___awmod@dividend+1)^0,f,c
  4849  0014B2  ECB0  F013         	call	___awmod	;wreg free
  4850  0014B6  5004               	movf	?___awmod^0,w,c
  4851  0014B8  0D04               	mullw	4
  4852  0014BA  0E41               	movlw	low __powers_
  4853  0014BC  24F3               	addwf	243,w,c
  4854  0014BE  6EF6               	movwf	tblptrl,c
  4855  0014C0  0E3E               	movlw	high __powers_
  4856  0014C2  20F4               	addwfc	244,w,c
  4857  0014C4  6EF7               	movwf	tblptrh,c
  4858  0014C6                     	if	0	;There are less than 3 active tblptr bytes
  4859  0014C6                     	endif
  4860  0014C6  0009               	tblrd		*+
  4861  0014C8  CFF5 F016          	movff	tablat,___flmul@a
  4862  0014CC  0009               	tblrd		*+
  4863  0014CE  CFF5 F017          	movff	tablat,___flmul@a+1
  4864  0014D2  0009               	tblrd		*+
  4865  0014D4  CFF5 F018          	movff	tablat,___flmul@a+2
  4866  0014D8  000A               	tblrd		*-
  4867  0014DA  CFF5 F019          	movff	tablat,___flmul@a+3
  4868  0014DE  ECDF  F00A         	call	___flmul	;wreg free
  4869  0014E2  C012  F02B         	movff	?___flmul,?_scale
  4870  0014E6  C013  F02C         	movff	?___flmul+1,?_scale+1
  4871  0014EA  C014  F02D         	movff	?___flmul+2,?_scale+2
  4872  0014EE  C015  F02E         	movff	?___flmul+3,?_scale+3
  4873  0014F2  0012               	return	
  4874  0014F4                     l5273:
  4875                           
  4876                           ;doprnt.c: 446: else if(scl > 10)
  4877  0014F4  5033               	movf	scale@scl^0,w,c
  4878  0014F6  0A80               	xorlw	128
  4879  0014F8  0F75               	addlw	-139
  4880  0014FA  A0D8               	btfss	status,0,c
  4881  0014FC  D04B               	goto	l5279
  4882                           
  4883                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  4884  0014FE  0E00               	movlw	0
  4885  001500  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  4886  001502  0E0A               	movlw	10
  4887  001504  6E0C               	movwf	___awdiv@divisor^0,c
  4888  001506  5033               	movf	scale@scl^0,w,c
  4889  001508  6E0A               	movwf	___awdiv@dividend^0,c
  4890  00150A  6A0B               	clrf	(___awdiv@dividend+1)^0,c
  4891  00150C  BE0A               	btfsc	___awdiv@dividend^0,7,c
  4892  00150E  060B               	decf	(___awdiv@dividend+1)^0,f,c
  4893  001510  ECF3  F012         	call	___awdiv	;wreg free
  4894  001514  0E09               	movlw	9
  4895  001516  260A               	addwf	?___awdiv^0,f,c
  4896  001518  500A               	movf	?___awdiv^0,w,c
  4897  00151A  0D04               	mullw	4
  4898  00151C  0E41               	movlw	low __powers_
  4899  00151E  24F3               	addwf	243,w,c
  4900  001520  6EF6               	movwf	tblptrl,c
  4901  001522  0E3E               	movlw	high __powers_
  4902  001524  20F4               	addwfc	244,w,c
  4903  001526  6EF7               	movwf	tblptrh,c
  4904  001528                     	if	0	;There are less than 3 active tblptr bytes
  4905  001528                     	endif
  4906  001528  0009               	tblrd		*+
  4907  00152A  CFF5 F012          	movff	tablat,___flmul@b
  4908  00152E  0009               	tblrd		*+
  4909  001530  CFF5 F013          	movff	tablat,___flmul@b+1
  4910  001534  0009               	tblrd		*+
  4911  001536  CFF5 F014          	movff	tablat,___flmul@b+2
  4912  00153A  000A               	tblrd		*-
  4913  00153C  CFF5 F015          	movff	tablat,___flmul@b+3
  4914  001540  0E00               	movlw	0
  4915  001542  6E07               	movwf	(___awmod@divisor+1)^0,c
  4916  001544  0E0A               	movlw	10
  4917  001546  6E06               	movwf	___awmod@divisor^0,c
  4918  001548  5033               	movf	scale@scl^0,w,c
  4919  00154A  6E04               	movwf	___awmod@dividend^0,c
  4920  00154C  6A05               	clrf	(___awmod@dividend+1)^0,c
  4921  00154E  BE04               	btfsc	___awmod@dividend^0,7,c
  4922  001550  0605               	decf	(___awmod@dividend+1)^0,f,c
  4923  001552  ECB0  F013         	call	___awmod	;wreg free
  4924  001556  5004               	movf	?___awmod^0,w,c
  4925  001558  0D04               	mullw	4
  4926  00155A  0E41               	movlw	low __powers_
  4927  00155C  24F3               	addwf	243,w,c
  4928  00155E  6EF6               	movwf	tblptrl,c
  4929  001560  0E3E               	movlw	high __powers_
  4930  001562  20F4               	addwfc	244,w,c
  4931  001564  6EF7               	movwf	tblptrh,c
  4932  001566                     	if	0	;There are less than 3 active tblptr bytes
  4933  001566                     	endif
  4934  001566  0009               	tblrd		*+
  4935  001568  CFF5 F016          	movff	tablat,___flmul@a
  4936  00156C  0009               	tblrd		*+
  4937  00156E  CFF5 F017          	movff	tablat,___flmul@a+1
  4938  001572  0009               	tblrd		*+
  4939  001574  CFF5 F018          	movff	tablat,___flmul@a+2
  4940  001578  000A               	tblrd		*-
  4941  00157A  CFF5 F019          	movff	tablat,___flmul@a+3
  4942  00157E  ECDF  F00A         	call	___flmul	;wreg free
  4943  001582  C012  F02B         	movff	?___flmul,?_scale
  4944  001586  C013  F02C         	movff	?___flmul+1,?_scale+1
  4945  00158A  C014  F02D         	movff	?___flmul+2,?_scale+2
  4946  00158E  C015  F02E         	movff	?___flmul+3,?_scale+3
  4947  001592  0012               	return	
  4948  001594                     l5279:
  4949                           
  4950                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  4951  001594  5033               	movf	scale@scl^0,w,c
  4952  001596  0D04               	mullw	4
  4953  001598  0E41               	movlw	low __powers_
  4954  00159A  24F3               	addwf	243,w,c
  4955  00159C  6EF6               	movwf	tblptrl,c
  4956  00159E  0E3E               	movlw	high __powers_
  4957  0015A0  20F4               	addwfc	244,w,c
  4958  0015A2  6EF7               	movwf	tblptrh,c
  4959  0015A4                     	if	0	;There are less than 3 active tblptr bytes
  4960  0015A4                     	endif
  4961  0015A4  0009               	tblrd		*+
  4962  0015A6  CFF5 F02B          	movff	tablat,?_scale
  4963  0015AA  0009               	tblrd		*+
  4964  0015AC  CFF5 F02C          	movff	tablat,?_scale+1
  4965  0015B0  0009               	tblrd		*+
  4966  0015B2  CFF5 F02D          	movff	tablat,?_scale+2
  4967  0015B6  000A               	tblrd		*-
  4968  0015B8  CFF5 F02E          	movff	tablat,?_scale+3
  4969  0015BC  0012               	return		;funcret
  4970  0015BE                     __end_of_scale:
  4971                           	callstack 0
  4972                           
  4973 ;; *************** function ___awmod *****************
  4974 ;; Defined at:
  4975 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
  4976 ;; Parameters:    Size  Location     Type
  4977 ;;  dividend        2    3[COMRAM] int 
  4978 ;;  divisor         2    5[COMRAM] int 
  4979 ;; Auto vars:     Size  Location     Type
  4980 ;;  sign            1    8[COMRAM] unsigned char 
  4981 ;;  counter         1    7[COMRAM] unsigned char 
  4982 ;; Return value:  Size  Location     Type
  4983 ;;                  2    3[COMRAM] int 
  4984 ;; Registers used:
  4985 ;;		wreg, status,2, status,0
  4986 ;; Tracked objects:
  4987 ;;		On entry : 0/0
  4988 ;;		On exit  : 0/0
  4989 ;;		Unchanged: 0/0
  4990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4991 ;;      Params:         4       0       0       0
  4992 ;;      Locals:         2       0       0       0
  4993 ;;      Temps:          0       0       0       0
  4994 ;;      Totals:         6       0       0       0
  4995 ;;Total ram usage:        6 bytes
  4996 ;; Hardware stack levels used: 1
  4997 ;; Hardware stack levels required when called: 1
  4998 ;; This function calls:
  4999 ;;		Nothing
  5000 ;; This function is called by:
  5001 ;;		_scale
  5002 ;; This function uses a non-reentrant model
  5003 ;;
  5004                           
  5005                           	psect	text6
  5006  002760                     __ptext6:
  5007                           	callstack 0
  5008  002760                     ___awmod:
  5009                           	callstack 26
  5010                           
  5011                           ;incstack = 0
  5012  002760  0E00               	movlw	0
  5013  002762  6E09               	movwf	___awmod@sign^0,c
  5014  002764  AE05               	btfss	(___awmod@dividend+1)^0,7,c
  5015  002766  D006               	goto	l4967
  5016  002768  6C04               	negf	___awmod@dividend^0,c
  5017  00276A  1E05               	comf	(___awmod@dividend+1)^0,f,c
  5018  00276C  B0D8               	btfsc	status,0,c
  5019  00276E  2A05               	incf	(___awmod@dividend+1)^0,f,c
  5020  002770  0E01               	movlw	1
  5021  002772  6E09               	movwf	___awmod@sign^0,c
  5022  002774                     l4967:
  5023  002774  AE07               	btfss	(___awmod@divisor+1)^0,7,c
  5024  002776  D004               	goto	l4971
  5025  002778  6C06               	negf	___awmod@divisor^0,c
  5026  00277A  1E07               	comf	(___awmod@divisor+1)^0,f,c
  5027  00277C  B0D8               	btfsc	status,0,c
  5028  00277E  2A07               	incf	(___awmod@divisor+1)^0,f,c
  5029  002780                     l4971:
  5030  002780  5006               	movf	___awmod@divisor^0,w,c
  5031  002782  1007               	iorwf	(___awmod@divisor+1)^0,w,c
  5032  002784  B4D8               	btfsc	status,2,c
  5033  002786  D018               	goto	l4987
  5034  002788  0E01               	movlw	1
  5035  00278A  6E08               	movwf	___awmod@counter^0,c
  5036  00278C  D004               	goto	l4977
  5037  00278E                     l4975:
  5038  00278E  90D8               	bcf	status,0,c
  5039  002790  3606               	rlcf	___awmod@divisor^0,f,c
  5040  002792  3607               	rlcf	(___awmod@divisor+1)^0,f,c
  5041  002794  2A08               	incf	___awmod@counter^0,f,c
  5042  002796                     l4977:
  5043  002796  AE07               	btfss	(___awmod@divisor+1)^0,7,c
  5044  002798  D7FA               	goto	l4975
  5045  00279A                     u5750:
  5046  00279A  5006               	movf	___awmod@divisor^0,w,c
  5047  00279C  5C04               	subwf	___awmod@dividend^0,w,c
  5048  00279E  5007               	movf	(___awmod@divisor+1)^0,w,c
  5049  0027A0  5805               	subwfb	(___awmod@dividend+1)^0,w,c
  5050  0027A2  A0D8               	btfss	status,0,c
  5051  0027A4  D004               	goto	l4983
  5052  0027A6  5006               	movf	___awmod@divisor^0,w,c
  5053  0027A8  5E04               	subwf	___awmod@dividend^0,f,c
  5054  0027AA  5007               	movf	(___awmod@divisor+1)^0,w,c
  5055  0027AC  5A05               	subwfb	(___awmod@dividend+1)^0,f,c
  5056  0027AE                     l4983:
  5057  0027AE  90D8               	bcf	status,0,c
  5058  0027B0  3207               	rrcf	(___awmod@divisor+1)^0,f,c
  5059  0027B2  3206               	rrcf	___awmod@divisor^0,f,c
  5060  0027B4  2E08               	decfsz	___awmod@counter^0,f,c
  5061  0027B6  D7F1               	goto	u5750
  5062  0027B8                     l4987:
  5063  0027B8  5009               	movf	___awmod@sign^0,w,c
  5064  0027BA  B4D8               	btfsc	status,2,c
  5065  0027BC  D004               	goto	l4991
  5066  0027BE  6C04               	negf	___awmod@dividend^0,c
  5067  0027C0  1E05               	comf	(___awmod@dividend+1)^0,f,c
  5068  0027C2  B0D8               	btfsc	status,0,c
  5069  0027C4  2A05               	incf	(___awmod@dividend+1)^0,f,c
  5070  0027C6                     l4991:
  5071  0027C6  C004  F004         	movff	___awmod@dividend,?___awmod
  5072  0027CA  C005  F005         	movff	___awmod@dividend+1,?___awmod+1
  5073  0027CE  0012               	return		;funcret
  5074  0027D0                     __end_of___awmod:
  5075                           	callstack 0
  5076                           
  5077 ;; *************** function ___awdiv *****************
  5078 ;; Defined at:
  5079 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  5080 ;; Parameters:    Size  Location     Type
  5081 ;;  dividend        2    9[COMRAM] int 
  5082 ;;  divisor         2   11[COMRAM] int 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;  quotient        2   15[COMRAM] int 
  5085 ;;  sign            1   14[COMRAM] unsigned char 
  5086 ;;  counter         1   13[COMRAM] unsigned char 
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  2    9[COMRAM] int 
  5089 ;; Registers used:
  5090 ;;		wreg, status,2, status,0
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5096 ;;      Params:         4       0       0       0
  5097 ;;      Locals:         4       0       0       0
  5098 ;;      Temps:          0       0       0       0
  5099 ;;      Totals:         8       0       0       0
  5100 ;;Total ram usage:        8 bytes
  5101 ;; Hardware stack levels used: 1
  5102 ;; Hardware stack levels required when called: 1
  5103 ;; This function calls:
  5104 ;;		Nothing
  5105 ;; This function is called by:
  5106 ;;		_scale
  5107 ;;		__doprnt
  5108 ;; This function uses a non-reentrant model
  5109 ;;
  5110                           
  5111                           	psect	text7
  5112  0025E6                     __ptext7:
  5113                           	callstack 0
  5114  0025E6                     ___awdiv:
  5115                           	callstack 26
  5116                           
  5117                           ;incstack = 0
  5118  0025E6  0E00               	movlw	0
  5119  0025E8  6E0F               	movwf	___awdiv@sign^0,c
  5120  0025EA  AE0D               	btfss	(___awdiv@divisor+1)^0,7,c
  5121  0025EC  D006               	goto	l4923
  5122  0025EE  6C0C               	negf	___awdiv@divisor^0,c
  5123  0025F0  1E0D               	comf	(___awdiv@divisor+1)^0,f,c
  5124  0025F2  B0D8               	btfsc	status,0,c
  5125  0025F4  2A0D               	incf	(___awdiv@divisor+1)^0,f,c
  5126  0025F6  0E01               	movlw	1
  5127  0025F8  6E0F               	movwf	___awdiv@sign^0,c
  5128  0025FA                     l4923:
  5129  0025FA  AE0B               	btfss	(___awdiv@dividend+1)^0,7,c
  5130  0025FC  D006               	goto	l4929
  5131  0025FE  6C0A               	negf	___awdiv@dividend^0,c
  5132  002600  1E0B               	comf	(___awdiv@dividend+1)^0,f,c
  5133  002602  B0D8               	btfsc	status,0,c
  5134  002604  2A0B               	incf	(___awdiv@dividend+1)^0,f,c
  5135  002606  0E01               	movlw	1
  5136  002608  1A0F               	xorwf	___awdiv@sign^0,f,c
  5137  00260A                     l4929:
  5138  00260A  0E00               	movlw	0
  5139  00260C  6E11               	movwf	(___awdiv@quotient+1)^0,c
  5140  00260E  0E00               	movlw	0
  5141  002610  6E10               	movwf	___awdiv@quotient^0,c
  5142  002612  500C               	movf	___awdiv@divisor^0,w,c
  5143  002614  100D               	iorwf	(___awdiv@divisor+1)^0,w,c
  5144  002616  B4D8               	btfsc	status,2,c
  5145  002618  D01C               	goto	l4951
  5146  00261A  0E01               	movlw	1
  5147  00261C  6E0E               	movwf	___awdiv@counter^0,c
  5148  00261E  D004               	goto	l4937
  5149  002620                     l4935:
  5150  002620  90D8               	bcf	status,0,c
  5151  002622  360C               	rlcf	___awdiv@divisor^0,f,c
  5152  002624  360D               	rlcf	(___awdiv@divisor+1)^0,f,c
  5153  002626  2A0E               	incf	___awdiv@counter^0,f,c
  5154  002628                     l4937:
  5155  002628  AE0D               	btfss	(___awdiv@divisor+1)^0,7,c
  5156  00262A  D7FA               	goto	l4935
  5157  00262C                     u5690:
  5158  00262C  90D8               	bcf	status,0,c
  5159  00262E  3610               	rlcf	___awdiv@quotient^0,f,c
  5160  002630  3611               	rlcf	(___awdiv@quotient+1)^0,f,c
  5161  002632  500C               	movf	___awdiv@divisor^0,w,c
  5162  002634  5C0A               	subwf	___awdiv@dividend^0,w,c
  5163  002636  500D               	movf	(___awdiv@divisor+1)^0,w,c
  5164  002638  580B               	subwfb	(___awdiv@dividend+1)^0,w,c
  5165  00263A  A0D8               	btfss	status,0,c
  5166  00263C  D005               	goto	l4947
  5167  00263E  500C               	movf	___awdiv@divisor^0,w,c
  5168  002640  5E0A               	subwf	___awdiv@dividend^0,f,c
  5169  002642  500D               	movf	(___awdiv@divisor+1)^0,w,c
  5170  002644  5A0B               	subwfb	(___awdiv@dividend+1)^0,f,c
  5171  002646  8010               	bsf	___awdiv@quotient^0,0,c
  5172  002648                     l4947:
  5173  002648  90D8               	bcf	status,0,c
  5174  00264A  320D               	rrcf	(___awdiv@divisor+1)^0,f,c
  5175  00264C  320C               	rrcf	___awdiv@divisor^0,f,c
  5176  00264E  2E0E               	decfsz	___awdiv@counter^0,f,c
  5177  002650  D7ED               	goto	u5690
  5178  002652                     l4951:
  5179  002652  500F               	movf	___awdiv@sign^0,w,c
  5180  002654  B4D8               	btfsc	status,2,c
  5181  002656  D004               	goto	l4955
  5182  002658  6C10               	negf	___awdiv@quotient^0,c
  5183  00265A  1E11               	comf	(___awdiv@quotient+1)^0,f,c
  5184  00265C  B0D8               	btfsc	status,0,c
  5185  00265E  2A11               	incf	(___awdiv@quotient+1)^0,f,c
  5186  002660                     l4955:
  5187  002660  C010  F00A         	movff	___awdiv@quotient,?___awdiv
  5188  002664  C011  F00B         	movff	___awdiv@quotient+1,?___awdiv+1
  5189  002668  0012               	return		;funcret
  5190  00266A                     __end_of___awdiv:
  5191                           	callstack 0
  5192                           
  5193 ;; *************** function _putch *****************
  5194 ;; Defined at:
  5195 ;;		line 32 in file "../MiscFunctions.c"
  5196 ;; Parameters:    Size  Location     Type
  5197 ;;  ch              1    wreg     unsigned char 
  5198 ;; Auto vars:     Size  Location     Type
  5199 ;;  ch              1    3[COMRAM] unsigned char 
  5200 ;; Return value:  Size  Location     Type
  5201 ;;                  1    wreg      void 
  5202 ;; Registers used:
  5203 ;;		wreg
  5204 ;; Tracked objects:
  5205 ;;		On entry : 0/0
  5206 ;;		On exit  : 0/0
  5207 ;;		Unchanged: 0/0
  5208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5209 ;;      Params:         0       0       0       0
  5210 ;;      Locals:         1       0       0       0
  5211 ;;      Temps:          0       0       0       0
  5212 ;;      Totals:         1       0       0       0
  5213 ;;Total ram usage:        1 bytes
  5214 ;; Hardware stack levels used: 1
  5215 ;; Hardware stack levels required when called: 1
  5216 ;; This function calls:
  5217 ;;		Nothing
  5218 ;; This function is called by:
  5219 ;;		_printf
  5220 ;;		__doprnt
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           
  5224                           	psect	text8
  5225  002B06                     __ptext8:
  5226                           	callstack 0
  5227  002B06                     _putch:
  5228                           	callstack 27
  5229                           
  5230                           ;incstack = 0
  5231                           ;putch@ch stored from wreg
  5232  002B06  6E04               	movwf	putch@ch^0,c
  5233  002B08                     
  5234                           ;MiscFunctions.c: 34: while (PIR1bits.TX1IF == 0);
  5235  002B08  A89E               	btfss	158,4,c	;volatile
  5236  002B0A  D7FE               	goto	l5037
  5237                           
  5238                           ;MiscFunctions.c: 35: TXREG1 = ch;
  5239  002B0C  C004  FFAD         	movff	putch@ch,4013	;volatile
  5240  002B10  0012               	return		;funcret
  5241  002B12                     __end_of_putch:
  5242                           	callstack 0
  5243                           
  5244 ;; *************** function _isdigit *****************
  5245 ;; Defined at:
  5246 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\isdigit.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;  c               1    wreg     unsigned char 
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;  c               1    5[COMRAM] unsigned char 
  5251 ;; Return value:  Size  Location     Type
  5252 ;;		None               void
  5253 ;; Registers used:
  5254 ;;		wreg, status,2, status,0
  5255 ;; Tracked objects:
  5256 ;;		On entry : 3F/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5260 ;;      Params:         0       0       0       0
  5261 ;;      Locals:         2       0       0       0
  5262 ;;      Temps:          1       0       0       0
  5263 ;;      Totals:         3       0       0       0
  5264 ;;Total ram usage:        3 bytes
  5265 ;; Hardware stack levels used: 1
  5266 ;; Hardware stack levels required when called: 1
  5267 ;; This function calls:
  5268 ;;		Nothing
  5269 ;; This function is called by:
  5270 ;;		__doprnt
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           	psect	text9
  5275  002AA0                     __ptext9:
  5276                           	callstack 0
  5277  002AA0                     _isdigit:
  5278                           	callstack 27
  5279                           
  5280                           ;incstack = 0
  5281                           ;isdigit@c stored from wreg
  5282  002AA0  6E06               	movwf	isdigit@c^0,c
  5283  002AA2  0E00               	movlw	0
  5284  002AA4  6E05               	movwf	_isdigit$2043^0,c
  5285  002AA6  0E3A               	movlw	58
  5286  002AA8  6006               	cpfslt	isdigit@c^0,c
  5287  002AAA  D005               	goto	l5291
  5288  002AAC  0E2F               	movlw	47
  5289  002AAE  6406               	cpfsgt	isdigit@c^0,c
  5290  002AB0  D002               	goto	l5291
  5291  002AB2  0E01               	movlw	1
  5292  002AB4  6E05               	movwf	_isdigit$2043^0,c
  5293  002AB6                     l5291:
  5294  002AB6  C005  F004         	movff	_isdigit$2043,??_isdigit
  5295  002ABA  3004               	rrcf	??_isdigit^0,w,c
  5296  002ABC  0012               	return		;funcret
  5297  002ABE                     __end_of_isdigit:
  5298                           	callstack 0
  5299                           
  5300 ;; *************** function _fround *****************
  5301 ;; Defined at:
  5302 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;  prec            1    wreg     unsigned char 
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;  prec            1   56[COMRAM] unsigned char 
  5307 ;; Return value:  Size  Location     Type
  5308 ;;                  4   42[COMRAM] unsigned char 
  5309 ;; Registers used:
  5310 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5311 ;; Tracked objects:
  5312 ;;		On entry : 3F/0
  5313 ;;		On exit  : 0/0
  5314 ;;		Unchanged: 0/0
  5315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5316 ;;      Params:         4       0       0       0
  5317 ;;      Locals:         9       0       0       0
  5318 ;;      Temps:          2       0       0       0
  5319 ;;      Totals:        15       0       0       0
  5320 ;;Total ram usage:       15 bytes
  5321 ;; Hardware stack levels used: 1
  5322 ;; Hardware stack levels required when called: 2
  5323 ;; This function calls:
  5324 ;;		___flmul
  5325 ;;		___lbdiv
  5326 ;;		___lbmod
  5327 ;; This function is called by:
  5328 ;;		__doprnt
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332                           	psect	text10
  5333  001BF6                     __ptext10:
  5334                           	callstack 0
  5335  001BF6                     _fround:
  5336                           	callstack 26
  5337                           
  5338                           ;incstack = 0
  5339                           ;fround@prec stored from wreg
  5340  001BF6  6E39               	movwf	fround@prec^0,c
  5341                           
  5342                           ;doprnt.c: 421: if(prec>=110)
  5343  001BF8  0E6D               	movlw	109
  5344  001BFA  6439               	cpfsgt	fround@prec^0,c
  5345  001BFC  D0A0               	goto	l5235
  5346                           
  5347                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  5348  001BFE  0E00               	movlw	0
  5349  001C00  6E16               	movwf	___flmul@a^0,c
  5350  001C02  0E00               	movlw	0
  5351  001C04  6E17               	movwf	(___flmul@a+1)^0,c
  5352  001C06  0E00               	movlw	0
  5353  001C08  6E18               	movwf	(___flmul@a+2)^0,c
  5354  001C0A  0E3F               	movlw	63
  5355  001C0C  6E19               	movwf	(___flmul@a+3)^0,c
  5356  001C0E  0E64               	movlw	100
  5357  001C10  6E08               	movwf	___lbdiv@divisor^0,c
  5358  001C12  5039               	movf	fround@prec^0,w,c
  5359  001C14  EC98  F014         	call	___lbdiv
  5360  001C18  6E2F               	movwf	??_fround^0,c
  5361  001C1A  6A30               	clrf	(??_fround+1)^0,c
  5362  001C1C  90D8               	bcf	status,0,c
  5363  001C1E  362F               	rlcf	??_fround^0,f,c
  5364  001C20  3630               	rlcf	(??_fround+1)^0,f,c
  5365  001C22  90D8               	bcf	status,0,c
  5366  001C24  362F               	rlcf	??_fround^0,f,c
  5367  001C26  3630               	rlcf	(??_fround+1)^0,f,c
  5368  001C28  0E48               	movlw	72
  5369  001C2A  262F               	addwf	??_fround^0,f,c
  5370  001C2C  0E00               	movlw	0
  5371  001C2E  2230               	addwfc	(??_fround+1)^0,f,c
  5372  001C30  0E75               	movlw	low __npowers_
  5373  001C32  242F               	addwf	??_fround^0,w,c
  5374  001C34  6EF6               	movwf	tblptrl,c
  5375  001C36  0E3E               	movlw	high __npowers_
  5376  001C38  2030               	addwfc	(??_fround+1)^0,w,c
  5377  001C3A  6EF7               	movwf	tblptrh,c
  5378  001C3C                     	if	0	;There are less than 3 active tblptr bytes
  5379  001C3C                     	endif
  5380  001C3C  0009               	tblrd		*+
  5381  001C3E  CFF5 F012          	movff	tablat,___flmul@b
  5382  001C42  0009               	tblrd		*+
  5383  001C44  CFF5 F013          	movff	tablat,___flmul@b+1
  5384  001C48  0009               	tblrd		*+
  5385  001C4A  CFF5 F014          	movff	tablat,___flmul@b+2
  5386  001C4E  000A               	tblrd		*-
  5387  001C50  CFF5 F015          	movff	tablat,___flmul@b+3
  5388  001C54  ECDF  F00A         	call	___flmul	;wreg free
  5389  001C58  C012  F035         	movff	?___flmul,_fround$2303
  5390  001C5C  C013  F036         	movff	?___flmul+1,_fround$2303+1
  5391  001C60  C014  F037         	movff	?___flmul+2,_fround$2303+2
  5392  001C64  C015  F038         	movff	?___flmul+3,_fround$2303+3
  5393                           
  5394                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  5395  001C68  0E0A               	movlw	10
  5396  001C6A  6E08               	movwf	___lbdiv@divisor^0,c
  5397  001C6C  0E64               	movlw	100
  5398  001C6E  6E04               	movwf	___lbmod@divisor^0,c
  5399  001C70  5039               	movf	fround@prec^0,w,c
  5400  001C72  EC15  F015         	call	___lbmod
  5401  001C76  EC98  F014         	call	___lbdiv
  5402  001C7A  6E2F               	movwf	??_fround^0,c
  5403  001C7C  6A30               	clrf	(??_fround+1)^0,c
  5404  001C7E  90D8               	bcf	status,0,c
  5405  001C80  362F               	rlcf	??_fround^0,f,c
  5406  001C82  3630               	rlcf	(??_fround+1)^0,f,c
  5407  001C84  90D8               	bcf	status,0,c
  5408  001C86  362F               	rlcf	??_fround^0,f,c
  5409  001C88  3630               	rlcf	(??_fround+1)^0,f,c
  5410  001C8A  0E24               	movlw	36
  5411  001C8C  262F               	addwf	??_fround^0,f,c
  5412  001C8E  0E00               	movlw	0
  5413  001C90  2230               	addwfc	(??_fround+1)^0,f,c
  5414  001C92  0E75               	movlw	low __npowers_
  5415  001C94  242F               	addwf	??_fround^0,w,c
  5416  001C96  6EF6               	movwf	tblptrl,c
  5417  001C98  0E3E               	movlw	high __npowers_
  5418  001C9A  2030               	addwfc	(??_fround+1)^0,w,c
  5419  001C9C  6EF7               	movwf	tblptrh,c
  5420  001C9E                     	if	0	;There are less than 3 active tblptr bytes
  5421  001C9E                     	endif
  5422  001C9E  0009               	tblrd		*+
  5423  001CA0  CFF5 F016          	movff	tablat,___flmul@a
  5424  001CA4  0009               	tblrd		*+
  5425  001CA6  CFF5 F017          	movff	tablat,___flmul@a+1
  5426  001CAA  0009               	tblrd		*+
  5427  001CAC  CFF5 F018          	movff	tablat,___flmul@a+2
  5428  001CB0  000A               	tblrd		*-
  5429  001CB2  CFF5 F019          	movff	tablat,___flmul@a+3
  5430  001CB6  C035  F012         	movff	_fround$2303,___flmul@b
  5431  001CBA  C036  F013         	movff	_fround$2303+1,___flmul@b+1
  5432  001CBE  C037  F014         	movff	_fround$2303+2,___flmul@b+2
  5433  001CC2  C038  F015         	movff	_fround$2303+3,___flmul@b+3
  5434  001CC6  ECDF  F00A         	call	___flmul	;wreg free
  5435  001CCA  C012  F031         	movff	?___flmul,_fround$2304
  5436  001CCE  C013  F032         	movff	?___flmul+1,_fround$2304+1
  5437  001CD2  C014  F033         	movff	?___flmul+2,_fround$2304+2
  5438  001CD6  C015  F034         	movff	?___flmul+3,_fround$2304+3
  5439                           
  5440                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  5441  001CDA  C031  F012         	movff	_fround$2304,___flmul@b
  5442  001CDE  C032  F013         	movff	_fround$2304+1,___flmul@b+1
  5443  001CE2  C033  F014         	movff	_fround$2304+2,___flmul@b+2
  5444  001CE6  C034  F015         	movff	_fround$2304+3,___flmul@b+3
  5445  001CEA  0E0A               	movlw	10
  5446  001CEC  6E04               	movwf	___lbmod@divisor^0,c
  5447  001CEE  5039               	movf	fround@prec^0,w,c
  5448  001CF0  EC15  F015         	call	___lbmod
  5449  001CF4  6E2F               	movwf	??_fround^0,c
  5450  001CF6  6A30               	clrf	(??_fround+1)^0,c
  5451  001CF8  90D8               	bcf	status,0,c
  5452  001CFA  362F               	rlcf	??_fround^0,f,c
  5453  001CFC  3630               	rlcf	(??_fround+1)^0,f,c
  5454  001CFE  90D8               	bcf	status,0,c
  5455  001D00  362F               	rlcf	??_fround^0,f,c
  5456  001D02  3630               	rlcf	(??_fround+1)^0,f,c
  5457  001D04  0E75               	movlw	low __npowers_
  5458  001D06  242F               	addwf	??_fround^0,w,c
  5459  001D08  6EF6               	movwf	tblptrl,c
  5460  001D0A  0E3E               	movlw	high __npowers_
  5461  001D0C  2030               	addwfc	(??_fround+1)^0,w,c
  5462  001D0E  6EF7               	movwf	tblptrh,c
  5463  001D10                     	if	0	;There are less than 3 active tblptr bytes
  5464  001D10                     	endif
  5465  001D10  0009               	tblrd		*+
  5466  001D12  CFF5 F016          	movff	tablat,___flmul@a
  5467  001D16  0009               	tblrd		*+
  5468  001D18  CFF5 F017          	movff	tablat,___flmul@a+1
  5469  001D1C  0009               	tblrd		*+
  5470  001D1E  CFF5 F018          	movff	tablat,___flmul@a+2
  5471  001D22  000A               	tblrd		*-
  5472  001D24  CFF5 F019          	movff	tablat,___flmul@a+3
  5473  001D28  ECDF  F00A         	call	___flmul	;wreg free
  5474  001D2C  C012  F02B         	movff	?___flmul,?_fround
  5475  001D30  C013  F02C         	movff	?___flmul+1,?_fround+1
  5476  001D34  C014  F02D         	movff	?___flmul+2,?_fround+2
  5477  001D38  C015  F02E         	movff	?___flmul+3,?_fround+3
  5478  001D3C  0012               	return	
  5479  001D3E                     l5235:
  5480                           
  5481                           ;doprnt.c: 423: else if(prec > 10)
  5482  001D3E  0E0A               	movlw	10
  5483  001D40  6439               	cpfsgt	fround@prec^0,c
  5484  001D42  D067               	goto	l5241
  5485                           
  5486                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5487  001D44  0E00               	movlw	0
  5488  001D46  6E16               	movwf	___flmul@a^0,c
  5489  001D48  0E00               	movlw	0
  5490  001D4A  6E17               	movwf	(___flmul@a+1)^0,c
  5491  001D4C  0E00               	movlw	0
  5492  001D4E  6E18               	movwf	(___flmul@a+2)^0,c
  5493  001D50  0E3F               	movlw	63
  5494  001D52  6E19               	movwf	(___flmul@a+3)^0,c
  5495  001D54  0E0A               	movlw	10
  5496  001D56  6E08               	movwf	___lbdiv@divisor^0,c
  5497  001D58  5039               	movf	fround@prec^0,w,c
  5498  001D5A  EC98  F014         	call	___lbdiv
  5499  001D5E  6E2F               	movwf	??_fround^0,c
  5500  001D60  6A30               	clrf	(??_fround+1)^0,c
  5501  001D62  90D8               	bcf	status,0,c
  5502  001D64  362F               	rlcf	??_fround^0,f,c
  5503  001D66  3630               	rlcf	(??_fround+1)^0,f,c
  5504  001D68  90D8               	bcf	status,0,c
  5505  001D6A  362F               	rlcf	??_fround^0,f,c
  5506  001D6C  3630               	rlcf	(??_fround+1)^0,f,c
  5507  001D6E  0E24               	movlw	36
  5508  001D70  262F               	addwf	??_fround^0,f,c
  5509  001D72  0E00               	movlw	0
  5510  001D74  2230               	addwfc	(??_fround+1)^0,f,c
  5511  001D76  0E75               	movlw	low __npowers_
  5512  001D78  242F               	addwf	??_fround^0,w,c
  5513  001D7A  6EF6               	movwf	tblptrl,c
  5514  001D7C  0E3E               	movlw	high __npowers_
  5515  001D7E  2030               	addwfc	(??_fround+1)^0,w,c
  5516  001D80  6EF7               	movwf	tblptrh,c
  5517  001D82                     	if	0	;There are less than 3 active tblptr bytes
  5518  001D82                     	endif
  5519  001D82  0009               	tblrd		*+
  5520  001D84  CFF5 F012          	movff	tablat,___flmul@b
  5521  001D88  0009               	tblrd		*+
  5522  001D8A  CFF5 F013          	movff	tablat,___flmul@b+1
  5523  001D8E  0009               	tblrd		*+
  5524  001D90  CFF5 F014          	movff	tablat,___flmul@b+2
  5525  001D94  000A               	tblrd		*-
  5526  001D96  CFF5 F015          	movff	tablat,___flmul@b+3
  5527  001D9A  ECDF  F00A         	call	___flmul	;wreg free
  5528  001D9E  C012  F035         	movff	?___flmul,_fround$2303
  5529  001DA2  C013  F036         	movff	?___flmul+1,_fround$2303+1
  5530  001DA6  C014  F037         	movff	?___flmul+2,_fround$2303+2
  5531  001DAA  C015  F038         	movff	?___flmul+3,_fround$2303+3
  5532                           
  5533                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5534  001DAE  C035  F012         	movff	_fround$2303,___flmul@b
  5535  001DB2  C036  F013         	movff	_fround$2303+1,___flmul@b+1
  5536  001DB6  C037  F014         	movff	_fround$2303+2,___flmul@b+2
  5537  001DBA  C038  F015         	movff	_fround$2303+3,___flmul@b+3
  5538  001DBE  0E0A               	movlw	10
  5539  001DC0  6E04               	movwf	___lbmod@divisor^0,c
  5540  001DC2  5039               	movf	fround@prec^0,w,c
  5541  001DC4  EC15  F015         	call	___lbmod
  5542  001DC8  6E2F               	movwf	??_fround^0,c
  5543  001DCA  6A30               	clrf	(??_fround+1)^0,c
  5544  001DCC  90D8               	bcf	status,0,c
  5545  001DCE  362F               	rlcf	??_fround^0,f,c
  5546  001DD0  3630               	rlcf	(??_fround+1)^0,f,c
  5547  001DD2  90D8               	bcf	status,0,c
  5548  001DD4  362F               	rlcf	??_fround^0,f,c
  5549  001DD6  3630               	rlcf	(??_fround+1)^0,f,c
  5550  001DD8  0E75               	movlw	low __npowers_
  5551  001DDA  242F               	addwf	??_fround^0,w,c
  5552  001DDC  6EF6               	movwf	tblptrl,c
  5553  001DDE  0E3E               	movlw	high __npowers_
  5554  001DE0  2030               	addwfc	(??_fround+1)^0,w,c
  5555  001DE2  6EF7               	movwf	tblptrh,c
  5556  001DE4                     	if	0	;There are less than 3 active tblptr bytes
  5557  001DE4                     	endif
  5558  001DE4  0009               	tblrd		*+
  5559  001DE6  CFF5 F016          	movff	tablat,___flmul@a
  5560  001DEA  0009               	tblrd		*+
  5561  001DEC  CFF5 F017          	movff	tablat,___flmul@a+1
  5562  001DF0  0009               	tblrd		*+
  5563  001DF2  CFF5 F018          	movff	tablat,___flmul@a+2
  5564  001DF6  000A               	tblrd		*-
  5565  001DF8  CFF5 F019          	movff	tablat,___flmul@a+3
  5566  001DFC  ECDF  F00A         	call	___flmul	;wreg free
  5567  001E00  C012  F02B         	movff	?___flmul,?_fround
  5568  001E04  C013  F02C         	movff	?___flmul+1,?_fround+1
  5569  001E08  C014  F02D         	movff	?___flmul+2,?_fround+2
  5570  001E0C  C015  F02E         	movff	?___flmul+3,?_fround+3
  5571  001E10  0012               	return	
  5572  001E12                     l5241:
  5573                           
  5574                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  5575  001E12  5039               	movf	fround@prec^0,w,c
  5576  001E14  0D04               	mullw	4
  5577  001E16  0E75               	movlw	low __npowers_
  5578  001E18  24F3               	addwf	243,w,c
  5579  001E1A  6EF6               	movwf	tblptrl,c
  5580  001E1C  0E3E               	movlw	high __npowers_
  5581  001E1E  20F4               	addwfc	244,w,c
  5582  001E20  6EF7               	movwf	tblptrh,c
  5583  001E22                     	if	0	;There are less than 3 active tblptr bytes
  5584  001E22                     	endif
  5585  001E22  0009               	tblrd		*+
  5586  001E24  CFF5 F012          	movff	tablat,___flmul@b
  5587  001E28  0009               	tblrd		*+
  5588  001E2A  CFF5 F013          	movff	tablat,___flmul@b+1
  5589  001E2E  0009               	tblrd		*+
  5590  001E30  CFF5 F014          	movff	tablat,___flmul@b+2
  5591  001E34  000A               	tblrd		*-
  5592  001E36  CFF5 F015          	movff	tablat,___flmul@b+3
  5593  001E3A  0E00               	movlw	0
  5594  001E3C  6E16               	movwf	___flmul@a^0,c
  5595  001E3E  0E00               	movlw	0
  5596  001E40  6E17               	movwf	(___flmul@a+1)^0,c
  5597  001E42  0E00               	movlw	0
  5598  001E44  6E18               	movwf	(___flmul@a+2)^0,c
  5599  001E46  0E3F               	movlw	63
  5600  001E48  6E19               	movwf	(___flmul@a+3)^0,c
  5601  001E4A  ECDF  F00A         	call	___flmul	;wreg free
  5602  001E4E  C012  F02B         	movff	?___flmul,?_fround
  5603  001E52  C013  F02C         	movff	?___flmul+1,?_fround+1
  5604  001E56  C014  F02D         	movff	?___flmul+2,?_fround+2
  5605  001E5A  C015  F02E         	movff	?___flmul+3,?_fround+3
  5606  001E5E  0012               	return		;funcret
  5607  001E60                     __end_of_fround:
  5608                           	callstack 0
  5609                           
  5610 ;; *************** function ___lbmod *****************
  5611 ;; Defined at:
  5612 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lbmod.c"
  5613 ;; Parameters:    Size  Location     Type
  5614 ;;  dividend        1    wreg     unsigned char 
  5615 ;;  divisor         1    3[COMRAM] unsigned char 
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;  dividend        1    4[COMRAM] unsigned char 
  5618 ;;  rem             1    6[COMRAM] unsigned char 
  5619 ;;  counter         1    5[COMRAM] unsigned char 
  5620 ;; Return value:  Size  Location     Type
  5621 ;;                  1    wreg      unsigned char 
  5622 ;; Registers used:
  5623 ;;		wreg, status,2, status,0
  5624 ;; Tracked objects:
  5625 ;;		On entry : 0/0
  5626 ;;		On exit  : 0/0
  5627 ;;		Unchanged: 0/0
  5628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5629 ;;      Params:         1       0       0       0
  5630 ;;      Locals:         3       0       0       0
  5631 ;;      Temps:          0       0       0       0
  5632 ;;      Totals:         4       0       0       0
  5633 ;;Total ram usage:        4 bytes
  5634 ;; Hardware stack levels used: 1
  5635 ;; Hardware stack levels required when called: 1
  5636 ;; This function calls:
  5637 ;;		Nothing
  5638 ;; This function is called by:
  5639 ;;		_fround
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           	psect	text11
  5644  002A2A                     __ptext11:
  5645                           	callstack 0
  5646  002A2A                     ___lbmod:
  5647                           	callstack 26
  5648                           
  5649                           ;incstack = 0
  5650                           ;___lbmod@dividend stored from wreg
  5651  002A2A  6E05               	movwf	___lbmod@dividend^0,c
  5652  002A2C  0E08               	movlw	8
  5653  002A2E  6E06               	movwf	___lbmod@counter^0,c
  5654  002A30  0E00               	movlw	0
  5655  002A32  6E07               	movwf	___lbmod@rem^0,c
  5656  002A34                     l5023:
  5657  002A34  90D8               	bcf	status,0,c
  5658  002A36  3405               	rlcf	___lbmod@dividend^0,w,c
  5659  002A38  3407               	rlcf	___lbmod@rem^0,w,c
  5660  002A3A  6E07               	movwf	___lbmod@rem^0,c
  5661  002A3C  90D8               	bcf	status,0,c
  5662  002A3E  3605               	rlcf	___lbmod@dividend^0,f,c
  5663  002A40  5004               	movf	___lbmod@divisor^0,w,c
  5664  002A42  5C07               	subwf	___lbmod@rem^0,w,c
  5665  002A44  A0D8               	btfss	status,0,c
  5666  002A46  D002               	goto	l5031
  5667  002A48  5004               	movf	___lbmod@divisor^0,w,c
  5668  002A4A  5E07               	subwf	___lbmod@rem^0,f,c
  5669  002A4C                     l5031:
  5670  002A4C  2E06               	decfsz	___lbmod@counter^0,f,c
  5671  002A4E  D7F2               	goto	l5023
  5672  002A50  5007               	movf	___lbmod@rem^0,w,c
  5673  002A52  0012               	return		;funcret
  5674  002A54                     __end_of___lbmod:
  5675                           	callstack 0
  5676                           
  5677 ;; *************** function ___lbdiv *****************
  5678 ;; Defined at:
  5679 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lbdiv.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;  dividend        1    wreg     unsigned char 
  5682 ;;  divisor         1    7[COMRAM] unsigned char 
  5683 ;; Auto vars:     Size  Location     Type
  5684 ;;  dividend        1    8[COMRAM] unsigned char 
  5685 ;;  quotient        1   10[COMRAM] unsigned char 
  5686 ;;  counter         1    9[COMRAM] unsigned char 
  5687 ;; Return value:  Size  Location     Type
  5688 ;;                  1    wreg      unsigned char 
  5689 ;; Registers used:
  5690 ;;		wreg, status,2, status,0
  5691 ;; Tracked objects:
  5692 ;;		On entry : 0/0
  5693 ;;		On exit  : 0/0
  5694 ;;		Unchanged: 0/0
  5695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5696 ;;      Params:         1       0       0       0
  5697 ;;      Locals:         3       0       0       0
  5698 ;;      Temps:          0       0       0       0
  5699 ;;      Totals:         4       0       0       0
  5700 ;;Total ram usage:        4 bytes
  5701 ;; Hardware stack levels used: 1
  5702 ;; Hardware stack levels required when called: 1
  5703 ;; This function calls:
  5704 ;;		Nothing
  5705 ;; This function is called by:
  5706 ;;		_fround
  5707 ;; This function uses a non-reentrant model
  5708 ;;
  5709                           
  5710                           	psect	text12
  5711  002930                     __ptext12:
  5712                           	callstack 0
  5713  002930                     ___lbdiv:
  5714                           	callstack 26
  5715                           
  5716                           ;incstack = 0
  5717                           ;___lbdiv@dividend stored from wreg
  5718  002930  6E09               	movwf	___lbdiv@dividend^0,c
  5719  002932  0E00               	movlw	0
  5720  002934  6E0B               	movwf	___lbdiv@quotient^0,c
  5721  002936  5008               	movf	___lbdiv@divisor^0,w,c
  5722  002938  B4D8               	btfsc	status,2,c
  5723  00293A  D015               	goto	l5017
  5724  00293C  0E01               	movlw	1
  5725  00293E  6E0A               	movwf	___lbdiv@counter^0,c
  5726  002940  D003               	goto	l5005
  5727  002942                     l5001:
  5728  002942  90D8               	bcf	status,0,c
  5729  002944  3608               	rlcf	___lbdiv@divisor^0,f,c
  5730  002946  2A0A               	incf	___lbdiv@counter^0,f,c
  5731  002948                     l5005:
  5732  002948  AE08               	btfss	___lbdiv@divisor^0,7,c
  5733  00294A  D7FB               	goto	l5001
  5734  00294C                     u5790:
  5735  00294C  90D8               	bcf	status,0,c
  5736  00294E  360B               	rlcf	___lbdiv@quotient^0,f,c
  5737  002950  5008               	movf	___lbdiv@divisor^0,w,c
  5738  002952  5C09               	subwf	___lbdiv@dividend^0,w,c
  5739  002954  A0D8               	btfss	status,0,c
  5740  002956  D003               	goto	l5013
  5741  002958  5008               	movf	___lbdiv@divisor^0,w,c
  5742  00295A  5E09               	subwf	___lbdiv@dividend^0,f,c
  5743  00295C  800B               	bsf	___lbdiv@quotient^0,0,c
  5744  00295E                     l5013:
  5745  00295E  90D8               	bcf	status,0,c
  5746  002960  3208               	rrcf	___lbdiv@divisor^0,f,c
  5747  002962  2E0A               	decfsz	___lbdiv@counter^0,f,c
  5748  002964  D7F3               	goto	u5790
  5749  002966                     l5017:
  5750  002966  500B               	movf	___lbdiv@quotient^0,w,c
  5751  002968  0012               	return		;funcret
  5752  00296A                     __end_of___lbdiv:
  5753                           	callstack 0
  5754                           
  5755 ;; *************** function ___flmul *****************
  5756 ;; Defined at:
  5757 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcmul.c"
  5758 ;; Parameters:    Size  Location     Type
  5759 ;;  b               4   17[COMRAM] unsigned char 
  5760 ;;  a               4   21[COMRAM] unsigned char 
  5761 ;; Auto vars:     Size  Location     Type
  5762 ;;  prod            4   36[COMRAM] struct .
  5763 ;;  grs             4   32[COMRAM] unsigned long 
  5764 ;;  temp            2   40[COMRAM] struct .
  5765 ;;  bexp            1   31[COMRAM] unsigned char 
  5766 ;;  aexp            1   30[COMRAM] unsigned char 
  5767 ;;  sign            1   29[COMRAM] unsigned char 
  5768 ;; Return value:  Size  Location     Type
  5769 ;;                  4   17[COMRAM] unsigned char 
  5770 ;; Registers used:
  5771 ;;		wreg, status,2, status,0, prodl, prodh
  5772 ;; Tracked objects:
  5773 ;;		On entry : 0/0
  5774 ;;		On exit  : 0/0
  5775 ;;		Unchanged: 0/0
  5776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5777 ;;      Params:         8       0       0       0
  5778 ;;      Locals:        13       0       0       0
  5779 ;;      Temps:          4       0       0       0
  5780 ;;      Totals:        25       0       0       0
  5781 ;;Total ram usage:       25 bytes
  5782 ;; Hardware stack levels used: 1
  5783 ;; Hardware stack levels required when called: 1
  5784 ;; This function calls:
  5785 ;;		Nothing
  5786 ;; This function is called by:
  5787 ;;		_fround
  5788 ;;		_scale
  5789 ;;		__doprnt
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793                           	psect	text13
  5794  0015BE                     __ptext13:
  5795                           	callstack 0
  5796  0015BE                     ___flmul:
  5797                           	callstack 26
  5798                           
  5799                           ;incstack = 0
  5800  0015BE  5015               	movf	(___flmul@b+3)^0,w,c
  5801  0015C0  0B80               	andlw	128
  5802  0015C2  6E1E               	movwf	___flmul@sign^0,c
  5803  0015C4  5015               	movf	(___flmul@b+3)^0,w,c
  5804  0015C6  2415               	addwf	(___flmul@b+3)^0,w,c
  5805  0015C8  6E20               	movwf	___flmul@bexp^0,c
  5806  0015CA  BE14               	btfsc	(___flmul@b+2)^0,7,c
  5807  0015CC  8020               	bsf	___flmul@bexp^0,0,c
  5808  0015CE  5020               	movf	___flmul@bexp^0,w,c
  5809  0015D0  B4D8               	btfsc	status,2,c
  5810  0015D2  D00D               	goto	l4799
  5811  0015D4  2820               	incf	___flmul@bexp^0,w,c
  5812  0015D6  A4D8               	btfss	status,2,c
  5813  0015D8  D008               	goto	l4797
  5814  0015DA  0E00               	movlw	0
  5815  0015DC  6E12               	movwf	___flmul@b^0,c
  5816  0015DE  0E00               	movlw	0
  5817  0015E0  6E13               	movwf	(___flmul@b+1)^0,c
  5818  0015E2  0E00               	movlw	0
  5819  0015E4  6E14               	movwf	(___flmul@b+2)^0,c
  5820  0015E6  0E00               	movlw	0
  5821  0015E8  6E15               	movwf	(___flmul@b+3)^0,c
  5822  0015EA                     l4797:
  5823  0015EA  8E14               	bsf	(___flmul@b+2)^0,7,c
  5824  0015EC  D008               	goto	l4801
  5825  0015EE                     l4799:
  5826  0015EE  0E00               	movlw	0
  5827  0015F0  6E12               	movwf	___flmul@b^0,c
  5828  0015F2  0E00               	movlw	0
  5829  0015F4  6E13               	movwf	(___flmul@b+1)^0,c
  5830  0015F6  0E00               	movlw	0
  5831  0015F8  6E14               	movwf	(___flmul@b+2)^0,c
  5832  0015FA  0E00               	movlw	0
  5833  0015FC  6E15               	movwf	(___flmul@b+3)^0,c
  5834  0015FE                     l4801:
  5835  0015FE  5019               	movf	(___flmul@a+3)^0,w,c
  5836  001600  0B80               	andlw	128
  5837  001602  1A1E               	xorwf	___flmul@sign^0,f,c
  5838  001604  5019               	movf	(___flmul@a+3)^0,w,c
  5839  001606  2419               	addwf	(___flmul@a+3)^0,w,c
  5840  001608  6E1F               	movwf	___flmul@aexp^0,c
  5841  00160A  BE18               	btfsc	(___flmul@a+2)^0,7,c
  5842  00160C  801F               	bsf	___flmul@aexp^0,0,c
  5843  00160E  501F               	movf	___flmul@aexp^0,w,c
  5844  001610  B4D8               	btfsc	status,2,c
  5845  001612  D00D               	goto	l4817
  5846  001614  281F               	incf	___flmul@aexp^0,w,c
  5847  001616  A4D8               	btfss	status,2,c
  5848  001618  D008               	goto	l4815
  5849  00161A  0E00               	movlw	0
  5850  00161C  6E16               	movwf	___flmul@a^0,c
  5851  00161E  0E00               	movlw	0
  5852  001620  6E17               	movwf	(___flmul@a+1)^0,c
  5853  001622  0E00               	movlw	0
  5854  001624  6E18               	movwf	(___flmul@a+2)^0,c
  5855  001626  0E00               	movlw	0
  5856  001628  6E19               	movwf	(___flmul@a+3)^0,c
  5857  00162A                     l4815:
  5858  00162A  8E18               	bsf	(___flmul@a+2)^0,7,c
  5859  00162C  D008               	goto	l1020
  5860  00162E                     l4817:
  5861  00162E  0E00               	movlw	0
  5862  001630  6E16               	movwf	___flmul@a^0,c
  5863  001632  0E00               	movlw	0
  5864  001634  6E17               	movwf	(___flmul@a+1)^0,c
  5865  001636  0E00               	movlw	0
  5866  001638  6E18               	movwf	(___flmul@a+2)^0,c
  5867  00163A  0E00               	movlw	0
  5868  00163C  6E19               	movwf	(___flmul@a+3)^0,c
  5869  00163E                     l1020:
  5870  00163E  501F               	movf	___flmul@aexp^0,w,c
  5871  001640  B4D8               	btfsc	status,2,c
  5872  001642  D003               	goto	u5550
  5873  001644  5020               	movf	___flmul@bexp^0,w,c
  5874  001646  A4D8               	btfss	status,2,c
  5875  001648  D009               	goto	l4825
  5876  00164A                     u5550:
  5877  00164A  0E00               	movlw	0
  5878  00164C  6E12               	movwf	?___flmul^0,c
  5879  00164E  0E00               	movlw	0
  5880  001650  6E13               	movwf	(?___flmul+1)^0,c
  5881  001652  0E00               	movlw	0
  5882  001654  6E14               	movwf	(?___flmul+2)^0,c
  5883  001656  0E00               	movlw	0
  5884  001658  6E15               	movwf	(?___flmul+3)^0,c
  5885  00165A  0012               	return	
  5886  00165C                     l4825:
  5887  00165C  5018               	movf	(___flmul@a+2)^0,w,c
  5888  00165E  0212               	mulwf	___flmul@b^0,c
  5889  001660  CFF3 F029          	movff	prodl,___flmul@temp
  5890  001664  CFF4 F02A          	movff	prodh,___flmul@temp+1
  5891  001668  5029               	movf	___flmul@temp^0,w,c
  5892  00166A  6E21               	movwf	___flmul@grs^0,c
  5893  00166C  6A22               	clrf	(___flmul@grs+1)^0,c
  5894  00166E  6A23               	clrf	(___flmul@grs+2)^0,c
  5895  001670  6A24               	clrf	(___flmul@grs+3)^0,c
  5896  001672  502A               	movf	(___flmul@temp+1)^0,w,c
  5897  001674  6E25               	movwf	___flmul@prod^0,c
  5898  001676  6A26               	clrf	(___flmul@prod+1)^0,c
  5899  001678  6A27               	clrf	(___flmul@prod+2)^0,c
  5900  00167A  6A28               	clrf	(___flmul@prod+3)^0,c
  5901  00167C  5017               	movf	(___flmul@a+1)^0,w,c
  5902  00167E  0213               	mulwf	(___flmul@b+1)^0,c
  5903  001680  CFF3 F029          	movff	prodl,___flmul@temp
  5904  001684  CFF4 F02A          	movff	prodh,___flmul@temp+1
  5905  001688  5029               	movf	___flmul@temp^0,w,c
  5906  00168A  2621               	addwf	___flmul@grs^0,f,c
  5907  00168C  0E00               	movlw	0
  5908  00168E  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5909  001690  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5910  001692  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5911  001694  502A               	movf	(___flmul@temp+1)^0,w,c
  5912  001696  2625               	addwf	___flmul@prod^0,f,c
  5913  001698  0E00               	movlw	0
  5914  00169A  2226               	addwfc	(___flmul@prod+1)^0,f,c
  5915  00169C  2227               	addwfc	(___flmul@prod+2)^0,f,c
  5916  00169E  2228               	addwfc	(___flmul@prod+3)^0,f,c
  5917  0016A0  5016               	movf	___flmul@a^0,w,c
  5918  0016A2  0214               	mulwf	(___flmul@b+2)^0,c
  5919  0016A4  CFF3 F029          	movff	prodl,___flmul@temp
  5920  0016A8  CFF4 F02A          	movff	prodh,___flmul@temp+1
  5921  0016AC  5029               	movf	___flmul@temp^0,w,c
  5922  0016AE  2621               	addwf	___flmul@grs^0,f,c
  5923  0016B0  0E00               	movlw	0
  5924  0016B2  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5925  0016B4  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5926  0016B6  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5927  0016B8  502A               	movf	(___flmul@temp+1)^0,w,c
  5928  0016BA  2625               	addwf	___flmul@prod^0,f,c
  5929  0016BC  0E00               	movlw	0
  5930  0016BE  2226               	addwfc	(___flmul@prod+1)^0,f,c
  5931  0016C0  2227               	addwfc	(___flmul@prod+2)^0,f,c
  5932  0016C2  2228               	addwfc	(___flmul@prod+3)^0,f,c
  5933  0016C4  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  5934  0016C8  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  5935  0016CC  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  5936  0016D0  6A21               	clrf	___flmul@grs^0,c
  5937  0016D2  5016               	movf	___flmul@a^0,w,c
  5938  0016D4  0213               	mulwf	(___flmul@b+1)^0,c
  5939  0016D6  CFF3 F029          	movff	prodl,___flmul@temp
  5940  0016DA  CFF4 F02A          	movff	prodh,___flmul@temp+1
  5941  0016DE  5029               	movf	___flmul@temp^0,w,c
  5942  0016E0  2621               	addwf	___flmul@grs^0,f,c
  5943  0016E2  502A               	movf	(___flmul@temp+1)^0,w,c
  5944  0016E4  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5945  0016E6  0E00               	movlw	0
  5946  0016E8  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5947  0016EA  0E00               	movlw	0
  5948  0016EC  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5949  0016EE  5017               	movf	(___flmul@a+1)^0,w,c
  5950  0016F0  0212               	mulwf	___flmul@b^0,c
  5951  0016F2  CFF3 F029          	movff	prodl,___flmul@temp
  5952  0016F6  CFF4 F02A          	movff	prodh,___flmul@temp+1
  5953  0016FA  5029               	movf	___flmul@temp^0,w,c
  5954  0016FC  2621               	addwf	___flmul@grs^0,f,c
  5955  0016FE  502A               	movf	(___flmul@temp+1)^0,w,c
  5956  001700  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5957  001702  0E00               	movlw	0
  5958  001704  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5959  001706  0E00               	movlw	0
  5960  001708  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5961  00170A  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  5962  00170E  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  5963  001712  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  5964  001716  6A21               	clrf	___flmul@grs^0,c
  5965  001718  5016               	movf	___flmul@a^0,w,c
  5966  00171A  0212               	mulwf	___flmul@b^0,c
  5967  00171C  CFF3 F029          	movff	prodl,___flmul@temp
  5968  001720  CFF4 F02A          	movff	prodh,___flmul@temp+1
  5969  001724  5029               	movf	___flmul@temp^0,w,c
  5970  001726  2621               	addwf	___flmul@grs^0,f,c
  5971  001728  502A               	movf	(___flmul@temp+1)^0,w,c
  5972  00172A  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5973  00172C  0E00               	movlw	0
  5974  00172E  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5975  001730  0E00               	movlw	0
  5976  001732  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5977  001734  5018               	movf	(___flmul@a+2)^0,w,c
  5978  001736  0213               	mulwf	(___flmul@b+1)^0,c
  5979  001738  CFF3 F029          	movff	prodl,___flmul@temp
  5980  00173C  CFF4 F02A          	movff	prodh,___flmul@temp+1
  5981  001740  5029               	movf	___flmul@temp^0,w,c
  5982  001742  2625               	addwf	___flmul@prod^0,f,c
  5983  001744  502A               	movf	(___flmul@temp+1)^0,w,c
  5984  001746  2226               	addwfc	(___flmul@prod+1)^0,f,c
  5985  001748  0E00               	movlw	0
  5986  00174A  2227               	addwfc	(___flmul@prod+2)^0,f,c
  5987  00174C  0E00               	movlw	0
  5988  00174E  2228               	addwfc	(___flmul@prod+3)^0,f,c
  5989  001750  5017               	movf	(___flmul@a+1)^0,w,c
  5990  001752  0214               	mulwf	(___flmul@b+2)^0,c
  5991  001754  CFF3 F029          	movff	prodl,___flmul@temp
  5992  001758  CFF4 F02A          	movff	prodh,___flmul@temp+1
  5993  00175C  5029               	movf	___flmul@temp^0,w,c
  5994  00175E  2625               	addwf	___flmul@prod^0,f,c
  5995  001760  502A               	movf	(___flmul@temp+1)^0,w,c
  5996  001762  2226               	addwfc	(___flmul@prod+1)^0,f,c
  5997  001764  0E00               	movlw	0
  5998  001766  2227               	addwfc	(___flmul@prod+2)^0,f,c
  5999  001768  0E00               	movlw	0
  6000  00176A  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6001  00176C  5018               	movf	(___flmul@a+2)^0,w,c
  6002  00176E  0214               	mulwf	(___flmul@b+2)^0,c
  6003  001770  CFF3 F029          	movff	prodl,___flmul@temp
  6004  001774  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6005  001778  5029               	movf	___flmul@temp^0,w,c
  6006  00177A  6E1A               	movwf	??___flmul^0,c
  6007  00177C  502A               	movf	(___flmul@temp+1)^0,w,c
  6008  00177E  6E1B               	movwf	(??___flmul+1)^0,c
  6009  001780  6A1C               	clrf	(??___flmul+2)^0,c
  6010  001782  6A1D               	clrf	(??___flmul+3)^0,c
  6011  001784  C01C  F01D         	movff	??___flmul+2,??___flmul+3
  6012  001788  C01B  F01C         	movff	??___flmul+1,??___flmul+2
  6013  00178C  C01A  F01B         	movff	??___flmul,??___flmul+1
  6014  001790  6A1A               	clrf	??___flmul^0,c
  6015  001792  501A               	movf	??___flmul^0,w,c
  6016  001794  2625               	addwf	___flmul@prod^0,f,c
  6017  001796  501B               	movf	(??___flmul+1)^0,w,c
  6018  001798  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6019  00179A  501C               	movf	(??___flmul+2)^0,w,c
  6020  00179C  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6021  00179E  501D               	movf	(??___flmul+3)^0,w,c
  6022  0017A0  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6023  0017A2  5024               	movf	(___flmul@grs+3)^0,w,c
  6024  0017A4  2625               	addwf	___flmul@prod^0,f,c
  6025  0017A6  0E00               	movlw	0
  6026  0017A8  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6027  0017AA  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6028  0017AC  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6029  0017AE  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  6030  0017B2  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  6031  0017B6  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  6032  0017BA  6A21               	clrf	___flmul@grs^0,c
  6033  0017BC  501F               	movf	___flmul@aexp^0,w,c
  6034  0017BE  C020  F01A         	movff	___flmul@bexp,??___flmul
  6035  0017C2  6A1B               	clrf	(??___flmul+1)^0,c
  6036  0017C4  261A               	addwf	??___flmul^0,f,c
  6037  0017C6  0E00               	movlw	0
  6038  0017C8  221B               	addwfc	(??___flmul+1)^0,f,c
  6039  0017CA  0E82               	movlw	130
  6040  0017CC  241A               	addwf	??___flmul^0,w,c
  6041  0017CE  6E29               	movwf	___flmul@temp^0,c
  6042  0017D0  0EFF               	movlw	255
  6043  0017D2  201B               	addwfc	(??___flmul+1)^0,w,c
  6044  0017D4  6E2A               	movwf	(___flmul@temp+1)^0,c
  6045  0017D6  D00F               	goto	l4873
  6046  0017D8                     l4867:
  6047  0017D8  90D8               	bcf	status,0,c
  6048  0017DA  3625               	rlcf	___flmul@prod^0,f,c
  6049  0017DC  3626               	rlcf	(___flmul@prod+1)^0,f,c
  6050  0017DE  3627               	rlcf	(___flmul@prod+2)^0,f,c
  6051  0017E0  3628               	rlcf	(___flmul@prod+3)^0,f,c
  6052  0017E2  BE24               	btfsc	(___flmul@grs+3)^0,7,c
  6053  0017E4  8025               	bsf	___flmul@prod^0,0,c
  6054  0017E6  90D8               	bcf	status,0,c
  6055  0017E8  3621               	rlcf	___flmul@grs^0,f,c
  6056  0017EA  3622               	rlcf	(___flmul@grs+1)^0,f,c
  6057  0017EC  3623               	rlcf	(___flmul@grs+2)^0,f,c
  6058  0017EE  3624               	rlcf	(___flmul@grs+3)^0,f,c
  6059  0017F0  0629               	decf	___flmul@temp^0,f,c
  6060  0017F2  A0D8               	btfss	status,0,c
  6061  0017F4  062A               	decf	(___flmul@temp+1)^0,f,c
  6062  0017F6                     l4873:
  6063  0017F6  AE27               	btfss	(___flmul@prod+2)^0,7,c
  6064  0017F8  D7EF               	goto	l4867
  6065  0017FA  0E00               	movlw	0
  6066  0017FC  6E1F               	movwf	___flmul@aexp^0,c
  6067  0017FE  AE24               	btfss	(___flmul@grs+3)^0,7,c
  6068  001800  D017               	goto	l1029
  6069  001802  0EFF               	movlw	255
  6070  001804  1421               	andwf	___flmul@grs^0,w,c
  6071  001806  6E1A               	movwf	??___flmul^0,c
  6072  001808  0EFF               	movlw	255
  6073  00180A  1422               	andwf	(___flmul@grs+1)^0,w,c
  6074  00180C  6E1B               	movwf	(??___flmul+1)^0,c
  6075  00180E  0EFF               	movlw	255
  6076  001810  1423               	andwf	(___flmul@grs+2)^0,w,c
  6077  001812  6E1C               	movwf	(??___flmul+2)^0,c
  6078  001814  0E7F               	movlw	127
  6079  001816  1424               	andwf	(___flmul@grs+3)^0,w,c
  6080  001818  6E1D               	movwf	(??___flmul+3)^0,c
  6081  00181A  501A               	movf	??___flmul^0,w,c
  6082  00181C  101B               	iorwf	(??___flmul+1)^0,w,c
  6083  00181E  101C               	iorwf	(??___flmul+2)^0,w,c
  6084  001820  101D               	iorwf	(??___flmul+3)^0,w,c
  6085  001822  B4D8               	btfsc	status,2,c
  6086  001824  D003               	goto	l1030
  6087  001826                     u5590:
  6088  001826  0E01               	movlw	1
  6089  001828  6E1F               	movwf	___flmul@aexp^0,c
  6090  00182A  D002               	goto	l1029
  6091  00182C                     l1030:
  6092  00182C  B025               	btfsc	___flmul@prod^0,0,c
  6093  00182E  D7FB               	goto	u5590
  6094  001830                     l1029:
  6095  001830  501F               	movf	___flmul@aexp^0,w,c
  6096  001832  B4D8               	btfsc	status,2,c
  6097  001834  D01F               	goto	l4893
  6098  001836  0E01               	movlw	1
  6099  001838  2625               	addwf	___flmul@prod^0,f,c
  6100  00183A  0E00               	movlw	0
  6101  00183C  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6102  00183E  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6103  001840  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6104  001842  A028               	btfss	(___flmul@prod+3)^0,0,c
  6105  001844  D017               	goto	l4893
  6106  001846  C025  F01A         	movff	___flmul@prod,??___flmul
  6107  00184A  C026  F01B         	movff	___flmul@prod+1,??___flmul+1
  6108  00184E  C027  F01C         	movff	___flmul@prod+2,??___flmul+2
  6109  001852  C028  F01D         	movff	___flmul@prod+3,??___flmul+3
  6110  001856  341D               	rlcf	(??___flmul+3)^0,w,c
  6111  001858  321D               	rrcf	(??___flmul+3)^0,f,c
  6112  00185A  321C               	rrcf	(??___flmul+2)^0,f,c
  6113  00185C  321B               	rrcf	(??___flmul+1)^0,f,c
  6114  00185E  321A               	rrcf	??___flmul^0,f,c
  6115  001860  C01A  F025         	movff	??___flmul,___flmul@prod
  6116  001864  C01B  F026         	movff	??___flmul+1,___flmul@prod+1
  6117  001868  C01C  F027         	movff	??___flmul+2,___flmul@prod+2
  6118  00186C  C01D  F028         	movff	??___flmul+3,___flmul@prod+3
  6119  001870  4A29               	infsnz	___flmul@temp^0,f,c
  6120  001872  2A2A               	incf	(___flmul@temp+1)^0,f,c
  6121  001874                     l4893:
  6122  001874  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
  6123  001876  D00D               	goto	l4897
  6124  001878  502A               	movf	(___flmul@temp+1)^0,w,c
  6125  00187A  E103               	bnz	u5630
  6126  00187C  2829               	incf	___flmul@temp^0,w,c
  6127  00187E  A0D8               	btfss	status,0,c
  6128  001880  D008               	goto	l4897
  6129  001882                     u5630:
  6130  001882  0E00               	movlw	0
  6131  001884  6E25               	movwf	___flmul@prod^0,c
  6132  001886  0E00               	movlw	0
  6133  001888  6E26               	movwf	(___flmul@prod+1)^0,c
  6134  00188A  0E80               	movlw	128
  6135  00188C  6E27               	movwf	(___flmul@prod+2)^0,c
  6136  00188E  0E7F               	movlw	127
  6137  001890  D020               	goto	L3
  6138  001892                     l4897:
  6139  001892  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
  6140  001894  D005               	goto	u5640
  6141  001896  502A               	movf	(___flmul@temp+1)^0,w,c
  6142  001898  E10E               	bnz	l1037
  6143  00189A  0429               	decf	___flmul@temp^0,w,c
  6144  00189C  B0D8               	btfsc	status,0,c
  6145  00189E  D00B               	goto	l1037
  6146  0018A0                     u5640:
  6147  0018A0  0E00               	movlw	0
  6148  0018A2  6E25               	movwf	___flmul@prod^0,c
  6149  0018A4  0E00               	movlw	0
  6150  0018A6  6E26               	movwf	(___flmul@prod+1)^0,c
  6151  0018A8  0E00               	movlw	0
  6152  0018AA  6E27               	movwf	(___flmul@prod+2)^0,c
  6153  0018AC  0E00               	movlw	0
  6154  0018AE  6E28               	movwf	(___flmul@prod+3)^0,c
  6155  0018B0  0E00               	movlw	0
  6156  0018B2  6E1E               	movwf	___flmul@sign^0,c
  6157  0018B4  D00F               	goto	l4909
  6158  0018B6                     l1037:
  6159  0018B6  C029  F020         	movff	___flmul@temp,___flmul@bexp
  6160  0018BA  0EFF               	movlw	255
  6161  0018BC  1625               	andwf	___flmul@prod^0,f,c
  6162  0018BE  0EFF               	movlw	255
  6163  0018C0  1626               	andwf	(___flmul@prod+1)^0,f,c
  6164  0018C2  0E7F               	movlw	127
  6165  0018C4  1627               	andwf	(___flmul@prod+2)^0,f,c
  6166  0018C6  0E00               	movlw	0
  6167  0018C8  1628               	andwf	(___flmul@prod+3)^0,f,c
  6168  0018CA  B020               	btfsc	___flmul@bexp^0,0,c
  6169  0018CC  8E27               	bsf	(___flmul@prod+2)^0,7,c
  6170  0018CE  90D8               	bcf	status,0,c
  6171  0018D0  3020               	rrcf	___flmul@bexp^0,w,c
  6172  0018D2                     L3:
  6173  0018D2  6E28               	movwf	(___flmul@prod+3)^0,c
  6174  0018D4                     l4909:
  6175  0018D4  501E               	movf	___flmul@sign^0,w,c
  6176  0018D6  1228               	iorwf	(___flmul@prod+3)^0,f,c
  6177  0018D8  C025  F012         	movff	___flmul@prod,?___flmul
  6178  0018DC  C026  F013         	movff	___flmul@prod+1,?___flmul+1
  6179  0018E0  C027  F014         	movff	___flmul@prod+2,?___flmul+2
  6180  0018E4  C028  F015         	movff	___flmul@prod+3,?___flmul+3
  6181  0018E8  0012               	return		;funcret
  6182  0018EA                     __end_of___flmul:
  6183                           	callstack 0
  6184                           
  6185 ;; *************** function __tdiv_to_l_ *****************
  6186 ;; Defined at:
  6187 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftdivl.c"
  6188 ;; Parameters:    Size  Location     Type
  6189 ;;  f1              4    3[COMRAM] float 
  6190 ;;  f2              4    7[COMRAM] float 
  6191 ;; Auto vars:     Size  Location     Type
  6192 ;;  quot            4   14[COMRAM] unsigned long 
  6193 ;;  exp1            1   19[COMRAM] unsigned char 
  6194 ;;  cntr            1   18[COMRAM] unsigned char 
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  4    3[COMRAM] unsigned long 
  6197 ;; Registers used:
  6198 ;;		wreg, status,2, status,0
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6204 ;;      Params:         8       0       0       0
  6205 ;;      Locals:         6       0       0       0
  6206 ;;      Temps:          3       0       0       0
  6207 ;;      Totals:        17       0       0       0
  6208 ;;Total ram usage:       17 bytes
  6209 ;; Hardware stack levels used: 1
  6210 ;; Hardware stack levels required when called: 1
  6211 ;; This function calls:
  6212 ;;		Nothing
  6213 ;; This function is called by:
  6214 ;;		__doprnt
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218                           	psect	text14
  6219  0020C6                     __ptext14:
  6220                           	callstack 0
  6221  0020C6                     __tdiv_to_l_:
  6222                           	callstack 27
  6223                           
  6224                           ;incstack = 0
  6225  0020C6  C006  F00C         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  6226  0020CA  6A0D               	clrf	(??__tdiv_to_l_+1)^0,c
  6227  0020CC  6A0E               	clrf	(??__tdiv_to_l_+2)^0,c
  6228  0020CE  3405               	rlcf	(__tdiv_to_l_@f1+1)^0,w,c
  6229  0020D0  360C               	rlcf	??__tdiv_to_l_^0,f,c
  6230  0020D2  E301               	bnc	u6241
  6231  0020D4  800D               	bsf	(??__tdiv_to_l_+1)^0,0,c
  6232  0020D6                     u6241:
  6233  0020D6  500C               	movf	??__tdiv_to_l_^0,w,c
  6234  0020D8  6E14               	movwf	__tdiv_to_l_@exp1^0,c
  6235  0020DA  5014               	movf	__tdiv_to_l_@exp1^0,w,c
  6236  0020DC  A4D8               	btfss	status,2,c
  6237  0020DE  D009               	goto	l5301
  6238  0020E0                     u6250:
  6239  0020E0  0E00               	movlw	0
  6240  0020E2  6E04               	movwf	?__tdiv_to_l_^0,c
  6241  0020E4  0E00               	movlw	0
  6242  0020E6  6E05               	movwf	(?__tdiv_to_l_+1)^0,c
  6243  0020E8  0E00               	movlw	0
  6244  0020EA  6E06               	movwf	(?__tdiv_to_l_+2)^0,c
  6245  0020EC  0E00               	movlw	0
  6246  0020EE  6E07               	movwf	(?__tdiv_to_l_+3)^0,c
  6247  0020F0  0012               	return	
  6248  0020F2                     l5301:
  6249  0020F2  C00A  F00C         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  6250  0020F6  6A0D               	clrf	(??__tdiv_to_l_+1)^0,c
  6251  0020F8  6A0E               	clrf	(??__tdiv_to_l_+2)^0,c
  6252  0020FA  3409               	rlcf	(__tdiv_to_l_@f2+1)^0,w,c
  6253  0020FC  360C               	rlcf	??__tdiv_to_l_^0,f,c
  6254  0020FE  E301               	bnc	u6261
  6255  002100  800D               	bsf	(??__tdiv_to_l_+1)^0,0,c
  6256  002102                     u6261:
  6257  002102  500C               	movf	??__tdiv_to_l_^0,w,c
  6258  002104  6E13               	movwf	__tdiv_to_l_@cntr^0,c
  6259  002106  5013               	movf	__tdiv_to_l_@cntr^0,w,c
  6260  002108  B4D8               	btfsc	status,2,c
  6261  00210A  D7EA               	goto	u6250
  6262  00210C  8E05               	bsf	(__tdiv_to_l_@f1+1)^0,7,c
  6263  00210E  0EFF               	movlw	255
  6264  002110  1604               	andwf	__tdiv_to_l_@f1^0,f,c
  6265  002112  0EFF               	movlw	255
  6266  002114  1605               	andwf	(__tdiv_to_l_@f1+1)^0,f,c
  6267  002116  0E00               	movlw	0
  6268  002118  1606               	andwf	(__tdiv_to_l_@f1+2)^0,f,c
  6269  00211A  8E09               	bsf	(__tdiv_to_l_@f2+1)^0,7,c
  6270  00211C  0EFF               	movlw	255
  6271  00211E  1608               	andwf	__tdiv_to_l_@f2^0,f,c
  6272  002120  0EFF               	movlw	255
  6273  002122  1609               	andwf	(__tdiv_to_l_@f2+1)^0,f,c
  6274  002124  0E00               	movlw	0
  6275  002126  160A               	andwf	(__tdiv_to_l_@f2+2)^0,f,c
  6276  002128  0E00               	movlw	0
  6277  00212A  6E0F               	movwf	__tdiv_to_l_@quot^0,c
  6278  00212C  0E00               	movlw	0
  6279  00212E  6E10               	movwf	(__tdiv_to_l_@quot+1)^0,c
  6280  002130  0E00               	movlw	0
  6281  002132  6E11               	movwf	(__tdiv_to_l_@quot+2)^0,c
  6282  002134  0E00               	movlw	0
  6283  002136  6E12               	movwf	(__tdiv_to_l_@quot+3)^0,c
  6284  002138  0E7F               	movlw	127
  6285  00213A  5E14               	subwf	__tdiv_to_l_@exp1^0,f,c
  6286  00213C  5013               	movf	__tdiv_to_l_@cntr^0,w,c
  6287  00213E  0F98               	addlw	152
  6288  002140  5E14               	subwf	__tdiv_to_l_@exp1^0,f,c
  6289  002142  0E18               	movlw	24
  6290  002144  6E13               	movwf	__tdiv_to_l_@cntr^0,c
  6291  002146                     l1326:
  6292  002146  90D8               	bcf	status,0,c
  6293  002148  360F               	rlcf	__tdiv_to_l_@quot^0,f,c
  6294  00214A  3610               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  6295  00214C  3611               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  6296  00214E  3612               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  6297  002150  5008               	movf	__tdiv_to_l_@f2^0,w,c
  6298  002152  5C04               	subwf	__tdiv_to_l_@f1^0,w,c
  6299  002154  5009               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  6300  002156  5805               	subwfb	(__tdiv_to_l_@f1+1)^0,w,c
  6301  002158  500A               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  6302  00215A  5806               	subwfb	(__tdiv_to_l_@f1+2)^0,w,c
  6303  00215C  A0D8               	btfss	status,0,c
  6304  00215E  D007               	goto	l1327
  6305  002160  5008               	movf	__tdiv_to_l_@f2^0,w,c
  6306  002162  5E04               	subwf	__tdiv_to_l_@f1^0,f,c
  6307  002164  5009               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  6308  002166  5A05               	subwfb	(__tdiv_to_l_@f1+1)^0,f,c
  6309  002168  500A               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  6310  00216A  5A06               	subwfb	(__tdiv_to_l_@f1+2)^0,f,c
  6311  00216C  800F               	bsf	__tdiv_to_l_@quot^0,0,c
  6312  00216E                     l1327:
  6313  00216E  90D8               	bcf	status,0,c
  6314  002170  3604               	rlcf	__tdiv_to_l_@f1^0,f,c
  6315  002172  3605               	rlcf	(__tdiv_to_l_@f1+1)^0,f,c
  6316  002174  3606               	rlcf	(__tdiv_to_l_@f1+2)^0,f,c
  6317  002176  2E13               	decfsz	__tdiv_to_l_@cntr^0,f,c
  6318  002178  D7E6               	goto	l1326
  6319  00217A  AE14               	btfss	__tdiv_to_l_@exp1^0,7,c
  6320  00217C  D00D               	goto	l5341
  6321  00217E  5014               	movf	__tdiv_to_l_@exp1^0,w,c
  6322  002180  0A80               	xorlw	128
  6323  002182  0F97               	addlw	151
  6324  002184  A0D8               	btfss	status,0,c
  6325  002186  D7AC               	goto	u6250
  6326  002188                     l5337:
  6327  002188  90D8               	bcf	status,0,c
  6328  00218A  3212               	rrcf	(__tdiv_to_l_@quot+3)^0,f,c
  6329  00218C  3211               	rrcf	(__tdiv_to_l_@quot+2)^0,f,c
  6330  00218E  3210               	rrcf	(__tdiv_to_l_@quot+1)^0,f,c
  6331  002190  320F               	rrcf	__tdiv_to_l_@quot^0,f,c
  6332  002192  3E14               	incfsz	__tdiv_to_l_@exp1^0,f,c
  6333  002194  D7F9               	goto	l5337
  6334  002196  D00D               	goto	u6320
  6335  002198                     l5341:
  6336  002198  0E17               	movlw	23
  6337  00219A  6414               	cpfsgt	__tdiv_to_l_@exp1^0,c
  6338  00219C  D007               	goto	l5349
  6339  00219E  D7A0               	goto	u6250
  6340  0021A0                     l5347:
  6341  0021A0  90D8               	bcf	status,0,c
  6342  0021A2  360F               	rlcf	__tdiv_to_l_@quot^0,f,c
  6343  0021A4  3610               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  6344  0021A6  3611               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  6345  0021A8  3612               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  6346  0021AA  0614               	decf	__tdiv_to_l_@exp1^0,f,c
  6347  0021AC                     l5349:
  6348  0021AC  5014               	movf	__tdiv_to_l_@exp1^0,w,c
  6349  0021AE  A4D8               	btfss	status,2,c
  6350  0021B0  D7F7               	goto	l5347
  6351  0021B2                     u6320:
  6352  0021B2  C00F  F004         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  6353  0021B6  C010  F005         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  6354  0021BA  C011  F006         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  6355  0021BE  C012  F007         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  6356  0021C2  0012               	return		;funcret
  6357  0021C4                     __end_of__tdiv_to_l_:
  6358                           	callstack 0
  6359                           
  6360 ;; *************** function __div_to_l_ *****************
  6361 ;; Defined at:
  6362 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fldivl.c"
  6363 ;; Parameters:    Size  Location     Type
  6364 ;;  f1              4    3[COMRAM] unsigned long 
  6365 ;;  f2              4    7[COMRAM] unsigned long 
  6366 ;; Auto vars:     Size  Location     Type
  6367 ;;  quot            4   11[COMRAM] unsigned long 
  6368 ;;  exp1            1   16[COMRAM] unsigned char 
  6369 ;;  cntr            1   15[COMRAM] unsigned char 
  6370 ;; Return value:  Size  Location     Type
  6371 ;;                  4    3[COMRAM] unsigned long 
  6372 ;; Registers used:
  6373 ;;		wreg, status,2, status,0
  6374 ;; Tracked objects:
  6375 ;;		On entry : 0/0
  6376 ;;		On exit  : 0/0
  6377 ;;		Unchanged: 0/0
  6378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6379 ;;      Params:         8       0       0       0
  6380 ;;      Locals:         6       0       0       0
  6381 ;;      Temps:          0       0       0       0
  6382 ;;      Totals:        14       0       0       0
  6383 ;;Total ram usage:       14 bytes
  6384 ;; Hardware stack levels used: 1
  6385 ;; Hardware stack levels required when called: 1
  6386 ;; This function calls:
  6387 ;;		Nothing
  6388 ;; This function is called by:
  6389 ;;		__doprnt
  6390 ;; This function uses a non-reentrant model
  6391 ;;
  6392                           
  6393                           	psect	text15
  6394  0021C4                     __ptext15:
  6395                           	callstack 0
  6396  0021C4                     __div_to_l_:
  6397                           	callstack 27
  6398                           
  6399                           ;incstack = 0
  6400  0021C4  3406               	rlcf	(__div_to_l_@f1+2)^0,w,c
  6401  0021C6  3407               	rlcf	(__div_to_l_@f1+3)^0,w,c
  6402  0021C8  6E11               	movwf	__div_to_l_@exp1^0,c
  6403  0021CA  5011               	movf	__div_to_l_@exp1^0,w,c
  6404  0021CC  A4D8               	btfss	status,2,c
  6405  0021CE  D009               	goto	l5357
  6406  0021D0                     u6330:
  6407  0021D0  0E00               	movlw	0
  6408  0021D2  6E04               	movwf	?__div_to_l_^0,c
  6409  0021D4  0E00               	movlw	0
  6410  0021D6  6E05               	movwf	(?__div_to_l_+1)^0,c
  6411  0021D8  0E00               	movlw	0
  6412  0021DA  6E06               	movwf	(?__div_to_l_+2)^0,c
  6413  0021DC  0E00               	movlw	0
  6414  0021DE  6E07               	movwf	(?__div_to_l_+3)^0,c
  6415  0021E0  0012               	return	
  6416  0021E2                     l5357:
  6417  0021E2  340A               	rlcf	(__div_to_l_@f2+2)^0,w,c
  6418  0021E4  340B               	rlcf	(__div_to_l_@f2+3)^0,w,c
  6419  0021E6  6E10               	movwf	__div_to_l_@cntr^0,c
  6420  0021E8  5010               	movf	__div_to_l_@cntr^0,w,c
  6421  0021EA  B4D8               	btfsc	status,2,c
  6422  0021EC  D7F1               	goto	u6330
  6423  0021EE  8E06               	bsf	(__div_to_l_@f1+2)^0,7,c
  6424  0021F0  0EFF               	movlw	255
  6425  0021F2  1604               	andwf	__div_to_l_@f1^0,f,c
  6426  0021F4  0EFF               	movlw	255
  6427  0021F6  1605               	andwf	(__div_to_l_@f1+1)^0,f,c
  6428  0021F8  0EFF               	movlw	255
  6429  0021FA  1606               	andwf	(__div_to_l_@f1+2)^0,f,c
  6430  0021FC  0E00               	movlw	0
  6431  0021FE  1607               	andwf	(__div_to_l_@f1+3)^0,f,c
  6432  002200  8E0A               	bsf	(__div_to_l_@f2+2)^0,7,c
  6433  002202  0EFF               	movlw	255
  6434  002204  1608               	andwf	__div_to_l_@f2^0,f,c
  6435  002206  0EFF               	movlw	255
  6436  002208  1609               	andwf	(__div_to_l_@f2+1)^0,f,c
  6437  00220A  0EFF               	movlw	255
  6438  00220C  160A               	andwf	(__div_to_l_@f2+2)^0,f,c
  6439  00220E  0E00               	movlw	0
  6440  002210  160B               	andwf	(__div_to_l_@f2+3)^0,f,c
  6441  002212  0E00               	movlw	0
  6442  002214  6E0C               	movwf	__div_to_l_@quot^0,c
  6443  002216  0E00               	movlw	0
  6444  002218  6E0D               	movwf	(__div_to_l_@quot+1)^0,c
  6445  00221A  0E00               	movlw	0
  6446  00221C  6E0E               	movwf	(__div_to_l_@quot+2)^0,c
  6447  00221E  0E00               	movlw	0
  6448  002220  6E0F               	movwf	(__div_to_l_@quot+3)^0,c
  6449  002222  0E7F               	movlw	127
  6450  002224  5E11               	subwf	__div_to_l_@exp1^0,f,c
  6451  002226  5010               	movf	__div_to_l_@cntr^0,w,c
  6452  002228  0FA0               	addlw	160
  6453  00222A  5E11               	subwf	__div_to_l_@exp1^0,f,c
  6454  00222C  0E20               	movlw	32
  6455  00222E  6E10               	movwf	__div_to_l_@cntr^0,c
  6456  002230                     l5377:
  6457  002230  90D8               	bcf	status,0,c
  6458  002232  360C               	rlcf	__div_to_l_@quot^0,f,c
  6459  002234  360D               	rlcf	(__div_to_l_@quot+1)^0,f,c
  6460  002236  360E               	rlcf	(__div_to_l_@quot+2)^0,f,c
  6461  002238  360F               	rlcf	(__div_to_l_@quot+3)^0,f,c
  6462  00223A  5008               	movf	__div_to_l_@f2^0,w,c
  6463  00223C  5C04               	subwf	__div_to_l_@f1^0,w,c
  6464  00223E  5009               	movf	(__div_to_l_@f2+1)^0,w,c
  6465  002240  5805               	subwfb	(__div_to_l_@f1+1)^0,w,c
  6466  002242  500A               	movf	(__div_to_l_@f2+2)^0,w,c
  6467  002244  5806               	subwfb	(__div_to_l_@f1+2)^0,w,c
  6468  002246  500B               	movf	(__div_to_l_@f2+3)^0,w,c
  6469  002248  5807               	subwfb	(__div_to_l_@f1+3)^0,w,c
  6470  00224A  A0D8               	btfss	status,0,c
  6471  00224C  D009               	goto	l5385
  6472  00224E  5008               	movf	__div_to_l_@f2^0,w,c
  6473  002250  5E04               	subwf	__div_to_l_@f1^0,f,c
  6474  002252  5009               	movf	(__div_to_l_@f2+1)^0,w,c
  6475  002254  5A05               	subwfb	(__div_to_l_@f1+1)^0,f,c
  6476  002256  500A               	movf	(__div_to_l_@f2+2)^0,w,c
  6477  002258  5A06               	subwfb	(__div_to_l_@f1+2)^0,f,c
  6478  00225A  500B               	movf	(__div_to_l_@f2+3)^0,w,c
  6479  00225C  5A07               	subwfb	(__div_to_l_@f1+3)^0,f,c
  6480  00225E  800C               	bsf	__div_to_l_@quot^0,0,c
  6481  002260                     l5385:
  6482  002260  90D8               	bcf	status,0,c
  6483  002262  3604               	rlcf	__div_to_l_@f1^0,f,c
  6484  002264  3605               	rlcf	(__div_to_l_@f1+1)^0,f,c
  6485  002266  3606               	rlcf	(__div_to_l_@f1+2)^0,f,c
  6486  002268  3607               	rlcf	(__div_to_l_@f1+3)^0,f,c
  6487  00226A  2E10               	decfsz	__div_to_l_@cntr^0,f,c
  6488  00226C  D7E1               	goto	l5377
  6489  00226E  AE11               	btfss	__div_to_l_@exp1^0,7,c
  6490  002270  D00D               	goto	l5401
  6491  002272  5011               	movf	__div_to_l_@exp1^0,w,c
  6492  002274  0A80               	xorlw	128
  6493  002276  0F9F               	addlw	159
  6494  002278  A0D8               	btfss	status,0,c
  6495  00227A  D7AA               	goto	u6330
  6496  00227C                     l5397:
  6497  00227C  90D8               	bcf	status,0,c
  6498  00227E  320F               	rrcf	(__div_to_l_@quot+3)^0,f,c
  6499  002280  320E               	rrcf	(__div_to_l_@quot+2)^0,f,c
  6500  002282  320D               	rrcf	(__div_to_l_@quot+1)^0,f,c
  6501  002284  320C               	rrcf	__div_to_l_@quot^0,f,c
  6502  002286  3E11               	incfsz	__div_to_l_@exp1^0,f,c
  6503  002288  D7F9               	goto	l5397
  6504  00228A  D00D               	goto	u6390
  6505  00228C                     l5401:
  6506  00228C  0E1F               	movlw	31
  6507  00228E  6411               	cpfsgt	__div_to_l_@exp1^0,c
  6508  002290  D007               	goto	l5409
  6509  002292  D79E               	goto	u6330
  6510  002294                     l5407:
  6511  002294  90D8               	bcf	status,0,c
  6512  002296  360C               	rlcf	__div_to_l_@quot^0,f,c
  6513  002298  360D               	rlcf	(__div_to_l_@quot+1)^0,f,c
  6514  00229A  360E               	rlcf	(__div_to_l_@quot+2)^0,f,c
  6515  00229C  360F               	rlcf	(__div_to_l_@quot+3)^0,f,c
  6516  00229E  0611               	decf	__div_to_l_@exp1^0,f,c
  6517  0022A0                     l5409:
  6518  0022A0  5011               	movf	__div_to_l_@exp1^0,w,c
  6519  0022A2  A4D8               	btfss	status,2,c
  6520  0022A4  D7F7               	goto	l5407
  6521  0022A6                     u6390:
  6522  0022A6  C00C  F004         	movff	__div_to_l_@quot,?__div_to_l_
  6523  0022AA  C00D  F005         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  6524  0022AE  C00E  F006         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  6525  0022B2  C00F  F007         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  6526  0022B6  0012               	return		;funcret
  6527  0022B8                     __end_of__div_to_l_:
  6528                           	callstack 0
  6529                           
  6530 ;; *************** function ___xxtofl *****************
  6531 ;; Defined at:
  6532 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\xxtofl.c"
  6533 ;; Parameters:    Size  Location     Type
  6534 ;;  sign            1    wreg     unsigned char 
  6535 ;;  val             4    3[COMRAM] long 
  6536 ;; Auto vars:     Size  Location     Type
  6537 ;;  sign            1   11[COMRAM] unsigned char 
  6538 ;;  arg             4   13[COMRAM] unsigned long 
  6539 ;;  exp             1   12[COMRAM] unsigned char 
  6540 ;; Return value:  Size  Location     Type
  6541 ;;                  4    3[COMRAM] unsigned char 
  6542 ;; Registers used:
  6543 ;;		wreg, status,2, status,0
  6544 ;; Tracked objects:
  6545 ;;		On entry : 0/0
  6546 ;;		On exit  : 0/0
  6547 ;;		Unchanged: 0/0
  6548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6549 ;;      Params:         4       0       0       0
  6550 ;;      Locals:         6       0       0       0
  6551 ;;      Temps:          4       0       0       0
  6552 ;;      Totals:        14       0       0       0
  6553 ;;Total ram usage:       14 bytes
  6554 ;; Hardware stack levels used: 1
  6555 ;; Hardware stack levels required when called: 1
  6556 ;; This function calls:
  6557 ;;		Nothing
  6558 ;; This function is called by:
  6559 ;;		__doprnt
  6560 ;; This function uses a non-reentrant model
  6561 ;;
  6562                           
  6563                           	psect	text16
  6564  001E60                     __ptext16:
  6565                           	callstack 0
  6566  001E60                     ___xxtofl:
  6567                           	callstack 27
  6568                           
  6569                           ;incstack = 0
  6570                           ;___xxtofl@sign stored from wreg
  6571  001E60  6E0C               	movwf	___xxtofl@sign^0,c
  6572  001E62  500C               	movf	___xxtofl@sign^0,w,c
  6573  001E64  A4D8               	btfss	status,2,c
  6574  001E66  AE07               	btfss	(___xxtofl@val+3)^0,7,c
  6575  001E68  D01A               	goto	l1061
  6576  001E6A  C004  F008         	movff	___xxtofl@val,??___xxtofl
  6577  001E6E  C005  F009         	movff	___xxtofl@val+1,??___xxtofl+1
  6578  001E72  C006  F00A         	movff	___xxtofl@val+2,??___xxtofl+2
  6579  001E76  C007  F00B         	movff	___xxtofl@val+3,??___xxtofl+3
  6580  001E7A  1E08               	comf	??___xxtofl^0,f,c
  6581  001E7C  1E09               	comf	(??___xxtofl+1)^0,f,c
  6582  001E7E  1E0A               	comf	(??___xxtofl+2)^0,f,c
  6583  001E80  1E0B               	comf	(??___xxtofl+3)^0,f,c
  6584  001E82  2A08               	incf	??___xxtofl^0,f,c
  6585  001E84  0E00               	movlw	0
  6586  001E86  2209               	addwfc	(??___xxtofl+1)^0,f,c
  6587  001E88  220A               	addwfc	(??___xxtofl+2)^0,f,c
  6588  001E8A  220B               	addwfc	(??___xxtofl+3)^0,f,c
  6589  001E8C  C008  F00E         	movff	??___xxtofl,___xxtofl@arg
  6590  001E90  C009  F00F         	movff	??___xxtofl+1,___xxtofl@arg+1
  6591  001E94  C00A  F010         	movff	??___xxtofl+2,___xxtofl@arg+2
  6592  001E98  C00B  F011         	movff	??___xxtofl+3,___xxtofl@arg+3
  6593  001E9C  D008               	goto	l5187
  6594  001E9E                     l1061:
  6595  001E9E  C004  F00E         	movff	___xxtofl@val,___xxtofl@arg
  6596  001EA2  C005  F00F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6597  001EA6  C006  F010         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6598  001EAA  C007  F011         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6599  001EAE                     l5187:
  6600  001EAE  5004               	movf	___xxtofl@val^0,w,c
  6601  001EB0  1005               	iorwf	(___xxtofl@val+1)^0,w,c
  6602  001EB2  1006               	iorwf	(___xxtofl@val+2)^0,w,c
  6603  001EB4  1007               	iorwf	(___xxtofl@val+3)^0,w,c
  6604  001EB6  A4D8               	btfss	status,2,c
  6605  001EB8  D009               	goto	l5193
  6606  001EBA  0E00               	movlw	0
  6607  001EBC  6E04               	movwf	?___xxtofl^0,c
  6608  001EBE  0E00               	movlw	0
  6609  001EC0  6E05               	movwf	(?___xxtofl+1)^0,c
  6610  001EC2  0E00               	movlw	0
  6611  001EC4  6E06               	movwf	(?___xxtofl+2)^0,c
  6612  001EC6  0E00               	movlw	0
  6613  001EC8  6E07               	movwf	(?___xxtofl+3)^0,c
  6614  001ECA  0012               	return	
  6615  001ECC                     l5193:
  6616  001ECC  0E96               	movlw	150
  6617  001ECE  6E0D               	movwf	___xxtofl@exp^0,c
  6618  001ED0  D006               	goto	l5197
  6619  001ED2                     l5195:
  6620  001ED2  2A0D               	incf	___xxtofl@exp^0,f,c
  6621  001ED4  90D8               	bcf	status,0,c
  6622  001ED6  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
  6623  001ED8  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
  6624  001EDA  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
  6625  001EDC  320E               	rrcf	___xxtofl@arg^0,f,c
  6626  001EDE                     l5197:
  6627  001EDE  0E00               	movlw	0
  6628  001EE0  140E               	andwf	___xxtofl@arg^0,w,c
  6629  001EE2  6E08               	movwf	??___xxtofl^0,c
  6630  001EE4  0E00               	movlw	0
  6631  001EE6  140F               	andwf	(___xxtofl@arg+1)^0,w,c
  6632  001EE8  6E09               	movwf	(??___xxtofl+1)^0,c
  6633  001EEA  0E00               	movlw	0
  6634  001EEC  1410               	andwf	(___xxtofl@arg+2)^0,w,c
  6635  001EEE  6E0A               	movwf	(??___xxtofl+2)^0,c
  6636  001EF0  0EFE               	movlw	254
  6637  001EF2  1411               	andwf	(___xxtofl@arg+3)^0,w,c
  6638  001EF4  6E0B               	movwf	(??___xxtofl+3)^0,c
  6639  001EF6  5008               	movf	??___xxtofl^0,w,c
  6640  001EF8  1009               	iorwf	(??___xxtofl+1)^0,w,c
  6641  001EFA  100A               	iorwf	(??___xxtofl+2)^0,w,c
  6642  001EFC  100B               	iorwf	(??___xxtofl+3)^0,w,c
  6643  001EFE  B4D8               	btfsc	status,2,c
  6644  001F00  D00D               	goto	l1068
  6645  001F02  D7E7               	goto	l5195
  6646  001F04                     l5199:
  6647  001F04  2A0D               	incf	___xxtofl@exp^0,f,c
  6648  001F06  0E01               	movlw	1
  6649  001F08  260E               	addwf	___xxtofl@arg^0,f,c
  6650  001F0A  0E00               	movlw	0
  6651  001F0C  220F               	addwfc	(___xxtofl@arg+1)^0,f,c
  6652  001F0E  2210               	addwfc	(___xxtofl@arg+2)^0,f,c
  6653  001F10  2211               	addwfc	(___xxtofl@arg+3)^0,f,c
  6654  001F12  90D8               	bcf	status,0,c
  6655  001F14  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
  6656  001F16  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
  6657  001F18  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
  6658  001F1A  320E               	rrcf	___xxtofl@arg^0,f,c
  6659  001F1C                     l1068:
  6660  001F1C  0E00               	movlw	0
  6661  001F1E  140E               	andwf	___xxtofl@arg^0,w,c
  6662  001F20  6E08               	movwf	??___xxtofl^0,c
  6663  001F22  0E00               	movlw	0
  6664  001F24  140F               	andwf	(___xxtofl@arg+1)^0,w,c
  6665  001F26  6E09               	movwf	(??___xxtofl+1)^0,c
  6666  001F28  0E00               	movlw	0
  6667  001F2A  1410               	andwf	(___xxtofl@arg+2)^0,w,c
  6668  001F2C  6E0A               	movwf	(??___xxtofl+2)^0,c
  6669  001F2E  0EFF               	movlw	255
  6670  001F30  1411               	andwf	(___xxtofl@arg+3)^0,w,c
  6671  001F32  6E0B               	movwf	(??___xxtofl+3)^0,c
  6672  001F34  5008               	movf	??___xxtofl^0,w,c
  6673  001F36  1009               	iorwf	(??___xxtofl+1)^0,w,c
  6674  001F38  100A               	iorwf	(??___xxtofl+2)^0,w,c
  6675  001F3A  100B               	iorwf	(??___xxtofl+3)^0,w,c
  6676  001F3C  B4D8               	btfsc	status,2,c
  6677  001F3E  D007               	goto	l5207
  6678  001F40  D7E1               	goto	l5199
  6679  001F42                     l5205:
  6680  001F42  060D               	decf	___xxtofl@exp^0,f,c
  6681  001F44  90D8               	bcf	status,0,c
  6682  001F46  360E               	rlcf	___xxtofl@arg^0,f,c
  6683  001F48  360F               	rlcf	(___xxtofl@arg+1)^0,f,c
  6684  001F4A  3610               	rlcf	(___xxtofl@arg+2)^0,f,c
  6685  001F4C  3611               	rlcf	(___xxtofl@arg+3)^0,f,c
  6686  001F4E                     l5207:
  6687  001F4E  BE10               	btfsc	(___xxtofl@arg+2)^0,7,c
  6688  001F50  D003               	goto	u6110
  6689  001F52  0E02               	movlw	2
  6690  001F54  600D               	cpfslt	___xxtofl@exp^0,c
  6691  001F56  D7F5               	goto	l5205
  6692  001F58                     u6110:
  6693  001F58  A00D               	btfss	___xxtofl@exp^0,0,c
  6694  001F5A  9E10               	bcf	(___xxtofl@arg+2)^0,7,c
  6695  001F5C  90D8               	bcf	status,0,c
  6696  001F5E  320D               	rrcf	___xxtofl@exp^0,f,c
  6697  001F60  C00D  F008         	movff	___xxtofl@exp,??___xxtofl
  6698  001F64  6A09               	clrf	(??___xxtofl+1)^0,c
  6699  001F66  6A0A               	clrf	(??___xxtofl+2)^0,c
  6700  001F68  6A0B               	clrf	(??___xxtofl+3)^0,c
  6701  001F6A  C008  F00B         	movff	??___xxtofl,??___xxtofl+3
  6702  001F6E  6A0A               	clrf	(??___xxtofl+2)^0,c
  6703  001F70  6A09               	clrf	(??___xxtofl+1)^0,c
  6704  001F72  6A08               	clrf	??___xxtofl^0,c
  6705  001F74  5008               	movf	??___xxtofl^0,w,c
  6706  001F76  120E               	iorwf	___xxtofl@arg^0,f,c
  6707  001F78  5009               	movf	(??___xxtofl+1)^0,w,c
  6708  001F7A  120F               	iorwf	(___xxtofl@arg+1)^0,f,c
  6709  001F7C  500A               	movf	(??___xxtofl+2)^0,w,c
  6710  001F7E  1210               	iorwf	(___xxtofl@arg+2)^0,f,c
  6711  001F80  500B               	movf	(??___xxtofl+3)^0,w,c
  6712  001F82  1211               	iorwf	(___xxtofl@arg+3)^0,f,c
  6713  001F84  500C               	movf	___xxtofl@sign^0,w,c
  6714  001F86  A4D8               	btfss	status,2,c
  6715  001F88  AE07               	btfss	(___xxtofl@val+3)^0,7,c
  6716  001F8A  D001               	goto	l5223
  6717  001F8C  8E11               	bsf	(___xxtofl@arg+3)^0,7,c
  6718  001F8E                     l5223:
  6719  001F8E  C00E  F004         	movff	___xxtofl@arg,?___xxtofl
  6720  001F92  C00F  F005         	movff	___xxtofl@arg+1,?___xxtofl+1
  6721  001F96  C010  F006         	movff	___xxtofl@arg+2,?___xxtofl+2
  6722  001F9A  C011  F007         	movff	___xxtofl@arg+3,?___xxtofl+3
  6723  001F9E  0012               	return		;funcret
  6724  001FA0                     __end_of___xxtofl:
  6725                           	callstack 0
  6726                           
  6727 ;; *************** function ___wmul *****************
  6728 ;; Defined at:
  6729 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
  6730 ;; Parameters:    Size  Location     Type
  6731 ;;  multiplier      2    3[COMRAM] unsigned int 
  6732 ;;  multiplicand    2    5[COMRAM] unsigned int 
  6733 ;; Auto vars:     Size  Location     Type
  6734 ;;  product         2    7[COMRAM] unsigned int 
  6735 ;; Return value:  Size  Location     Type
  6736 ;;                  2    3[COMRAM] unsigned int 
  6737 ;; Registers used:
  6738 ;;		wreg, status,2, status,0, prodl, prodh
  6739 ;; Tracked objects:
  6740 ;;		On entry : 0/0
  6741 ;;		On exit  : 0/0
  6742 ;;		Unchanged: 0/0
  6743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6744 ;;      Params:         4       0       0       0
  6745 ;;      Locals:         2       0       0       0
  6746 ;;      Temps:          0       0       0       0
  6747 ;;      Totals:         6       0       0       0
  6748 ;;Total ram usage:        6 bytes
  6749 ;; Hardware stack levels used: 1
  6750 ;; Hardware stack levels required when called: 1
  6751 ;; This function calls:
  6752 ;;		Nothing
  6753 ;; This function is called by:
  6754 ;;		__doprnt
  6755 ;; This function uses a non-reentrant model
  6756 ;;
  6757                           
  6758                           	psect	text17
  6759  002A54                     __ptext17:
  6760                           	callstack 0
  6761  002A54                     ___wmul:
  6762                           	callstack 27
  6763                           
  6764                           ;incstack = 0
  6765  002A54  5004               	movf	___wmul@multiplier^0,w,c
  6766  002A56  0206               	mulwf	___wmul@multiplicand^0,c
  6767  002A58  CFF3 F008          	movff	prodl,___wmul@product
  6768  002A5C  CFF4 F009          	movff	prodh,___wmul@product+1
  6769  002A60  5004               	movf	___wmul@multiplier^0,w,c
  6770  002A62  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  6771  002A64  50F3               	movf	243,w,c
  6772  002A66  2609               	addwf	(___wmul@product+1)^0,f,c
  6773  002A68  5005               	movf	(___wmul@multiplier+1)^0,w,c
  6774  002A6A  0206               	mulwf	___wmul@multiplicand^0,c
  6775  002A6C  50F3               	movf	243,w,c
  6776  002A6E  2609               	addwf	(___wmul@product+1)^0,f,c
  6777  002A70  C008  F004         	movff	___wmul@product,?___wmul
  6778  002A74  C009  F005         	movff	___wmul@product+1,?___wmul+1
  6779  002A78  0012               	return		;funcret
  6780  002A7A                     __end_of___wmul:
  6781                           	callstack 0
  6782                           
  6783 ;; *************** function ___llmod *****************
  6784 ;; Defined at:
  6785 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\llmod.c"
  6786 ;; Parameters:    Size  Location     Type
  6787 ;;  dividend        4   16[COMRAM] unsigned long 
  6788 ;;  divisor         4   20[COMRAM] unsigned long 
  6789 ;; Auto vars:     Size  Location     Type
  6790 ;;  counter         1   24[COMRAM] unsigned char 
  6791 ;; Return value:  Size  Location     Type
  6792 ;;                  4   16[COMRAM] unsigned long 
  6793 ;; Registers used:
  6794 ;;		wreg, status,2, status,0
  6795 ;; Tracked objects:
  6796 ;;		On entry : 3F/0
  6797 ;;		On exit  : 3F/0
  6798 ;;		Unchanged: 3F/0
  6799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6800 ;;      Params:         8       0       0       0
  6801 ;;      Locals:         1       0       0       0
  6802 ;;      Temps:          0       0       0       0
  6803 ;;      Totals:         9       0       0       0
  6804 ;;Total ram usage:        9 bytes
  6805 ;; Hardware stack levels used: 1
  6806 ;; Hardware stack levels required when called: 1
  6807 ;; This function calls:
  6808 ;;		Nothing
  6809 ;; This function is called by:
  6810 ;;		__doprnt
  6811 ;; This function uses a non-reentrant model
  6812 ;;
  6813                           
  6814                           	psect	text18
  6815  0027D0                     __ptext18:
  6816                           	callstack 0
  6817  0027D0                     ___llmod:
  6818                           	callstack 27
  6819                           
  6820                           ; BSR set to: 0
  6821                           
  6822                           ;incstack = 0
  6823  0027D0  5015               	movf	___llmod@divisor^0,w,c
  6824  0027D2  1016               	iorwf	(___llmod@divisor+1)^0,w,c
  6825  0027D4  1017               	iorwf	(___llmod@divisor+2)^0,w,c
  6826  0027D6  1018               	iorwf	(___llmod@divisor+3)^0,w,c
  6827  0027D8  B4D8               	btfsc	status,2,c
  6828  0027DA  D024               	goto	l826
  6829                           
  6830                           ; BSR set to: 0
  6831  0027DC  0E01               	movlw	1
  6832  0027DE  6E19               	movwf	___llmod@counter^0,c
  6833  0027E0  D006               	goto	l5171
  6834  0027E2                     l5169:
  6835                           
  6836                           ; BSR set to: 0
  6837  0027E2  90D8               	bcf	status,0,c
  6838  0027E4  3615               	rlcf	___llmod@divisor^0,f,c
  6839  0027E6  3616               	rlcf	(___llmod@divisor+1)^0,f,c
  6840  0027E8  3617               	rlcf	(___llmod@divisor+2)^0,f,c
  6841  0027EA  3618               	rlcf	(___llmod@divisor+3)^0,f,c
  6842  0027EC  2A19               	incf	___llmod@counter^0,f,c
  6843  0027EE                     l5171:
  6844                           
  6845                           ; BSR set to: 0
  6846  0027EE  AE18               	btfss	(___llmod@divisor+3)^0,7,c
  6847  0027F0  D7F8               	goto	l5169
  6848  0027F2                     u6030:
  6849                           
  6850                           ; BSR set to: 0
  6851  0027F2  5015               	movf	___llmod@divisor^0,w,c
  6852  0027F4  5C11               	subwf	___llmod@dividend^0,w,c
  6853  0027F6  5016               	movf	(___llmod@divisor+1)^0,w,c
  6854  0027F8  5812               	subwfb	(___llmod@dividend+1)^0,w,c
  6855  0027FA  5017               	movf	(___llmod@divisor+2)^0,w,c
  6856  0027FC  5813               	subwfb	(___llmod@dividend+2)^0,w,c
  6857  0027FE  5018               	movf	(___llmod@divisor+3)^0,w,c
  6858  002800  5814               	subwfb	(___llmod@dividend+3)^0,w,c
  6859  002802  A0D8               	btfss	status,0,c
  6860  002804  D008               	goto	l5177
  6861                           
  6862                           ; BSR set to: 0
  6863  002806  5015               	movf	___llmod@divisor^0,w,c
  6864  002808  5E11               	subwf	___llmod@dividend^0,f,c
  6865  00280A  5016               	movf	(___llmod@divisor+1)^0,w,c
  6866  00280C  5A12               	subwfb	(___llmod@dividend+1)^0,f,c
  6867  00280E  5017               	movf	(___llmod@divisor+2)^0,w,c
  6868  002810  5A13               	subwfb	(___llmod@dividend+2)^0,f,c
  6869  002812  5018               	movf	(___llmod@divisor+3)^0,w,c
  6870  002814  5A14               	subwfb	(___llmod@dividend+3)^0,f,c
  6871  002816                     l5177:
  6872                           
  6873                           ; BSR set to: 0
  6874  002816  90D8               	bcf	status,0,c
  6875  002818  3218               	rrcf	(___llmod@divisor+3)^0,f,c
  6876  00281A  3217               	rrcf	(___llmod@divisor+2)^0,f,c
  6877  00281C  3216               	rrcf	(___llmod@divisor+1)^0,f,c
  6878  00281E  3215               	rrcf	___llmod@divisor^0,f,c
  6879                           
  6880                           ; BSR set to: 0
  6881  002820  2E19               	decfsz	___llmod@counter^0,f,c
  6882  002822  D7E7               	goto	u6030
  6883  002824                     l826:
  6884                           
  6885                           ; BSR set to: 0
  6886  002824  C011  F011         	movff	___llmod@dividend,?___llmod
  6887  002828  C012  F012         	movff	___llmod@dividend+1,?___llmod+1
  6888  00282C  C013  F013         	movff	___llmod@dividend+2,?___llmod+2
  6889  002830  C014  F014         	movff	___llmod@dividend+3,?___llmod+3
  6890                           
  6891                           ; BSR set to: 0
  6892  002834  0012               	return		;funcret
  6893  002836                     __end_of___llmod:
  6894                           	callstack 0
  6895                           
  6896 ;; *************** function ___lldiv *****************
  6897 ;; Defined at:
  6898 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  6899 ;; Parameters:    Size  Location     Type
  6900 ;;  dividend        4    3[COMRAM] unsigned long 
  6901 ;;  divisor         4    7[COMRAM] unsigned long 
  6902 ;; Auto vars:     Size  Location     Type
  6903 ;;  quotient        4   11[COMRAM] unsigned long 
  6904 ;;  counter         1   15[COMRAM] unsigned char 
  6905 ;; Return value:  Size  Location     Type
  6906 ;;                  4    3[COMRAM] unsigned long 
  6907 ;; Registers used:
  6908 ;;		wreg, status,2, status,0
  6909 ;; Tracked objects:
  6910 ;;		On entry : 3F/0
  6911 ;;		On exit  : 3F/0
  6912 ;;		Unchanged: 3F/0
  6913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6914 ;;      Params:         8       0       0       0
  6915 ;;      Locals:         5       0       0       0
  6916 ;;      Temps:          0       0       0       0
  6917 ;;      Totals:        13       0       0       0
  6918 ;;Total ram usage:       13 bytes
  6919 ;; Hardware stack levels used: 1
  6920 ;; Hardware stack levels required when called: 1
  6921 ;; This function calls:
  6922 ;;		Nothing
  6923 ;; This function is called by:
  6924 ;;		__doprnt
  6925 ;; This function uses a non-reentrant model
  6926 ;;
  6927                           
  6928                           	psect	text19
  6929  00266A                     __ptext19:
  6930                           	callstack 0
  6931  00266A                     ___lldiv:
  6932                           	callstack 27
  6933                           
  6934                           ; BSR set to: 0
  6935                           
  6936                           ; BSR set to: 0
  6937                           ;incstack = 0
  6938  00266A  0E00               	movlw	0
  6939  00266C  6E0C               	movwf	___lldiv@quotient^0,c
  6940  00266E  0E00               	movlw	0
  6941  002670  6E0D               	movwf	(___lldiv@quotient+1)^0,c
  6942  002672  0E00               	movlw	0
  6943  002674  6E0E               	movwf	(___lldiv@quotient+2)^0,c
  6944  002676  0E00               	movlw	0
  6945  002678  6E0F               	movwf	(___lldiv@quotient+3)^0,c
  6946                           
  6947                           ; BSR set to: 0
  6948  00267A  5008               	movf	___lldiv@divisor^0,w,c
  6949  00267C  1009               	iorwf	(___lldiv@divisor+1)^0,w,c
  6950  00267E  100A               	iorwf	(___lldiv@divisor+2)^0,w,c
  6951  002680  100B               	iorwf	(___lldiv@divisor+3)^0,w,c
  6952  002682  B4D8               	btfsc	status,2,c
  6953  002684  D02A               	goto	l445
  6954                           
  6955                           ; BSR set to: 0
  6956  002686  0E01               	movlw	1
  6957  002688  6E10               	movwf	___lldiv@counter^0,c
  6958  00268A  D006               	goto	l5055
  6959  00268C                     l5053:
  6960                           
  6961                           ; BSR set to: 0
  6962  00268C  90D8               	bcf	status,0,c
  6963  00268E  3608               	rlcf	___lldiv@divisor^0,f,c
  6964  002690  3609               	rlcf	(___lldiv@divisor+1)^0,f,c
  6965  002692  360A               	rlcf	(___lldiv@divisor+2)^0,f,c
  6966  002694  360B               	rlcf	(___lldiv@divisor+3)^0,f,c
  6967  002696  2A10               	incf	___lldiv@counter^0,f,c
  6968  002698                     l5055:
  6969                           
  6970                           ; BSR set to: 0
  6971  002698  AE0B               	btfss	(___lldiv@divisor+3)^0,7,c
  6972  00269A  D7F8               	goto	l5053
  6973  00269C                     u5840:
  6974                           
  6975                           ; BSR set to: 0
  6976  00269C  90D8               	bcf	status,0,c
  6977  00269E  360C               	rlcf	___lldiv@quotient^0,f,c
  6978  0026A0  360D               	rlcf	(___lldiv@quotient+1)^0,f,c
  6979  0026A2  360E               	rlcf	(___lldiv@quotient+2)^0,f,c
  6980  0026A4  360F               	rlcf	(___lldiv@quotient+3)^0,f,c
  6981                           
  6982                           ; BSR set to: 0
  6983  0026A6  5008               	movf	___lldiv@divisor^0,w,c
  6984  0026A8  5C04               	subwf	___lldiv@dividend^0,w,c
  6985  0026AA  5009               	movf	(___lldiv@divisor+1)^0,w,c
  6986  0026AC  5805               	subwfb	(___lldiv@dividend+1)^0,w,c
  6987  0026AE  500A               	movf	(___lldiv@divisor+2)^0,w,c
  6988  0026B0  5806               	subwfb	(___lldiv@dividend+2)^0,w,c
  6989  0026B2  500B               	movf	(___lldiv@divisor+3)^0,w,c
  6990  0026B4  5807               	subwfb	(___lldiv@dividend+3)^0,w,c
  6991  0026B6  A0D8               	btfss	status,0,c
  6992  0026B8  D009               	goto	l5065
  6993                           
  6994                           ; BSR set to: 0
  6995  0026BA  5008               	movf	___lldiv@divisor^0,w,c
  6996  0026BC  5E04               	subwf	___lldiv@dividend^0,f,c
  6997  0026BE  5009               	movf	(___lldiv@divisor+1)^0,w,c
  6998  0026C0  5A05               	subwfb	(___lldiv@dividend+1)^0,f,c
  6999  0026C2  500A               	movf	(___lldiv@divisor+2)^0,w,c
  7000  0026C4  5A06               	subwfb	(___lldiv@dividend+2)^0,f,c
  7001  0026C6  500B               	movf	(___lldiv@divisor+3)^0,w,c
  7002  0026C8  5A07               	subwfb	(___lldiv@dividend+3)^0,f,c
  7003                           
  7004                           ; BSR set to: 0
  7005  0026CA  800C               	bsf	___lldiv@quotient^0,0,c
  7006  0026CC                     l5065:
  7007                           
  7008                           ; BSR set to: 0
  7009  0026CC  90D8               	bcf	status,0,c
  7010  0026CE  320B               	rrcf	(___lldiv@divisor+3)^0,f,c
  7011  0026D0  320A               	rrcf	(___lldiv@divisor+2)^0,f,c
  7012  0026D2  3209               	rrcf	(___lldiv@divisor+1)^0,f,c
  7013  0026D4  3208               	rrcf	___lldiv@divisor^0,f,c
  7014                           
  7015                           ; BSR set to: 0
  7016  0026D6  2E10               	decfsz	___lldiv@counter^0,f,c
  7017  0026D8  D7E1               	goto	u5840
  7018  0026DA                     l445:
  7019                           
  7020                           ; BSR set to: 0
  7021  0026DA  C00C  F004         	movff	___lldiv@quotient,?___lldiv
  7022  0026DE  C00D  F005         	movff	___lldiv@quotient+1,?___lldiv+1
  7023  0026E2  C00E  F006         	movff	___lldiv@quotient+2,?___lldiv+2
  7024  0026E6  C00F  F007         	movff	___lldiv@quotient+3,?___lldiv+3
  7025                           
  7026                           ; BSR set to: 0
  7027  0026EA  0012               	return		;funcret
  7028  0026EC                     __end_of___lldiv:
  7029                           	callstack 0
  7030                           
  7031 ;; *************** function ___fltol *****************
  7032 ;; Defined at:
  7033 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fltol.c"
  7034 ;; Parameters:    Size  Location     Type
  7035 ;;  f1              4   51[COMRAM] unsigned long 
  7036 ;; Auto vars:     Size  Location     Type
  7037 ;;  exp1            1   60[COMRAM] unsigned char 
  7038 ;;  sign1           1   59[COMRAM] unsigned char 
  7039 ;; Return value:  Size  Location     Type
  7040 ;;                  4   51[COMRAM] long 
  7041 ;; Registers used:
  7042 ;;		wreg, status,2, status,0
  7043 ;; Tracked objects:
  7044 ;;		On entry : 0/0
  7045 ;;		On exit  : 0/0
  7046 ;;		Unchanged: 0/0
  7047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7048 ;;      Params:         4       0       0       0
  7049 ;;      Locals:         2       0       0       0
  7050 ;;      Temps:          4       0       0       0
  7051 ;;      Totals:        10       0       0       0
  7052 ;;Total ram usage:       10 bytes
  7053 ;; Hardware stack levels used: 1
  7054 ;; Hardware stack levels required when called: 1
  7055 ;; This function calls:
  7056 ;;		Nothing
  7057 ;; This function is called by:
  7058 ;;		__doprnt
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           
  7062                           	psect	text20
  7063  002388                     __ptext20:
  7064                           	callstack 0
  7065  002388                     ___fltol:
  7066                           	callstack 27
  7067                           
  7068                           ; BSR set to: 0
  7069                           ;incstack = 0
  7070  002388  3436               	rlcf	(___fltol@f1+2)^0,w,c
  7071  00238A  3437               	rlcf	(___fltol@f1+3)^0,w,c
  7072  00238C  6E3D               	movwf	___fltol@exp1^0,c
  7073  00238E  503D               	movf	___fltol@exp1^0,w,c
  7074  002390  A4D8               	btfss	status,2,c
  7075  002392  D009               	goto	l5127
  7076  002394                     u5950:
  7077  002394  0E00               	movlw	0
  7078  002396  6E34               	movwf	?___fltol^0,c
  7079  002398  0E00               	movlw	0
  7080  00239A  6E35               	movwf	(?___fltol+1)^0,c
  7081  00239C  0E00               	movlw	0
  7082  00239E  6E36               	movwf	(?___fltol+2)^0,c
  7083  0023A0  0E00               	movlw	0
  7084  0023A2  6E37               	movwf	(?___fltol+3)^0,c
  7085  0023A4  0012               	return	
  7086  0023A6                     l5127:
  7087  0023A6  C034  F038         	movff	___fltol@f1,??___fltol
  7088  0023AA  C035  F039         	movff	___fltol@f1+1,??___fltol+1
  7089  0023AE  C036  F03A         	movff	___fltol@f1+2,??___fltol+2
  7090  0023B2  C037  F03B         	movff	___fltol@f1+3,??___fltol+3
  7091  0023B6  0E20               	movlw	32
  7092  0023B8  D005               	goto	u5960
  7093  0023BA                     u5965:
  7094  0023BA  90D8               	bcf	status,0,c
  7095  0023BC  323B               	rrcf	(??___fltol+3)^0,f,c
  7096  0023BE  323A               	rrcf	(??___fltol+2)^0,f,c
  7097  0023C0  3239               	rrcf	(??___fltol+1)^0,f,c
  7098  0023C2  3238               	rrcf	??___fltol^0,f,c
  7099  0023C4                     u5960:
  7100  0023C4  2EE8               	decfsz	wreg,f,c
  7101  0023C6  D7F9               	goto	u5965
  7102  0023C8  5038               	movf	??___fltol^0,w,c
  7103  0023CA  6E3C               	movwf	___fltol@sign1^0,c
  7104  0023CC  8E36               	bsf	(___fltol@f1+2)^0,7,c
  7105  0023CE  0EFF               	movlw	255
  7106  0023D0  1634               	andwf	___fltol@f1^0,f,c
  7107  0023D2  0EFF               	movlw	255
  7108  0023D4  1635               	andwf	(___fltol@f1+1)^0,f,c
  7109  0023D6  0EFF               	movlw	255
  7110  0023D8  1636               	andwf	(___fltol@f1+2)^0,f,c
  7111  0023DA  0E00               	movlw	0
  7112  0023DC  1637               	andwf	(___fltol@f1+3)^0,f,c
  7113  0023DE  0E96               	movlw	150
  7114  0023E0  5E3D               	subwf	___fltol@exp1^0,f,c
  7115  0023E2  AE3D               	btfss	___fltol@exp1^0,7,c
  7116  0023E4  D00D               	goto	l5147
  7117  0023E6  503D               	movf	___fltol@exp1^0,w,c
  7118  0023E8  0A80               	xorlw	128
  7119  0023EA  0F97               	addlw	151
  7120  0023EC  A0D8               	btfss	status,0,c
  7121  0023EE  D7D2               	goto	u5950
  7122  0023F0                     l5143:
  7123  0023F0  90D8               	bcf	status,0,c
  7124  0023F2  3237               	rrcf	(___fltol@f1+3)^0,f,c
  7125  0023F4  3236               	rrcf	(___fltol@f1+2)^0,f,c
  7126  0023F6  3235               	rrcf	(___fltol@f1+1)^0,f,c
  7127  0023F8  3234               	rrcf	___fltol@f1^0,f,c
  7128  0023FA  3E3D               	incfsz	___fltol@exp1^0,f,c
  7129  0023FC  D7F9               	goto	l5143
  7130  0023FE  D00D               	goto	u6000
  7131  002400                     l5147:
  7132  002400  0E1F               	movlw	31
  7133  002402  643D               	cpfsgt	___fltol@exp1^0,c
  7134  002404  D007               	goto	l5155
  7135  002406  D7C6               	goto	u5950
  7136  002408                     l5153:
  7137  002408  90D8               	bcf	status,0,c
  7138  00240A  3634               	rlcf	___fltol@f1^0,f,c
  7139  00240C  3635               	rlcf	(___fltol@f1+1)^0,f,c
  7140  00240E  3636               	rlcf	(___fltol@f1+2)^0,f,c
  7141  002410  3637               	rlcf	(___fltol@f1+3)^0,f,c
  7142  002412  063D               	decf	___fltol@exp1^0,f,c
  7143  002414                     l5155:
  7144  002414  503D               	movf	___fltol@exp1^0,w,c
  7145  002416  A4D8               	btfss	status,2,c
  7146  002418  D7F7               	goto	l5153
  7147  00241A                     u6000:
  7148  00241A  503C               	movf	___fltol@sign1^0,w,c
  7149  00241C  B4D8               	btfsc	status,2,c
  7150  00241E  D008               	goto	l5161
  7151  002420  1E37               	comf	(___fltol@f1+3)^0,f,c
  7152  002422  1E36               	comf	(___fltol@f1+2)^0,f,c
  7153  002424  1E35               	comf	(___fltol@f1+1)^0,f,c
  7154  002426  6C34               	negf	___fltol@f1^0,c
  7155  002428  0E00               	movlw	0
  7156  00242A  2235               	addwfc	(___fltol@f1+1)^0,f,c
  7157  00242C  2236               	addwfc	(___fltol@f1+2)^0,f,c
  7158  00242E  2237               	addwfc	(___fltol@f1+3)^0,f,c
  7159  002430                     l5161:
  7160  002430  C034  F034         	movff	___fltol@f1,?___fltol
  7161  002434  C035  F035         	movff	___fltol@f1+1,?___fltol+1
  7162  002438  C036  F036         	movff	___fltol@f1+2,?___fltol+2
  7163  00243C  C037  F037         	movff	___fltol@f1+3,?___fltol+3
  7164  002440  0012               	return		;funcret
  7165  002442                     __end_of___fltol:
  7166                           	callstack 0
  7167                           
  7168 ;; *************** function ___flsub *****************
  7169 ;; Defined at:
  7170 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcadd.c"
  7171 ;; Parameters:    Size  Location     Type
  7172 ;;  b               4   73[COMRAM] long 
  7173 ;;  a               4   77[COMRAM] long 
  7174 ;; Auto vars:     Size  Location     Type
  7175 ;;		None
  7176 ;; Return value:  Size  Location     Type
  7177 ;;                  4   73[COMRAM] long 
  7178 ;; Registers used:
  7179 ;;		wreg, status,2, status,0, cstack
  7180 ;; Tracked objects:
  7181 ;;		On entry : 0/0
  7182 ;;		On exit  : 0/0
  7183 ;;		Unchanged: 0/0
  7184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7185 ;;      Params:         8       0       0       0
  7186 ;;      Locals:         0       0       0       0
  7187 ;;      Temps:          0       0       0       0
  7188 ;;      Totals:         8       0       0       0
  7189 ;;Total ram usage:        8 bytes
  7190 ;; Hardware stack levels used: 1
  7191 ;; Hardware stack levels required when called: 2
  7192 ;; This function calls:
  7193 ;;		___fladd
  7194 ;; This function is called by:
  7195 ;;		__doprnt
  7196 ;; This function uses a non-reentrant model
  7197 ;;
  7198                           
  7199                           	psect	text21
  7200  0028EA                     __ptext21:
  7201                           	callstack 0
  7202  0028EA                     ___flsub:
  7203                           	callstack 26
  7204                           
  7205                           ;incstack = 0
  7206  0028EA  0E00               	movlw	0
  7207  0028EC  1A4E               	xorwf	___flsub@a^0,f,c
  7208  0028EE  0E00               	movlw	0
  7209  0028F0  1A4F               	xorwf	(___flsub@a+1)^0,f,c
  7210  0028F2  0E00               	movlw	0
  7211  0028F4  1A50               	xorwf	(___flsub@a+2)^0,f,c
  7212  0028F6  0E80               	movlw	128
  7213  0028F8  1A51               	xorwf	(___flsub@a+3)^0,f,c
  7214  0028FA  C04A  F03A         	movff	___flsub@b,___fladd@b
  7215  0028FE  C04B  F03B         	movff	___flsub@b+1,___fladd@b+1
  7216  002902  C04C  F03C         	movff	___flsub@b+2,___fladd@b+2
  7217  002906  C04D  F03D         	movff	___flsub@b+3,___fladd@b+3
  7218  00290A  C04E  F03E         	movff	___flsub@a,___fladd@a
  7219  00290E  C04F  F03F         	movff	___flsub@a+1,___fladd@a+1
  7220  002912  C050  F040         	movff	___flsub@a+2,___fladd@a+2
  7221  002916  C051  F041         	movff	___flsub@a+3,___fladd@a+3
  7222  00291A  EC75  F00C         	call	___fladd	;wreg free
  7223  00291E  C03A  F04A         	movff	?___fladd,?___flsub
  7224  002922  C03B  F04B         	movff	?___fladd+1,?___flsub+1
  7225  002926  C03C  F04C         	movff	?___fladd+2,?___flsub+2
  7226  00292A  C03D  F04D         	movff	?___fladd+3,?___flsub+3
  7227  00292E  0012               	return		;funcret
  7228  002930                     __end_of___flsub:
  7229                           	callstack 0
  7230                           
  7231 ;; *************** function ___fladd *****************
  7232 ;; Defined at:
  7233 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcadd.c"
  7234 ;; Parameters:    Size  Location     Type
  7235 ;;  b               4   57[COMRAM] long 
  7236 ;;  a               4   61[COMRAM] long 
  7237 ;; Auto vars:     Size  Location     Type
  7238 ;;  grs             1   72[COMRAM] unsigned char 
  7239 ;;  bexp            1   71[COMRAM] unsigned char 
  7240 ;;  aexp            1   70[COMRAM] unsigned char 
  7241 ;;  signs           1   69[COMRAM] unsigned char 
  7242 ;; Return value:  Size  Location     Type
  7243 ;;                  4   57[COMRAM] unsigned char 
  7244 ;; Registers used:
  7245 ;;		wreg, status,2, status,0
  7246 ;; Tracked objects:
  7247 ;;		On entry : 0/0
  7248 ;;		On exit  : 0/0
  7249 ;;		Unchanged: 0/0
  7250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7251 ;;      Params:         8       0       0       0
  7252 ;;      Locals:         4       0       0       0
  7253 ;;      Temps:          4       0       0       0
  7254 ;;      Totals:        16       0       0       0
  7255 ;;Total ram usage:       16 bytes
  7256 ;; Hardware stack levels used: 1
  7257 ;; Hardware stack levels required when called: 1
  7258 ;; This function calls:
  7259 ;;		Nothing
  7260 ;; This function is called by:
  7261 ;;		___flsub
  7262 ;;		__doprnt
  7263 ;; This function uses a non-reentrant model
  7264 ;;
  7265                           
  7266                           	psect	text22
  7267  0018EA                     __ptext22:
  7268                           	callstack 0
  7269  0018EA                     ___fladd:
  7270                           	callstack 26
  7271                           
  7272                           ;incstack = 0
  7273  0018EA  503D               	movf	(___fladd@b+3)^0,w,c
  7274  0018EC  0B80               	andlw	128
  7275  0018EE  6E46               	movwf	___fladd@signs^0,c
  7276  0018F0  503D               	movf	(___fladd@b+3)^0,w,c
  7277  0018F2  243D               	addwf	(___fladd@b+3)^0,w,c
  7278  0018F4  6E48               	movwf	___fladd@bexp^0,c
  7279  0018F6  BE3C               	btfsc	(___fladd@b+2)^0,7,c
  7280  0018F8  8048               	bsf	___fladd@bexp^0,0,c
  7281  0018FA  5048               	movf	___fladd@bexp^0,w,c
  7282  0018FC  B4D8               	btfsc	status,2,c
  7283  0018FE  D00D               	goto	l4599
  7284  001900  2848               	incf	___fladd@bexp^0,w,c
  7285  001902  A4D8               	btfss	status,2,c
  7286  001904  D008               	goto	l4595
  7287  001906  0E00               	movlw	0
  7288  001908  6E3A               	movwf	___fladd@b^0,c
  7289  00190A  0E00               	movlw	0
  7290  00190C  6E3B               	movwf	(___fladd@b+1)^0,c
  7291  00190E  0E00               	movlw	0
  7292  001910  6E3C               	movwf	(___fladd@b+2)^0,c
  7293  001912  0E00               	movlw	0
  7294  001914  6E3D               	movwf	(___fladd@b+3)^0,c
  7295  001916                     l4595:
  7296  001916  8E3C               	bsf	(___fladd@b+2)^0,7,c
  7297  001918  D006               	goto	L4
  7298  00191A                     l4599:
  7299  00191A  0E00               	movlw	0
  7300  00191C  6E3A               	movwf	___fladd@b^0,c
  7301  00191E  0E00               	movlw	0
  7302  001920  6E3B               	movwf	(___fladd@b+1)^0,c
  7303  001922  0E00               	movlw	0
  7304  001924  6E3C               	movwf	(___fladd@b+2)^0,c
  7305  001926                     L4:
  7306  001926  0E00               	movlw	0
  7307  001928  6E3D               	movwf	(___fladd@b+3)^0,c
  7308  00192A  5041               	movf	(___fladd@a+3)^0,w,c
  7309  00192C  0B80               	andlw	128
  7310  00192E  6E47               	movwf	___fladd@aexp^0,c
  7311  001930  5046               	movf	___fladd@signs^0,w,c
  7312  001932  1847               	xorwf	___fladd@aexp^0,w,c
  7313  001934  A4D8               	btfss	status,2,c
  7314  001936  8C46               	bsf	___fladd@signs^0,6,c
  7315  001938  5041               	movf	(___fladd@a+3)^0,w,c
  7316  00193A  2441               	addwf	(___fladd@a+3)^0,w,c
  7317  00193C  6E47               	movwf	___fladd@aexp^0,c
  7318  00193E  BE40               	btfsc	(___fladd@a+2)^0,7,c
  7319  001940  8047               	bsf	___fladd@aexp^0,0,c
  7320  001942  5047               	movf	___fladd@aexp^0,w,c
  7321  001944  B4D8               	btfsc	status,2,c
  7322  001946  D00D               	goto	l4623
  7323  001948  2847               	incf	___fladd@aexp^0,w,c
  7324  00194A  A4D8               	btfss	status,2,c
  7325  00194C  D008               	goto	l4619
  7326  00194E  0E00               	movlw	0
  7327  001950  6E3E               	movwf	___fladd@a^0,c
  7328  001952  0E00               	movlw	0
  7329  001954  6E3F               	movwf	(___fladd@a+1)^0,c
  7330  001956  0E00               	movlw	0
  7331  001958  6E40               	movwf	(___fladd@a+2)^0,c
  7332  00195A  0E00               	movlw	0
  7333  00195C  6E41               	movwf	(___fladd@a+3)^0,c
  7334  00195E                     l4619:
  7335  00195E  8E40               	bsf	(___fladd@a+2)^0,7,c
  7336  001960  D006               	goto	L5
  7337  001962                     l4623:
  7338  001962  0E00               	movlw	0
  7339  001964  6E3E               	movwf	___fladd@a^0,c
  7340  001966  0E00               	movlw	0
  7341  001968  6E3F               	movwf	(___fladd@a+1)^0,c
  7342  00196A  0E00               	movlw	0
  7343  00196C  6E40               	movwf	(___fladd@a+2)^0,c
  7344  00196E                     L5:
  7345  00196E  0E00               	movlw	0
  7346  001970  6E41               	movwf	(___fladd@a+3)^0,c
  7347  001972  5048               	movf	___fladd@bexp^0,w,c
  7348  001974  5C47               	subwf	___fladd@aexp^0,w,c
  7349  001976  B0D8               	btfsc	status,0,c
  7350  001978  D022               	goto	l4661
  7351  00197A  AC46               	btfss	___fladd@signs^0,6,c
  7352  00197C  D002               	goto	l4631
  7353  00197E  0E80               	movlw	128
  7354  001980  1A46               	xorwf	___fladd@signs^0,f,c
  7355  001982                     l4631:
  7356  001982  C048  F049         	movff	___fladd@bexp,___fladd@grs
  7357  001986  C047  F048         	movff	___fladd@aexp,___fladd@bexp
  7358  00198A  C049  F047         	movff	___fladd@grs,___fladd@aexp
  7359  00198E  C03A  F049         	movff	___fladd@b,___fladd@grs
  7360  001992  C03E  F03A         	movff	___fladd@a,___fladd@b
  7361  001996  C049  F03E         	movff	___fladd@grs,___fladd@a
  7362  00199A  C03B  F049         	movff	___fladd@b+1,___fladd@grs
  7363  00199E  C03F  F03B         	movff	___fladd@a+1,___fladd@b+1
  7364  0019A2  C049  F03F         	movff	___fladd@grs,___fladd@a+1
  7365  0019A6  C03C  F049         	movff	___fladd@b+2,___fladd@grs
  7366  0019AA  C040  F03C         	movff	___fladd@a+2,___fladd@b+2
  7367  0019AE  C049  F040         	movff	___fladd@grs,___fladd@a+2
  7368  0019B2  C03D  F049         	movff	___fladd@b+3,___fladd@grs
  7369  0019B6  C041  F03D         	movff	___fladd@a+3,___fladd@b+3
  7370  0019BA  C049  F041         	movff	___fladd@grs,___fladd@a+3
  7371  0019BE                     l4661:
  7372  0019BE  0E00               	movlw	0
  7373  0019C0  6E49               	movwf	___fladd@grs^0,c
  7374  0019C2  5048               	movf	___fladd@bexp^0,w,c
  7375  0019C4  C047  F042         	movff	___fladd@aexp,??___fladd
  7376  0019C8  6A43               	clrf	(??___fladd+1)^0,c
  7377  0019CA  5E42               	subwf	??___fladd^0,f,c
  7378  0019CC  0E00               	movlw	0
  7379  0019CE  5A43               	subwfb	(??___fladd+1)^0,f,c
  7380  0019D0  BE43               	btfsc	(??___fladd+1)^0,7,c
  7381  0019D2  D02C               	goto	l935
  7382  0019D4  5043               	movf	(??___fladd+1)^0,w,c
  7383  0019D6  E104               	bnz	u5180
  7384  0019D8  0E1A               	movlw	26
  7385  0019DA  5C42               	subwf	??___fladd^0,w,c
  7386  0019DC  A0D8               	btfss	status,0,c
  7387  0019DE  D026               	goto	l935
  7388  0019E0                     u5180:
  7389  0019E0  503A               	movf	___fladd@b^0,w,c
  7390  0019E2  103B               	iorwf	(___fladd@b+1)^0,w,c
  7391  0019E4  103C               	iorwf	(___fladd@b+2)^0,w,c
  7392  0019E6  103D               	iorwf	(___fladd@b+3)^0,w,c
  7393  0019E8  B4D8               	btfsc	status,2,c
  7394  0019EA  D002               	goto	u5190
  7395  0019EC  0E01               	movlw	1
  7396  0019EE  D001               	goto	u5200
  7397  0019F0                     u5190:
  7398  0019F0  0E00               	movlw	0
  7399  0019F2                     u5200:
  7400  0019F2  6E49               	movwf	___fladd@grs^0,c
  7401  0019F4  0E00               	movlw	0
  7402  0019F6  6E3A               	movwf	___fladd@b^0,c
  7403  0019F8  0E00               	movlw	0
  7404  0019FA  6E3B               	movwf	(___fladd@b+1)^0,c
  7405  0019FC  0E00               	movlw	0
  7406  0019FE  6E3C               	movwf	(___fladd@b+2)^0,c
  7407  001A00  0E00               	movlw	0
  7408  001A02  6E3D               	movwf	(___fladd@b+3)^0,c
  7409  001A04  C047  F048         	movff	___fladd@aexp,___fladd@bexp
  7410  001A08  D015               	goto	u5230
  7411  001A0A                     l936:
  7412  001A0A  A049               	btfss	___fladd@grs^0,0,c
  7413  001A0C  D005               	goto	l4673
  7414  001A0E  90D8               	bcf	status,0,c
  7415  001A10  3049               	rrcf	___fladd@grs^0,w,c
  7416  001A12  0901               	iorlw	1
  7417  001A14  6E49               	movwf	___fladd@grs^0,c
  7418  001A16  D002               	goto	l4675
  7419  001A18                     l4673:
  7420  001A18  90D8               	bcf	status,0,c
  7421  001A1A  3249               	rrcf	___fladd@grs^0,f,c
  7422  001A1C                     l4675:
  7423  001A1C  B03A               	btfsc	___fladd@b^0,0,c
  7424  001A1E  8E49               	bsf	___fladd@grs^0,7,c
  7425  001A20  343D               	rlcf	(___fladd@b+3)^0,w,c
  7426  001A22  323D               	rrcf	(___fladd@b+3)^0,f,c
  7427  001A24  323C               	rrcf	(___fladd@b+2)^0,f,c
  7428  001A26  323B               	rrcf	(___fladd@b+1)^0,f,c
  7429  001A28  323A               	rrcf	___fladd@b^0,f,c
  7430  001A2A  2A48               	incf	___fladd@bexp^0,f,c
  7431  001A2C                     l935:
  7432  001A2C  5047               	movf	___fladd@aexp^0,w,c
  7433  001A2E  5C48               	subwf	___fladd@bexp^0,w,c
  7434  001A30  A0D8               	btfss	status,0,c
  7435  001A32  D7EB               	goto	l936
  7436  001A34                     u5230:
  7437  001A34  BC46               	btfsc	___fladd@signs^0,6,c
  7438  001A36  D028               	goto	l4707
  7439  001A38  5048               	movf	___fladd@bexp^0,w,c
  7440  001A3A  A4D8               	btfss	status,2,c
  7441  001A3C  D009               	goto	l4689
  7442  001A3E  0E00               	movlw	0
  7443  001A40  6E3A               	movwf	?___fladd^0,c
  7444  001A42  0E00               	movlw	0
  7445  001A44  6E3B               	movwf	(?___fladd+1)^0,c
  7446  001A46  0E00               	movlw	0
  7447  001A48  6E3C               	movwf	(?___fladd+2)^0,c
  7448  001A4A  0E00               	movlw	0
  7449  001A4C  6E3D               	movwf	(?___fladd+3)^0,c
  7450  001A4E  0012               	return	
  7451  001A50                     l4689:
  7452  001A50  503E               	movf	___fladd@a^0,w,c
  7453  001A52  263A               	addwf	___fladd@b^0,f,c
  7454  001A54  503F               	movf	(___fladd@a+1)^0,w,c
  7455  001A56  223B               	addwfc	(___fladd@b+1)^0,f,c
  7456  001A58  5040               	movf	(___fladd@a+2)^0,w,c
  7457  001A5A  223C               	addwfc	(___fladd@b+2)^0,f,c
  7458  001A5C  5041               	movf	(___fladd@a+3)^0,w,c
  7459  001A5E  223D               	addwfc	(___fladd@b+3)^0,f,c
  7460  001A60  A03D               	btfss	(___fladd@b+3)^0,0,c
  7461  001A62  D071               	goto	u5360
  7462  001A64  A049               	btfss	___fladd@grs^0,0,c
  7463  001A66  D005               	goto	l4697
  7464  001A68  90D8               	bcf	status,0,c
  7465  001A6A  3049               	rrcf	___fladd@grs^0,w,c
  7466  001A6C  0901               	iorlw	1
  7467  001A6E  6E49               	movwf	___fladd@grs^0,c
  7468  001A70  D002               	goto	l4699
  7469  001A72                     l4697:
  7470  001A72  90D8               	bcf	status,0,c
  7471  001A74  3249               	rrcf	___fladd@grs^0,f,c
  7472  001A76                     l4699:
  7473  001A76  B03A               	btfsc	___fladd@b^0,0,c
  7474  001A78  8E49               	bsf	___fladd@grs^0,7,c
  7475  001A7A  343D               	rlcf	(___fladd@b+3)^0,w,c
  7476  001A7C  323D               	rrcf	(___fladd@b+3)^0,f,c
  7477  001A7E  323C               	rrcf	(___fladd@b+2)^0,f,c
  7478  001A80  323B               	rrcf	(___fladd@b+1)^0,f,c
  7479  001A82  323A               	rrcf	___fladd@b^0,f,c
  7480  001A84  2A48               	incf	___fladd@bexp^0,f,c
  7481  001A86  D05F               	goto	u5360
  7482  001A88                     l4707:
  7483  001A88  503E               	movf	___fladd@a^0,w,c
  7484  001A8A  5C3A               	subwf	___fladd@b^0,w,c
  7485  001A8C  503F               	movf	(___fladd@a+1)^0,w,c
  7486  001A8E  583B               	subwfb	(___fladd@b+1)^0,w,c
  7487  001A90  5040               	movf	(___fladd@a+2)^0,w,c
  7488  001A92  583C               	subwfb	(___fladd@b+2)^0,w,c
  7489  001A94  503D               	movf	(___fladd@b+3)^0,w,c
  7490  001A96  0A80               	xorlw	128
  7491  001A98  6E42               	movwf	??___fladd^0,c
  7492  001A9A  5041               	movf	(___fladd@a+3)^0,w,c
  7493  001A9C  0A80               	xorlw	128
  7494  001A9E  5842               	subwfb	??___fladd^0,w,c
  7495  001AA0  B0D8               	btfsc	status,0,c
  7496  001AA2  D025               	goto	l4717
  7497  001AA4  503A               	movf	___fladd@b^0,w,c
  7498  001AA6  5C3E               	subwf	___fladd@a^0,w,c
  7499  001AA8  6E42               	movwf	??___fladd^0,c
  7500  001AAA  503B               	movf	(___fladd@b+1)^0,w,c
  7501  001AAC  583F               	subwfb	(___fladd@a+1)^0,w,c
  7502  001AAE  6E43               	movwf	(??___fladd+1)^0,c
  7503  001AB0  503C               	movf	(___fladd@b+2)^0,w,c
  7504  001AB2  5840               	subwfb	(___fladd@a+2)^0,w,c
  7505  001AB4  6E44               	movwf	(??___fladd+2)^0,c
  7506  001AB6  503D               	movf	(___fladd@b+3)^0,w,c
  7507  001AB8  5841               	subwfb	(___fladd@a+3)^0,w,c
  7508  001ABA  6E45               	movwf	(??___fladd+3)^0,c
  7509  001ABC  0EFF               	movlw	255
  7510  001ABE  2442               	addwf	??___fladd^0,w,c
  7511  001AC0  6E3A               	movwf	___fladd@b^0,c
  7512  001AC2  0EFF               	movlw	255
  7513  001AC4  2043               	addwfc	(??___fladd+1)^0,w,c
  7514  001AC6  6E3B               	movwf	(___fladd@b+1)^0,c
  7515  001AC8  0EFF               	movlw	255
  7516  001ACA  2044               	addwfc	(??___fladd+2)^0,w,c
  7517  001ACC  6E3C               	movwf	(___fladd@b+2)^0,c
  7518  001ACE  0EFF               	movlw	255
  7519  001AD0  2045               	addwfc	(??___fladd+3)^0,w,c
  7520  001AD2  6E3D               	movwf	(___fladd@b+3)^0,c
  7521  001AD4  0E80               	movlw	128
  7522  001AD6  1A46               	xorwf	___fladd@signs^0,f,c
  7523  001AD8  6C49               	negf	___fladd@grs^0,c
  7524  001ADA  5049               	movf	___fladd@grs^0,w,c
  7525  001ADC  A4D8               	btfss	status,2,c
  7526  001ADE  D00F               	goto	l951
  7527  001AE0  0E01               	movlw	1
  7528  001AE2  263A               	addwf	___fladd@b^0,f,c
  7529  001AE4  0E00               	movlw	0
  7530  001AE6  223B               	addwfc	(___fladd@b+1)^0,f,c
  7531  001AE8  223C               	addwfc	(___fladd@b+2)^0,f,c
  7532  001AEA  223D               	addwfc	(___fladd@b+3)^0,f,c
  7533  001AEC  D008               	goto	l951
  7534  001AEE                     l4717:
  7535  001AEE  503E               	movf	___fladd@a^0,w,c
  7536  001AF0  5E3A               	subwf	___fladd@b^0,f,c
  7537  001AF2  503F               	movf	(___fladd@a+1)^0,w,c
  7538  001AF4  5A3B               	subwfb	(___fladd@b+1)^0,f,c
  7539  001AF6  5040               	movf	(___fladd@a+2)^0,w,c
  7540  001AF8  5A3C               	subwfb	(___fladd@b+2)^0,f,c
  7541  001AFA  5041               	movf	(___fladd@a+3)^0,w,c
  7542  001AFC  5A3D               	subwfb	(___fladd@b+3)^0,f,c
  7543  001AFE                     l951:
  7544  001AFE  503A               	movf	___fladd@b^0,w,c
  7545  001B00  103B               	iorwf	(___fladd@b+1)^0,w,c
  7546  001B02  103C               	iorwf	(___fladd@b+2)^0,w,c
  7547  001B04  103D               	iorwf	(___fladd@b+3)^0,w,c
  7548  001B06  A4D8               	btfss	status,2,c
  7549  001B08  D01C               	goto	l4741
  7550  001B0A  5049               	movf	___fladd@grs^0,w,c
  7551  001B0C  A4D8               	btfss	status,2,c
  7552  001B0E  D019               	goto	l4741
  7553  001B10  0E00               	movlw	0
  7554  001B12  6E3A               	movwf	?___fladd^0,c
  7555  001B14  0E00               	movlw	0
  7556  001B16  6E3B               	movwf	(?___fladd+1)^0,c
  7557  001B18  0E00               	movlw	0
  7558  001B1A  6E3C               	movwf	(?___fladd+2)^0,c
  7559  001B1C  0E00               	movlw	0
  7560  001B1E  6E3D               	movwf	(?___fladd+3)^0,c
  7561  001B20  0012               	return	
  7562  001B22                     l4725:
  7563  001B22  90D8               	bcf	status,0,c
  7564  001B24  363A               	rlcf	___fladd@b^0,f,c
  7565  001B26  363B               	rlcf	(___fladd@b+1)^0,f,c
  7566  001B28  363C               	rlcf	(___fladd@b+2)^0,f,c
  7567  001B2A  363D               	rlcf	(___fladd@b+3)^0,f,c
  7568  001B2C  BE49               	btfsc	___fladd@grs^0,7,c
  7569  001B2E  803A               	bsf	___fladd@b^0,0,c
  7570  001B30  A049               	btfss	___fladd@grs^0,0,c
  7571  001B32  D002               	goto	l4735
  7572  001B34  80D8               	bsf	status,0,c
  7573  001B36  D001               	goto	L6
  7574  001B38                     l4735:
  7575  001B38  90D8               	bcf	status,0,c
  7576  001B3A                     L6:
  7577  001B3A  3649               	rlcf	___fladd@grs^0,f,c
  7578  001B3C  5048               	movf	___fladd@bexp^0,w,c
  7579  001B3E  A4D8               	btfss	status,2,c
  7580  001B40  0648               	decf	___fladd@bexp^0,f,c
  7581  001B42                     l4741:
  7582  001B42  AE3C               	btfss	(___fladd@b+2)^0,7,c
  7583  001B44  D7EE               	goto	l4725
  7584  001B46                     u5360:
  7585  001B46  0E00               	movlw	0
  7586  001B48  6E47               	movwf	___fladd@aexp^0,c
  7587  001B4A  AE49               	btfss	___fladd@grs^0,7,c
  7588  001B4C  D00B               	goto	l960
  7589  001B4E  C049  F042         	movff	___fladd@grs,??___fladd
  7590  001B52  0E7F               	movlw	127
  7591  001B54  1642               	andwf	??___fladd^0,f,c
  7592  001B56  B4D8               	btfsc	status,2,c
  7593  001B58  D003               	goto	l961
  7594  001B5A                     u5380:
  7595  001B5A  0E01               	movlw	1
  7596  001B5C  6E47               	movwf	___fladd@aexp^0,c
  7597  001B5E  D002               	goto	l960
  7598  001B60                     l961:
  7599  001B60  B03A               	btfsc	___fladd@b^0,0,c
  7600  001B62  D7FB               	goto	u5380
  7601  001B64                     l960:
  7602  001B64  5047               	movf	___fladd@aexp^0,w,c
  7603  001B66  B4D8               	btfsc	status,2,c
  7604  001B68  D020               	goto	l4761
  7605  001B6A  0E01               	movlw	1
  7606  001B6C  263A               	addwf	___fladd@b^0,f,c
  7607  001B6E  0E00               	movlw	0
  7608  001B70  223B               	addwfc	(___fladd@b+1)^0,f,c
  7609  001B72  223C               	addwfc	(___fladd@b+2)^0,f,c
  7610  001B74  223D               	addwfc	(___fladd@b+3)^0,f,c
  7611  001B76  A03D               	btfss	(___fladd@b+3)^0,0,c
  7612  001B78  D018               	goto	l4761
  7613  001B7A  C03A  F042         	movff	___fladd@b,??___fladd
  7614  001B7E  C03B  F043         	movff	___fladd@b+1,??___fladd+1
  7615  001B82  C03C  F044         	movff	___fladd@b+2,??___fladd+2
  7616  001B86  C03D  F045         	movff	___fladd@b+3,??___fladd+3
  7617  001B8A  3445               	rlcf	(??___fladd+3)^0,w,c
  7618  001B8C  3245               	rrcf	(??___fladd+3)^0,f,c
  7619  001B8E  3244               	rrcf	(??___fladd+2)^0,f,c
  7620  001B90  3243               	rrcf	(??___fladd+1)^0,f,c
  7621  001B92  3242               	rrcf	??___fladd^0,f,c
  7622  001B94  C042  F03A         	movff	??___fladd,___fladd@b
  7623  001B98  C043  F03B         	movff	??___fladd+1,___fladd@b+1
  7624  001B9C  C044  F03C         	movff	??___fladd+2,___fladd@b+2
  7625  001BA0  C045  F03D         	movff	??___fladd+3,___fladd@b+3
  7626  001BA4  2848               	incf	___fladd@bexp^0,w,c
  7627  001BA6  A4D8               	btfss	status,2,c
  7628  001BA8  2A48               	incf	___fladd@bexp^0,f,c
  7629  001BAA                     l4761:
  7630  001BAA  2848               	incf	___fladd@bexp^0,w,c
  7631  001BAC  B4D8               	btfsc	status,2,c
  7632  001BAE  D003               	goto	u5440
  7633  001BB0  5048               	movf	___fladd@bexp^0,w,c
  7634  001BB2  A4D8               	btfss	status,2,c
  7635  001BB4  D00D               	goto	l4769
  7636  001BB6                     u5440:
  7637  001BB6  0E00               	movlw	0
  7638  001BB8  6E3A               	movwf	___fladd@b^0,c
  7639  001BBA  0E00               	movlw	0
  7640  001BBC  6E3B               	movwf	(___fladd@b+1)^0,c
  7641  001BBE  0E00               	movlw	0
  7642  001BC0  6E3C               	movwf	(___fladd@b+2)^0,c
  7643  001BC2  0E00               	movlw	0
  7644  001BC4  6E3D               	movwf	(___fladd@b+3)^0,c
  7645  001BC6  5048               	movf	___fladd@bexp^0,w,c
  7646  001BC8  A4D8               	btfss	status,2,c
  7647  001BCA  D002               	goto	l4769
  7648  001BCC  0E00               	movlw	0
  7649  001BCE  6E46               	movwf	___fladd@signs^0,c
  7650  001BD0                     l4769:
  7651  001BD0  A048               	btfss	___fladd@bexp^0,0,c
  7652  001BD2  D002               	goto	l4773
  7653  001BD4  8E3C               	bsf	(___fladd@b+2)^0,7,c
  7654  001BD6  D001               	goto	l4775
  7655  001BD8                     l4773:
  7656  001BD8  9E3C               	bcf	(___fladd@b+2)^0,7,c
  7657  001BDA                     l4775:
  7658  001BDA  90D8               	bcf	status,0,c
  7659  001BDC  3048               	rrcf	___fladd@bexp^0,w,c
  7660  001BDE  6E3D               	movwf	(___fladd@b+3)^0,c
  7661  001BE0  BE46               	btfsc	___fladd@signs^0,7,c
  7662  001BE2  8E3D               	bsf	(___fladd@b+3)^0,7,c
  7663  001BE4  C03A  F03A         	movff	___fladd@b,?___fladd
  7664  001BE8  C03B  F03B         	movff	___fladd@b+1,?___fladd+1
  7665  001BEC  C03C  F03C         	movff	___fladd@b+2,?___fladd+2
  7666  001BF0  C03D  F03D         	movff	___fladd@b+3,?___fladd+3
  7667  001BF4  0012               	return		;funcret
  7668  001BF6                     __end_of___fladd:
  7669                           	callstack 0
  7670                           
  7671 ;; *************** function ___flneg *****************
  7672 ;; Defined at:
  7673 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\flneg.c"
  7674 ;; Parameters:    Size  Location     Type
  7675 ;;  f1              4    3[COMRAM] unsigned char 
  7676 ;; Auto vars:     Size  Location     Type
  7677 ;;		None
  7678 ;; Return value:  Size  Location     Type
  7679 ;;                  4    3[COMRAM] unsigned char 
  7680 ;; Registers used:
  7681 ;;		wreg, status,2, status,0
  7682 ;; Tracked objects:
  7683 ;;		On entry : 3F/0
  7684 ;;		On exit  : 3F/0
  7685 ;;		Unchanged: 3F/0
  7686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7687 ;;      Params:         4       0       0       0
  7688 ;;      Locals:         0       0       0       0
  7689 ;;      Temps:          0       0       0       0
  7690 ;;      Totals:         4       0       0       0
  7691 ;;Total ram usage:        4 bytes
  7692 ;; Hardware stack levels used: 1
  7693 ;; Hardware stack levels required when called: 1
  7694 ;; This function calls:
  7695 ;;		Nothing
  7696 ;; This function is called by:
  7697 ;;		__doprnt
  7698 ;; This function uses a non-reentrant model
  7699 ;;
  7700                           
  7701                           	psect	text23
  7702  0029D2                     __ptext23:
  7703                           	callstack 0
  7704  0029D2                     ___flneg:
  7705                           	callstack 27
  7706                           
  7707                           ; BSR set to: 0
  7708                           
  7709                           ;incstack = 0
  7710  0029D2  5004               	movf	___flneg@f1^0,w,c
  7711  0029D4  1005               	iorwf	(___flneg@f1+1)^0,w,c
  7712  0029D6  1006               	iorwf	(___flneg@f1+2)^0,w,c
  7713  0029D8  1007               	iorwf	(___flneg@f1+3)^0,w,c
  7714  0029DA  B4D8               	btfsc	status,2,c
  7715  0029DC  D008               	goto	l5117
  7716                           
  7717                           ; BSR set to: 0
  7718  0029DE  0E00               	movlw	0
  7719  0029E0  1A04               	xorwf	___flneg@f1^0,f,c
  7720  0029E2  0E00               	movlw	0
  7721  0029E4  1A05               	xorwf	(___flneg@f1+1)^0,f,c
  7722  0029E6  0E00               	movlw	0
  7723  0029E8  1A06               	xorwf	(___flneg@f1+2)^0,f,c
  7724  0029EA  0E80               	movlw	128
  7725  0029EC  1A07               	xorwf	(___flneg@f1+3)^0,f,c
  7726  0029EE                     l5117:
  7727                           
  7728                           ; BSR set to: 0
  7729  0029EE  C004  F004         	movff	___flneg@f1,?___flneg
  7730  0029F2  C005  F005         	movff	___flneg@f1+1,?___flneg+1
  7731  0029F6  C006  F006         	movff	___flneg@f1+2,?___flneg+2
  7732  0029FA  C007  F007         	movff	___flneg@f1+3,?___flneg+3
  7733                           
  7734                           ; BSR set to: 0
  7735  0029FE  0012               	return		;funcret
  7736  002A00                     __end_of___flneg:
  7737                           	callstack 0
  7738                           
  7739 ;; *************** function ___flge *****************
  7740 ;; Defined at:
  7741 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\flge.c"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;  ff1             4    3[COMRAM] unsigned char 
  7744 ;;  ff2             4    7[COMRAM] unsigned char 
  7745 ;; Auto vars:     Size  Location     Type
  7746 ;;		None
  7747 ;; Return value:  Size  Location     Type
  7748 ;;		None               void
  7749 ;; Registers used:
  7750 ;;		wreg, status,2, status,0
  7751 ;; Tracked objects:
  7752 ;;		On entry : 0/0
  7753 ;;		On exit  : 0/0
  7754 ;;		Unchanged: 0/0
  7755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7756 ;;      Params:         8       0       0       0
  7757 ;;      Locals:         0       0       0       0
  7758 ;;      Temps:          4       0       0       0
  7759 ;;      Totals:        12       0       0       0
  7760 ;;Total ram usage:       12 bytes
  7761 ;; Hardware stack levels used: 1
  7762 ;; Hardware stack levels required when called: 1
  7763 ;; This function calls:
  7764 ;;		Nothing
  7765 ;; This function is called by:
  7766 ;;		__doprnt
  7767 ;; This function uses a non-reentrant model
  7768 ;;
  7769                           
  7770                           	psect	text24
  7771  0022B8                     __ptext24:
  7772                           	callstack 0
  7773  0022B8                     ___flge:
  7774                           	callstack 27
  7775                           
  7776                           ; BSR set to: 0
  7777                           ;incstack = 0
  7778  0022B8  0E00               	movlw	0
  7779  0022BA  1404               	andwf	___flge@ff1^0,w,c
  7780  0022BC  6E0C               	movwf	??___flge^0,c
  7781  0022BE  0E00               	movlw	0
  7782  0022C0  1405               	andwf	(___flge@ff1+1)^0,w,c
  7783  0022C2  6E0D               	movwf	(??___flge+1)^0,c
  7784  0022C4  0E80               	movlw	128
  7785  0022C6  1406               	andwf	(___flge@ff1+2)^0,w,c
  7786  0022C8  6E0E               	movwf	(??___flge+2)^0,c
  7787  0022CA  0E7F               	movlw	127
  7788  0022CC  1407               	andwf	(___flge@ff1+3)^0,w,c
  7789  0022CE  6E0F               	movwf	(??___flge+3)^0,c
  7790  0022D0  500C               	movf	??___flge^0,w,c
  7791  0022D2  100D               	iorwf	(??___flge+1)^0,w,c
  7792  0022D4  100E               	iorwf	(??___flge+2)^0,w,c
  7793  0022D6  100F               	iorwf	(??___flge+3)^0,w,c
  7794  0022D8  A4D8               	btfss	status,2,c
  7795  0022DA  D008               	goto	l5095
  7796  0022DC  0E00               	movlw	0
  7797  0022DE  6E04               	movwf	___flge@ff1^0,c
  7798  0022E0  0E00               	movlw	0
  7799  0022E2  6E05               	movwf	(___flge@ff1+1)^0,c
  7800  0022E4  0E00               	movlw	0
  7801  0022E6  6E06               	movwf	(___flge@ff1+2)^0,c
  7802  0022E8  0E00               	movlw	0
  7803  0022EA  6E07               	movwf	(___flge@ff1+3)^0,c
  7804  0022EC                     l5095:
  7805  0022EC  0E00               	movlw	0
  7806  0022EE  1408               	andwf	___flge@ff2^0,w,c
  7807  0022F0  6E0C               	movwf	??___flge^0,c
  7808  0022F2  0E00               	movlw	0
  7809  0022F4  1409               	andwf	(___flge@ff2+1)^0,w,c
  7810  0022F6  6E0D               	movwf	(??___flge+1)^0,c
  7811  0022F8  0E80               	movlw	128
  7812  0022FA  140A               	andwf	(___flge@ff2+2)^0,w,c
  7813  0022FC  6E0E               	movwf	(??___flge+2)^0,c
  7814  0022FE  0E7F               	movlw	127
  7815  002300  140B               	andwf	(___flge@ff2+3)^0,w,c
  7816  002302  6E0F               	movwf	(??___flge+3)^0,c
  7817  002304  500C               	movf	??___flge^0,w,c
  7818  002306  100D               	iorwf	(??___flge+1)^0,w,c
  7819  002308  100E               	iorwf	(??___flge+2)^0,w,c
  7820  00230A  100F               	iorwf	(??___flge+3)^0,w,c
  7821  00230C  A4D8               	btfss	status,2,c
  7822  00230E  D008               	goto	l5099
  7823  002310  0E00               	movlw	0
  7824  002312  6E08               	movwf	___flge@ff2^0,c
  7825  002314  0E00               	movlw	0
  7826  002316  6E09               	movwf	(___flge@ff2+1)^0,c
  7827  002318  0E00               	movlw	0
  7828  00231A  6E0A               	movwf	(___flge@ff2+2)^0,c
  7829  00231C  0E00               	movlw	0
  7830  00231E  6E0B               	movwf	(___flge@ff2+3)^0,c
  7831  002320                     l5099:
  7832  002320  AE07               	btfss	(___flge@ff1+3)^0,7,c
  7833  002322  D009               	goto	l5103
  7834  002324  6C04               	negf	___flge@ff1^0,c
  7835  002326  1E05               	comf	(___flge@ff1+1)^0,f,c
  7836  002328  B0D8               	btfsc	status,0,c
  7837  00232A  2A05               	incf	(___flge@ff1+1)^0,f,c
  7838  00232C  1E06               	comf	(___flge@ff1+2)^0,f,c
  7839  00232E  B0D8               	btfsc	status,0,c
  7840  002330  2A06               	incf	(___flge@ff1+2)^0,f,c
  7841  002332  0E80               	movlw	128
  7842  002334  5607               	subfwb	(___flge@ff1+3)^0,f,c
  7843  002336                     l5103:
  7844  002336  AE0B               	btfss	(___flge@ff2+3)^0,7,c
  7845  002338  D009               	goto	l679
  7846  00233A  6C08               	negf	___flge@ff2^0,c
  7847  00233C  1E09               	comf	(___flge@ff2+1)^0,f,c
  7848  00233E  B0D8               	btfsc	status,0,c
  7849  002340  2A09               	incf	(___flge@ff2+1)^0,f,c
  7850  002342  1E0A               	comf	(___flge@ff2+2)^0,f,c
  7851  002344  B0D8               	btfsc	status,0,c
  7852  002346  2A0A               	incf	(___flge@ff2+2)^0,f,c
  7853  002348  0E80               	movlw	128
  7854  00234A  560B               	subfwb	(___flge@ff2+3)^0,f,c
  7855  00234C                     l679:
  7856  00234C  0E00               	movlw	0
  7857  00234E  1A04               	xorwf	___flge@ff1^0,f,c
  7858  002350  0E00               	movlw	0
  7859  002352  1A05               	xorwf	(___flge@ff1+1)^0,f,c
  7860  002354  0E00               	movlw	0
  7861  002356  1A06               	xorwf	(___flge@ff1+2)^0,f,c
  7862  002358  0E80               	movlw	128
  7863  00235A  1A07               	xorwf	(___flge@ff1+3)^0,f,c
  7864  00235C  0E00               	movlw	0
  7865  00235E  1A08               	xorwf	___flge@ff2^0,f,c
  7866  002360  0E00               	movlw	0
  7867  002362  1A09               	xorwf	(___flge@ff2+1)^0,f,c
  7868  002364  0E00               	movlw	0
  7869  002366  1A0A               	xorwf	(___flge@ff2+2)^0,f,c
  7870  002368  0E80               	movlw	128
  7871  00236A  1A0B               	xorwf	(___flge@ff2+3)^0,f,c
  7872  00236C  5008               	movf	___flge@ff2^0,w,c
  7873  00236E  5C04               	subwf	___flge@ff1^0,w,c
  7874  002370  5009               	movf	(___flge@ff2+1)^0,w,c
  7875  002372  5805               	subwfb	(___flge@ff1+1)^0,w,c
  7876  002374  500A               	movf	(___flge@ff2+2)^0,w,c
  7877  002376  5806               	subwfb	(___flge@ff1+2)^0,w,c
  7878  002378  500B               	movf	(___flge@ff2+3)^0,w,c
  7879  00237A  5807               	subwfb	(___flge@ff1+3)^0,w,c
  7880  00237C  B0D8               	btfsc	status,0,c
  7881  00237E  D002               	goto	l5109
  7882  002380  90D8               	bcf	status,0,c
  7883  002382  0012               	return	
  7884  002384                     l5109:
  7885  002384  80D8               	bsf	status,0,c
  7886  002386  0012               	return		;funcret
  7887  002388                     __end_of___flge:
  7888                           	callstack 0
  7889                           
  7890 ;; *************** function ___fleq *****************
  7891 ;; Defined at:
  7892 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fleq.c"
  7893 ;; Parameters:    Size  Location     Type
  7894 ;;  ff1             4    3[COMRAM] unsigned char 
  7895 ;;  ff2             4    7[COMRAM] unsigned char 
  7896 ;; Auto vars:     Size  Location     Type
  7897 ;;		None
  7898 ;; Return value:  Size  Location     Type
  7899 ;;		None               void
  7900 ;; Registers used:
  7901 ;;		wreg, status,2, status,0
  7902 ;; Tracked objects:
  7903 ;;		On entry : 3F/0
  7904 ;;		On exit  : 3F/0
  7905 ;;		Unchanged: 3F/0
  7906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7907 ;;      Params:         8       0       0       0
  7908 ;;      Locals:         0       0       0       0
  7909 ;;      Temps:          4       0       0       0
  7910 ;;      Totals:        12       0       0       0
  7911 ;;Total ram usage:       12 bytes
  7912 ;; Hardware stack levels used: 1
  7913 ;; Hardware stack levels required when called: 1
  7914 ;; This function calls:
  7915 ;;		Nothing
  7916 ;; This function is called by:
  7917 ;;		__doprnt
  7918 ;; This function uses a non-reentrant model
  7919 ;;
  7920                           
  7921                           	psect	text25
  7922  00255C                     __ptext25:
  7923                           	callstack 0
  7924  00255C                     ___fleq:
  7925                           	callstack 27
  7926                           
  7927                           ; BSR set to: 0
  7928                           
  7929                           ;incstack = 0
  7930  00255C  0E00               	movlw	0
  7931  00255E  1404               	andwf	___fleq@ff1^0,w,c
  7932  002560  6E0C               	movwf	??___fleq^0,c
  7933  002562  0E00               	movlw	0
  7934  002564  1405               	andwf	(___fleq@ff1+1)^0,w,c
  7935  002566  6E0D               	movwf	(??___fleq+1)^0,c
  7936  002568  0E80               	movlw	128
  7937  00256A  1406               	andwf	(___fleq@ff1+2)^0,w,c
  7938  00256C  6E0E               	movwf	(??___fleq+2)^0,c
  7939  00256E  0E7F               	movlw	127
  7940  002570  1407               	andwf	(___fleq@ff1+3)^0,w,c
  7941  002572  6E0F               	movwf	(??___fleq+3)^0,c
  7942  002574  500C               	movf	??___fleq^0,w,c
  7943  002576  100D               	iorwf	(??___fleq+1)^0,w,c
  7944  002578  100E               	iorwf	(??___fleq+2)^0,w,c
  7945  00257A  100F               	iorwf	(??___fleq+3)^0,w,c
  7946  00257C  A4D8               	btfss	status,2,c
  7947  00257E  D008               	goto	l5079
  7948                           
  7949                           ; BSR set to: 0
  7950  002580  0E00               	movlw	0
  7951  002582  6E04               	movwf	___fleq@ff1^0,c
  7952  002584  0E00               	movlw	0
  7953  002586  6E05               	movwf	(___fleq@ff1+1)^0,c
  7954  002588  0E00               	movlw	0
  7955  00258A  6E06               	movwf	(___fleq@ff1+2)^0,c
  7956  00258C  0E00               	movlw	0
  7957  00258E  6E07               	movwf	(___fleq@ff1+3)^0,c
  7958  002590                     l5079:
  7959                           
  7960                           ; BSR set to: 0
  7961  002590  0E00               	movlw	0
  7962  002592  1408               	andwf	___fleq@ff2^0,w,c
  7963  002594  6E0C               	movwf	??___fleq^0,c
  7964  002596  0E00               	movlw	0
  7965  002598  1409               	andwf	(___fleq@ff2+1)^0,w,c
  7966  00259A  6E0D               	movwf	(??___fleq+1)^0,c
  7967  00259C  0E80               	movlw	128
  7968  00259E  140A               	andwf	(___fleq@ff2+2)^0,w,c
  7969  0025A0  6E0E               	movwf	(??___fleq+2)^0,c
  7970  0025A2  0E7F               	movlw	127
  7971  0025A4  140B               	andwf	(___fleq@ff2+3)^0,w,c
  7972  0025A6  6E0F               	movwf	(??___fleq+3)^0,c
  7973  0025A8  500C               	movf	??___fleq^0,w,c
  7974  0025AA  100D               	iorwf	(??___fleq+1)^0,w,c
  7975  0025AC  100E               	iorwf	(??___fleq+2)^0,w,c
  7976  0025AE  100F               	iorwf	(??___fleq+3)^0,w,c
  7977  0025B0  A4D8               	btfss	status,2,c
  7978  0025B2  D008               	goto	l5083
  7979                           
  7980                           ; BSR set to: 0
  7981  0025B4  0E00               	movlw	0
  7982  0025B6  6E08               	movwf	___fleq@ff2^0,c
  7983  0025B8  0E00               	movlw	0
  7984  0025BA  6E09               	movwf	(___fleq@ff2+1)^0,c
  7985  0025BC  0E00               	movlw	0
  7986  0025BE  6E0A               	movwf	(___fleq@ff2+2)^0,c
  7987  0025C0  0E00               	movlw	0
  7988  0025C2  6E0B               	movwf	(___fleq@ff2+3)^0,c
  7989  0025C4                     l5083:
  7990                           
  7991                           ; BSR set to: 0
  7992  0025C4  5008               	movf	___fleq@ff2^0,w,c
  7993  0025C6  1804               	xorwf	___fleq@ff1^0,w,c
  7994  0025C8  E10A               	bnz	u5880
  7995  0025CA  5009               	movf	(___fleq@ff2+1)^0,w,c
  7996  0025CC  1805               	xorwf	(___fleq@ff1+1)^0,w,c
  7997  0025CE  E107               	bnz	u5880
  7998  0025D0  500A               	movf	(___fleq@ff2+2)^0,w,c
  7999  0025D2  1806               	xorwf	(___fleq@ff1+2)^0,w,c
  8000  0025D4  E104               	bnz	u5880
  8001  0025D6  500B               	movf	(___fleq@ff2+3)^0,w,c
  8002  0025D8  1807               	xorwf	(___fleq@ff1+3)^0,w,c
  8003  0025DA  B4D8               	btfsc	status,2,c
  8004  0025DC  D002               	goto	l5087
  8005  0025DE                     u5880:
  8006                           
  8007                           ; BSR set to: 0
  8008  0025DE  90D8               	bcf	status,0,c
  8009  0025E0  0012               	return	
  8010  0025E2                     l5087:
  8011                           
  8012                           ; BSR set to: 0
  8013  0025E2  80D8               	bsf	status,0,c
  8014                           
  8015                           ; BSR set to: 0
  8016  0025E4  0012               	return		;funcret
  8017  0025E6                     __end_of___fleq:
  8018                           	callstack 0
  8019                           
  8020 ;; *************** function _DelayMs *****************
  8021 ;; Defined at:
  8022 ;;		line 10 in file "../DELAY18.c"
  8023 ;; Parameters:    Size  Location     Type
  8024 ;;  i               2    3[COMRAM] unsigned short 
  8025 ;; Auto vars:     Size  Location     Type
  8026 ;;  dummy           2    7[COMRAM] unsigned short 
  8027 ;;  j               2    5[COMRAM] unsigned short 
  8028 ;; Return value:  Size  Location     Type
  8029 ;;                  1    wreg      void 
  8030 ;; Registers used:
  8031 ;;		wreg, status,2, status,0
  8032 ;; Tracked objects:
  8033 ;;		On entry : 3F/0
  8034 ;;		On exit  : 3F/0
  8035 ;;		Unchanged: 3F/0
  8036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8037 ;;      Params:         2       0       0       0
  8038 ;;      Locals:         4       0       0       0
  8039 ;;      Temps:          0       0       0       0
  8040 ;;      Totals:         6       0       0       0
  8041 ;;Total ram usage:        6 bytes
  8042 ;; Hardware stack levels used: 1
  8043 ;; Hardware stack levels required when called: 1
  8044 ;; This function calls:
  8045 ;;		Nothing
  8046 ;; This function is called by:
  8047 ;;		_i2c_SlaveWrite
  8048 ;;		_main
  8049 ;; This function uses a non-reentrant model
  8050 ;;
  8051                           
  8052                           	psect	text26
  8053  00299E                     __ptext26:
  8054                           	callstack 0
  8055  00299E                     _DelayMs:
  8056                           	callstack 28
  8057                           
  8058                           ; BSR set to: 0
  8059                           ;DELAY18.c: 12: unsigned short j, dummy;;DELAY18.c: 14: for (j=0; j<i; j++)
  8060                           
  8061                           ; BSR set to: 0
  8062                           ;incstack = 0
  8063  00299E  0E00               	movlw	0
  8064  0029A0  6E07               	movwf	(DelayMs@j+1)^0,c
  8065  0029A2  0E00               	movlw	0
  8066  0029A4  6E06               	movwf	DelayMs@j^0,c
  8067  0029A6  D00E               	goto	l5857
  8068  0029A8                     l5849:
  8069                           
  8070                           ; BSR set to: 0
  8071                           ;DELAY18.c: 15: {;DELAY18.c: 16: dummy = 500;
  8072  0029A8  0E01               	movlw	1
  8073  0029AA  6E09               	movwf	(DelayMs@dummy+1)^0,c
  8074  0029AC  0EF4               	movlw	244
  8075  0029AE  6E08               	movwf	DelayMs@dummy^0,c
  8076                           
  8077                           ;DELAY18.c: 17: while (dummy) dummy--;
  8078  0029B0  D003               	goto	l5853
  8079  0029B2                     l5851:
  8080                           
  8081                           ; BSR set to: 0
  8082  0029B2  0608               	decf	DelayMs@dummy^0,f,c
  8083  0029B4  A0D8               	btfss	status,0,c
  8084  0029B6  0609               	decf	(DelayMs@dummy+1)^0,f,c
  8085  0029B8                     l5853:
  8086                           
  8087                           ; BSR set to: 0
  8088  0029B8  5008               	movf	DelayMs@dummy^0,w,c
  8089  0029BA  1009               	iorwf	(DelayMs@dummy+1)^0,w,c
  8090  0029BC  A4D8               	btfss	status,2,c
  8091  0029BE  D7F9               	goto	l5851
  8092                           
  8093                           ; BSR set to: 0
  8094  0029C0  4A06               	infsnz	DelayMs@j^0,f,c
  8095  0029C2  2A07               	incf	(DelayMs@j+1)^0,f,c
  8096  0029C4                     l5857:
  8097                           
  8098                           ; BSR set to: 0
  8099  0029C4  5004               	movf	DelayMs@i^0,w,c
  8100  0029C6  5C06               	subwf	DelayMs@j^0,w,c
  8101  0029C8  5005               	movf	(DelayMs@i+1)^0,w,c
  8102  0029CA  5807               	subwfb	(DelayMs@j+1)^0,w,c
  8103  0029CC  B0D8               	btfsc	status,0,c
  8104  0029CE  0012               	return	
  8105  0029D0  D7EB               	goto	l5849
  8106  0029D2                     __end_of_DelayMs:
  8107                           	callstack 0
  8108                           
  8109 ;; *************** function _i2c_SlaveRead *****************
  8110 ;; Defined at:
  8111 ;;		line 161 in file "../MASTER_I2C.c"
  8112 ;; Parameters:    Size  Location     Type
  8113 ;;  device          1    wreg     unsigned char 
  8114 ;;  numBytes        1    7[COMRAM] unsigned char 
  8115 ;;  ptrDataIn       1    8[COMRAM] PTR unsigned char 
  8116 ;;		 -> main@InBytes(32), 
  8117 ;; Auto vars:     Size  Location     Type
  8118 ;;  device          1    9[COMRAM] unsigned char 
  8119 ;;  i               1   11[COMRAM] unsigned char 
  8120 ;;  errorFlag       1   10[COMRAM] unsigned char 
  8121 ;; Return value:  Size  Location     Type
  8122 ;;                  1    wreg      unsigned char 
  8123 ;; Registers used:
  8124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8125 ;; Tracked objects:
  8126 ;;		On entry : 3F/1
  8127 ;;		On exit  : 0/0
  8128 ;;		Unchanged: 0/0
  8129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8130 ;;      Params:         2       0       0       0
  8131 ;;      Locals:         3       0       0       0
  8132 ;;      Temps:          0       0       0       0
  8133 ;;      Totals:         5       0       0       0
  8134 ;;Total ram usage:        5 bytes
  8135 ;; Hardware stack levels used: 1
  8136 ;; Hardware stack levels required when called: 3
  8137 ;; This function calls:
  8138 ;;		_i2c_GetAcknowledge
  8139 ;;		_i2c_ReadByte
  8140 ;;		_i2c_SendAcknowledge
  8141 ;;		_i2c_SendControlByte
  8142 ;;		_i2c_Start
  8143 ;;		_i2c_Stop
  8144 ;; This function is called by:
  8145 ;;		_main
  8146 ;; This function uses a non-reentrant model
  8147 ;;
  8148                           
  8149                           	psect	text27
  8150  002896                     __ptext27:
  8151                           	callstack 0
  8152  002896                     _i2c_SlaveRead:
  8153                           	callstack 27
  8154                           
  8155                           ; BSR set to: 0
  8156                           ;incstack = 0
  8157                           ;i2c_SlaveRead@device stored from wreg
  8158  002896  6E0A               	movwf	i2c_SlaveRead@device^0,c
  8159                           
  8160                           ;MASTER_I2C.c: 163: unsigned char i;;MASTER_I2C.c: 164: unsigned char errorFlag;;MASTER_
      +                          I2C.c: 166: errorFlag = 0x00;
  8161  002898  0E00               	movlw	0
  8162  00289A  6E0B               	movwf	i2c_SlaveRead@errorFlag^0,c
  8163                           
  8164                           ;MASTER_I2C.c: 171: i2c_Start();
  8165  00289C  EC8F  F015         	call	_i2c_Start	;wreg free
  8166                           
  8167                           ;MASTER_I2C.c: 172: i2c_SendControlByte(device, 0x01);
  8168  0028A0  0E01               	movlw	1
  8169  0028A2  6E05               	movwf	i2c_SendControlByte@direction^0,c
  8170  0028A4  500A               	movf	i2c_SlaveRead@device^0,w,c
  8171  0028A6  EC6A  F015         	call	_i2c_SendControlByte
  8172                           
  8173                           ;MASTER_I2C.c: 173: errorFlag |= i2c_GetAcknowledge();
  8174  0028AA  EC89  F015         	call	_i2c_GetAcknowledge	;wreg free
  8175  0028AE  120B               	iorwf	i2c_SlaveRead@errorFlag^0,f,c
  8176                           
  8177                           ;MASTER_I2C.c: 176: i = 0;
  8178  0028B0  0E00               	movlw	0
  8179  0028B2  6E0C               	movwf	i2c_SlaveRead@i^0,c
  8180  0028B4                     l5947:
  8181                           
  8182                           ;MASTER_I2C.c: 179: ptrDataIn[i] = (unsigned char) i2c_ReadByte();
  8183  0028B4  5009               	movf	i2c_SlaveRead@ptrDataIn^0,w,c
  8184  0028B6  240C               	addwf	i2c_SlaveRead@i^0,w,c
  8185  0028B8  6ED9               	movwf	fsr2l,c
  8186  0028BA  6ADA               	clrf	fsr2h,c
  8187  0028BC  EC74  F015         	call	_i2c_ReadByte	;wreg free
  8188  0028C0  6EDF               	movwf	indf2,c
  8189                           
  8190                           ;MASTER_I2C.c: 180: i++;
  8191  0028C2  2A0C               	incf	i2c_SlaveRead@i^0,f,c
  8192                           
  8193                           ;MASTER_I2C.c: 181: if (i < numBytes)
  8194  0028C4  5008               	movf	i2c_SlaveRead@numBytes^0,w,c
  8195  0028C6  5C0C               	subwf	i2c_SlaveRead@i^0,w,c
  8196  0028C8  B0D8               	btfsc	status,0,c
  8197  0028CA  D004               	goto	l5955
  8198                           
  8199                           ;MASTER_I2C.c: 182: i2c_SendAcknowledge(1);
  8200  0028CC  0E01               	movlw	1
  8201  0028CE  EC5F  F015         	call	_i2c_SendAcknowledge
  8202  0028D2  D003               	goto	l5957
  8203  0028D4                     l5955:
  8204                           
  8205                           ;MASTER_I2C.c: 183: else;MASTER_I2C.c: 184: i2c_SendAcknowledge(0);
  8206  0028D4  0E00               	movlw	0
  8207  0028D6  EC5F  F015         	call	_i2c_SendAcknowledge
  8208  0028DA                     l5957:
  8209                           
  8210                           ;MASTER_I2C.c: 185: } while (i < numBytes);
  8211  0028DA  5008               	movf	i2c_SlaveRead@numBytes^0,w,c
  8212  0028DC  5C0C               	subwf	i2c_SlaveRead@i^0,w,c
  8213  0028DE  A0D8               	btfss	status,0,c
  8214  0028E0  D7E9               	goto	l5947
  8215                           
  8216                           ;MASTER_I2C.c: 188: i2c_Stop();
  8217  0028E2  EC94  F015         	call	_i2c_Stop	;wreg free
  8218                           
  8219                           ;MASTER_I2C.c: 189: return errorFlag;
  8220  0028E6  500B               	movf	i2c_SlaveRead@errorFlag^0,w,c
  8221  0028E8  0012               	return		;funcret
  8222  0028EA                     __end_of_i2c_SlaveRead:
  8223                           	callstack 0
  8224                           
  8225 ;; *************** function _i2c_Start *****************
  8226 ;; Defined at:
  8227 ;;		line 46 in file "../MASTER_I2C.c"
  8228 ;; Parameters:    Size  Location     Type
  8229 ;;		None
  8230 ;; Auto vars:     Size  Location     Type
  8231 ;;		None
  8232 ;; Return value:  Size  Location     Type
  8233 ;;                  1    wreg      void 
  8234 ;; Registers used:
  8235 ;;		None
  8236 ;; Tracked objects:
  8237 ;;		On entry : 0/0
  8238 ;;		On exit  : 0/0
  8239 ;;		Unchanged: 0/0
  8240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8241 ;;      Params:         0       0       0       0
  8242 ;;      Locals:         0       0       0       0
  8243 ;;      Temps:          0       0       0       0
  8244 ;;      Totals:         0       0       0       0
  8245 ;;Total ram usage:        0 bytes
  8246 ;; Hardware stack levels used: 1
  8247 ;; Hardware stack levels required when called: 1
  8248 ;; This function calls:
  8249 ;;		Nothing
  8250 ;; This function is called by:
  8251 ;;		_i2c_SlaveWrite
  8252 ;;		_i2c_SlaveRead
  8253 ;; This function uses a non-reentrant model
  8254 ;;
  8255                           
  8256                           	psect	text28
  8257  002B1E                     __ptext28:
  8258                           	callstack 0
  8259  002B1E                     _i2c_Start:
  8260                           	callstack 28
  8261                           
  8262                           ;MASTER_I2C.c: 48: SSP1CON2bits.SEN = 1;
  8263                           
  8264                           ;incstack = 0
  8265  002B1E  80C5               	bsf	197,0,c	;volatile
  8266  002B20                     l51:
  8267  002B20  A69E               	btfss	3998,3,c	;volatile
  8268  002B22  D7FE               	goto	l51
  8269                           
  8270                           ;MASTER_I2C.c: 50: SSP1IF = 0;
  8271  002B24  969E               	bcf	3998,3,c	;volatile
  8272  002B26  0012               	return		;funcret
  8273  002B28                     __end_of_i2c_Start:
  8274                           	callstack 0
  8275                           
  8276 ;; *************** function _i2c_SendControlByte *****************
  8277 ;; Defined at:
  8278 ;;		line 75 in file "../MASTER_I2C.c"
  8279 ;; Parameters:    Size  Location     Type
  8280 ;;  controlByte     1    wreg     unsigned char 
  8281 ;;  direction       1    4[COMRAM] unsigned char 
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;  controlByte     1    5[COMRAM] unsigned char 
  8284 ;;  outByte         1    6[COMRAM] unsigned char 
  8285 ;; Return value:  Size  Location     Type
  8286 ;;                  1    wreg      void 
  8287 ;; Registers used:
  8288 ;;		wreg, status,2, status,0, cstack
  8289 ;; Tracked objects:
  8290 ;;		On entry : 0/0
  8291 ;;		On exit  : 0/0
  8292 ;;		Unchanged: 0/0
  8293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8294 ;;      Params:         1       0       0       0
  8295 ;;      Locals:         2       0       0       0
  8296 ;;      Temps:          0       0       0       0
  8297 ;;      Totals:         3       0       0       0
  8298 ;;Total ram usage:        3 bytes
  8299 ;; Hardware stack levels used: 1
  8300 ;; Hardware stack levels required when called: 2
  8301 ;; This function calls:
  8302 ;;		_i2c_SendByte
  8303 ;; This function is called by:
  8304 ;;		_i2c_SlaveWrite
  8305 ;;		_i2c_SlaveRead
  8306 ;; This function uses a non-reentrant model
  8307 ;;
  8308                           
  8309                           	psect	text29
  8310  002AD4                     __ptext29:
  8311                           	callstack 0
  8312  002AD4                     _i2c_SendControlByte:
  8313                           	callstack 27
  8314                           
  8315                           ;incstack = 0
  8316                           ;i2c_SendControlByte@controlByte stored from wreg
  8317  002AD4  6E06               	movwf	i2c_SendControlByte@controlByte^0,c
  8318                           
  8319                           ;MASTER_I2C.c: 77: unsigned char outByte;;MASTER_I2C.c: 79: outByte = ((controlByte << 1
      +                          ) & 0b11111110) | direction;
  8320  002AD6  5006               	movf	i2c_SendControlByte@controlByte^0,w,c
  8321  002AD8  2406               	addwf	i2c_SendControlByte@controlByte^0,w,c
  8322  002ADA  0BFE               	andlw	254
  8323  002ADC  1005               	iorwf	i2c_SendControlByte@direction^0,w,c
  8324  002ADE  6E07               	movwf	i2c_SendControlByte@outByte^0,c
  8325                           
  8326                           ;MASTER_I2C.c: 81: i2c_SendByte (outByte);
  8327  002AE0  5007               	movf	i2c_SendControlByte@outByte^0,w,c
  8328  002AE2  EC7C  F015         	call	_i2c_SendByte
  8329  002AE6  0012               	return		;funcret
  8330  002AE8                     __end_of_i2c_SendControlByte:
  8331                           	callstack 0
  8332                           
  8333 ;; *************** function _i2c_SendByte *****************
  8334 ;; Defined at:
  8335 ;;		line 64 in file "../MASTER_I2C.c"
  8336 ;; Parameters:    Size  Location     Type
  8337 ;;  byte            1    wreg     unsigned char 
  8338 ;; Auto vars:     Size  Location     Type
  8339 ;;  byte            1    3[COMRAM] unsigned char 
  8340 ;; Return value:  Size  Location     Type
  8341 ;;                  1    wreg      void 
  8342 ;; Registers used:
  8343 ;;		wreg
  8344 ;; Tracked objects:
  8345 ;;		On entry : 0/0
  8346 ;;		On exit  : 0/0
  8347 ;;		Unchanged: 0/0
  8348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8349 ;;      Params:         0       0       0       0
  8350 ;;      Locals:         1       0       0       0
  8351 ;;      Temps:          0       0       0       0
  8352 ;;      Totals:         1       0       0       0
  8353 ;;Total ram usage:        1 bytes
  8354 ;; Hardware stack levels used: 1
  8355 ;; Hardware stack levels required when called: 1
  8356 ;; This function calls:
  8357 ;;		Nothing
  8358 ;; This function is called by:
  8359 ;;		_i2c_SendControlByte
  8360 ;;		_i2c_SlaveWrite
  8361 ;; This function uses a non-reentrant model
  8362 ;;
  8363                           
  8364                           	psect	text30
  8365  002AF8                     __ptext30:
  8366                           	callstack 0
  8367  002AF8                     _i2c_SendByte:
  8368                           	callstack 27
  8369                           
  8370                           ;incstack = 0
  8371                           ;i2c_SendByte@byte stored from wreg
  8372  002AF8  6E04               	movwf	i2c_SendByte@byte^0,c
  8373                           
  8374                           ;MASTER_I2C.c: 67: SSP1BUF = byte;
  8375  002AFA  C004  FFC9         	movff	i2c_SendByte@byte,4041	;volatile
  8376  002AFE                     l63:
  8377  002AFE  A69E               	btfss	3998,3,c	;volatile
  8378  002B00  D7FE               	goto	l63
  8379                           
  8380                           ;MASTER_I2C.c: 69: SSP1IF = 0;
  8381  002B02  969E               	bcf	3998,3,c	;volatile
  8382  002B04  0012               	return		;funcret
  8383  002B06                     __end_of_i2c_SendByte:
  8384                           	callstack 0
  8385                           
  8386 ;; *************** function _i2c_SendAcknowledge *****************
  8387 ;; Defined at:
  8388 ;;		line 113 in file "../MASTER_I2C.c"
  8389 ;; Parameters:    Size  Location     Type
  8390 ;;  status          1    wreg     unsigned char 
  8391 ;; Auto vars:     Size  Location     Type
  8392 ;;  status          1    3[COMRAM] unsigned char 
  8393 ;; Return value:  Size  Location     Type
  8394 ;;                  1    wreg      void 
  8395 ;; Registers used:
  8396 ;;		wreg
  8397 ;; Tracked objects:
  8398 ;;		On entry : 0/1
  8399 ;;		On exit  : 0/0
  8400 ;;		Unchanged: 0/0
  8401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8402 ;;      Params:         0       0       0       0
  8403 ;;      Locals:         1       0       0       0
  8404 ;;      Temps:          0       0       0       0
  8405 ;;      Totals:         1       0       0       0
  8406 ;;Total ram usage:        1 bytes
  8407 ;; Hardware stack levels used: 1
  8408 ;; Hardware stack levels required when called: 1
  8409 ;; This function calls:
  8410 ;;		Nothing
  8411 ;; This function is called by:
  8412 ;;		_i2c_SlaveRead
  8413 ;; This function uses a non-reentrant model
  8414 ;;
  8415                           
  8416                           	psect	text31
  8417  002ABE                     __ptext31:
  8418                           	callstack 0
  8419  002ABE                     _i2c_SendAcknowledge:
  8420                           	callstack 28
  8421                           
  8422                           ;incstack = 0
  8423                           ;i2c_SendAcknowledge@status stored from wreg
  8424  002ABE  6E04               	movwf	i2c_SendAcknowledge@status^0,c
  8425                           
  8426                           ;MASTER_I2C.c: 115: if (status & 0x01)
  8427  002AC0  A004               	btfss	i2c_SendAcknowledge@status^0,0,c
  8428  002AC2  D002               	goto	l81
  8429                           
  8430                           ;MASTER_I2C.c: 116: SSP1CON2bits.ACKDT = 0;
  8431  002AC4  9AC5               	bcf	197,5,c	;volatile
  8432  002AC6  D001               	goto	l82
  8433  002AC8                     l81:
  8434                           
  8435                           ;MASTER_I2C.c: 117: else SSP1CON2bits.ACKDT = 1;
  8436  002AC8  8AC5               	bsf	197,5,c	;volatile
  8437  002ACA                     l82:
  8438                           
  8439                           ;MASTER_I2C.c: 118: SSP1CON2bits.ACKEN = 1;
  8440  002ACA  88C5               	bsf	197,4,c	;volatile
  8441  002ACC                     l83:
  8442  002ACC  A69E               	btfss	3998,3,c	;volatile
  8443  002ACE  D7FE               	goto	l83
  8444                           
  8445                           ;MASTER_I2C.c: 120: SSP1IF = 0;
  8446  002AD0  969E               	bcf	3998,3,c	;volatile
  8447  002AD2  0012               	return		;funcret
  8448  002AD4                     __end_of_i2c_SendAcknowledge:
  8449                           	callstack 0
  8450                           
  8451 ;; *************** function _i2c_ReadByte *****************
  8452 ;; Defined at:
  8453 ;;		line 96 in file "../MASTER_I2C.c"
  8454 ;; Parameters:    Size  Location     Type
  8455 ;;		None
  8456 ;; Auto vars:     Size  Location     Type
  8457 ;;  byte            1    3[COMRAM] unsigned char 
  8458 ;; Return value:  Size  Location     Type
  8459 ;;                  1    wreg      unsigned char 
  8460 ;; Registers used:
  8461 ;;		wreg, status,2
  8462 ;; Tracked objects:
  8463 ;;		On entry : 0/1
  8464 ;;		On exit  : 0/0
  8465 ;;		Unchanged: 0/0
  8466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8467 ;;      Params:         0       0       0       0
  8468 ;;      Locals:         1       0       0       0
  8469 ;;      Temps:          0       0       0       0
  8470 ;;      Totals:         1       0       0       0
  8471 ;;Total ram usage:        1 bytes
  8472 ;; Hardware stack levels used: 1
  8473 ;; Hardware stack levels required when called: 1
  8474 ;; This function calls:
  8475 ;;		Nothing
  8476 ;; This function is called by:
  8477 ;;		_i2c_SlaveRead
  8478 ;; This function uses a non-reentrant model
  8479 ;;
  8480                           
  8481                           	psect	text32
  8482  002AE8                     __ptext32:
  8483                           	callstack 0
  8484  002AE8                     _i2c_ReadByte:
  8485                           	callstack 28
  8486                           
  8487                           ;MASTER_I2C.c: 98: unsigned char byte;;MASTER_I2C.c: 100: SSP1CON2bits.RCEN = 1;
  8488                           
  8489                           ;incstack = 0
  8490  002AE8  86C5               	bsf	197,3,c	;volatile
  8491  002AEA                     l75:
  8492  002AEA  A69E               	btfss	3998,3,c	;volatile
  8493  002AEC  D7FE               	goto	l75
  8494                           
  8495                           ;MASTER_I2C.c: 102: SSP1IF = 0;
  8496  002AEE  969E               	bcf	3998,3,c	;volatile
  8497                           
  8498                           ;MASTER_I2C.c: 103: byte = SSP1BUF;
  8499  002AF0  CFC9 F004          	movff	4041,i2c_ReadByte@byte	;volatile
  8500                           
  8501                           ;MASTER_I2C.c: 104: return byte;
  8502  002AF4  5004               	movf	i2c_ReadByte@byte^0,w,c
  8503  002AF6  0012               	return		;funcret
  8504  002AF8                     __end_of_i2c_ReadByte:
  8505                           	callstack 0
  8506                           
  8507 ;; *************** function _i2c_GetAcknowledge *****************
  8508 ;; Defined at:
  8509 ;;		line 86 in file "../MASTER_I2C.c"
  8510 ;; Parameters:    Size  Location     Type
  8511 ;;		None
  8512 ;; Auto vars:     Size  Location     Type
  8513 ;;  ack             1    3[COMRAM] unsigned char 
  8514 ;; Return value:  Size  Location     Type
  8515 ;;                  1    wreg      unsigned char 
  8516 ;; Registers used:
  8517 ;;		wreg, status,2
  8518 ;; Tracked objects:
  8519 ;;		On entry : 0/0
  8520 ;;		On exit  : 0/0
  8521 ;;		Unchanged: 0/0
  8522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8523 ;;      Params:         0       0       0       0
  8524 ;;      Locals:         1       0       0       0
  8525 ;;      Temps:          0       0       0       0
  8526 ;;      Totals:         1       0       0       0
  8527 ;;Total ram usage:        1 bytes
  8528 ;; Hardware stack levels used: 1
  8529 ;; Hardware stack levels required when called: 1
  8530 ;; This function calls:
  8531 ;;		Nothing
  8532 ;; This function is called by:
  8533 ;;		_i2c_SlaveWrite
  8534 ;;		_i2c_SlaveRead
  8535 ;; This function uses a non-reentrant model
  8536 ;;
  8537                           
  8538                           	psect	text33
  8539  002B12                     __ptext33:
  8540                           	callstack 0
  8541  002B12                     _i2c_GetAcknowledge:
  8542                           	callstack 28
  8543                           
  8544                           ;MASTER_I2C.c: 88: unsigned char ack;;MASTER_I2C.c: 90: ack = SSP1CON2bits.ACKSTAT;
  8545                           
  8546                           ;incstack = 0
  8547  002B12  0E00               	movlw	0
  8548  002B14  BCC5               	btfsc	197,6,c	;volatile
  8549  002B16  0E01               	movlw	1
  8550  002B18  6E04               	movwf	i2c_GetAcknowledge@ack^0,c
  8551                           
  8552                           ;MASTER_I2C.c: 91: return ack;
  8553  002B1A  5004               	movf	i2c_GetAcknowledge@ack^0,w,c
  8554  002B1C  0012               	return		;funcret
  8555  002B1E                     __end_of_i2c_GetAcknowledge:
  8556                           	callstack 0
  8557                           
  8558 ;; *************** function _InitializeI2Cmaster *****************
  8559 ;; Defined at:
  8560 ;;		line 15 in file "../MASTER_I2C.c"
  8561 ;; Parameters:    Size  Location     Type
  8562 ;;		None
  8563 ;; Auto vars:     Size  Location     Type
  8564 ;;		None
  8565 ;; Return value:  Size  Location     Type
  8566 ;;                  1    wreg      void 
  8567 ;; Registers used:
  8568 ;;		wreg, status,2, cstack
  8569 ;; Tracked objects:
  8570 ;;		On entry : 3F/0
  8571 ;;		On exit  : 0/0
  8572 ;;		Unchanged: 0/0
  8573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8574 ;;      Params:         0       0       0       0
  8575 ;;      Locals:         0       0       0       0
  8576 ;;      Temps:          0       0       0       0
  8577 ;;      Totals:         0       0       0       0
  8578 ;;Total ram usage:        0 bytes
  8579 ;; Hardware stack levels used: 1
  8580 ;; Hardware stack levels required when called: 2
  8581 ;; This function calls:
  8582 ;;		_i2c_Stop
  8583 ;; This function is called by:
  8584 ;;		_main
  8585 ;; This function uses a non-reentrant model
  8586 ;;
  8587                           
  8588                           	psect	text34
  8589  002A7A                     __ptext34:
  8590                           	callstack 0
  8591  002A7A                     _InitializeI2Cmaster:
  8592                           	callstack 28
  8593                           
  8594                           ; BSR set to: 0
  8595                           ;MASTER_I2C.c: 17: SSP1CON1 = 0x00;
  8596                           
  8597                           ;incstack = 0
  8598  002A7A  0E00               	movlw	0
  8599  002A7C  6EC6               	movwf	198,c	;volatile
  8600                           
  8601                           ;MASTER_I2C.c: 18: SSP1CON2 = 0x00;
  8602  002A7E  0E00               	movlw	0
  8603  002A80  6EC5               	movwf	197,c	;volatile
  8604                           
  8605                           ;MASTER_I2C.c: 19: SSP1CON3 = 0x00;
  8606  002A82  0E00               	movlw	0
  8607  002A84  6ECB               	movwf	203,c	;volatile
  8608                           
  8609                           ; BSR set to: 0
  8610                           ;MASTER_I2C.c: 21: SSP1CON1bits.SSPEN = 1;
  8611  002A86  8AC6               	bsf	198,5,c	;volatile
  8612                           
  8613                           ; BSR set to: 0
  8614                           ;MASTER_I2C.c: 22: SSP1CON1bits.SSPM3 = 1;
  8615  002A88  86C6               	bsf	198,3,c	;volatile
  8616                           
  8617                           ; BSR set to: 0
  8618                           ;MASTER_I2C.c: 23: SSP1CON1bits.SSPM2 = 0;
  8619  002A8A  94C6               	bcf	198,2,c	;volatile
  8620                           
  8621                           ; BSR set to: 0
  8622                           ;MASTER_I2C.c: 24: SSP1CON1bits.SSPM1 = 0;
  8623  002A8C  92C6               	bcf	198,1,c	;volatile
  8624                           
  8625                           ; BSR set to: 0
  8626                           ;MASTER_I2C.c: 25: SSP1CON1bits.SSPM0 = 0;
  8627  002A8E  90C6               	bcf	198,0,c	;volatile
  8628                           
  8629                           ;MASTER_I2C.c: 27: SSP1ADD = 159;
  8630  002A90  0E9F               	movlw	159
  8631  002A92  6EC8               	movwf	200,c	;volatile
  8632                           
  8633                           ;MASTER_I2C.c: 28: SSP1STAT = 0;
  8634  002A94  0E00               	movlw	0
  8635  002A96  6EC7               	movwf	199,c	;volatile
  8636                           
  8637                           ; BSR set to: 0
  8638                           ;MASTER_I2C.c: 29: SSP1IF = 0;
  8639  002A98  969E               	bcf	3998,3,c	;volatile
  8640                           
  8641                           ; BSR set to: 0
  8642                           ;MASTER_I2C.c: 32: i2c_Stop();
  8643  002A9A  EC94  F015         	call	_i2c_Stop	;wreg free
  8644  002A9E  0012               	return		;funcret
  8645  002AA0                     __end_of_InitializeI2Cmaster:
  8646                           	callstack 0
  8647                           
  8648 ;; *************** function _i2c_Stop *****************
  8649 ;; Defined at:
  8650 ;;		line 38 in file "../MASTER_I2C.c"
  8651 ;; Parameters:    Size  Location     Type
  8652 ;;		None
  8653 ;; Auto vars:     Size  Location     Type
  8654 ;;		None
  8655 ;; Return value:  Size  Location     Type
  8656 ;;                  1    wreg      void 
  8657 ;; Registers used:
  8658 ;;		None
  8659 ;; Tracked objects:
  8660 ;;		On entry : 0/0
  8661 ;;		On exit  : 0/0
  8662 ;;		Unchanged: 0/0
  8663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8664 ;;      Params:         0       0       0       0
  8665 ;;      Locals:         0       0       0       0
  8666 ;;      Temps:          0       0       0       0
  8667 ;;      Totals:         0       0       0       0
  8668 ;;Total ram usage:        0 bytes
  8669 ;; Hardware stack levels used: 1
  8670 ;; Hardware stack levels required when called: 1
  8671 ;; This function calls:
  8672 ;;		Nothing
  8673 ;; This function is called by:
  8674 ;;		_InitializeI2Cmaster
  8675 ;;		_i2c_SlaveWrite
  8676 ;;		_i2c_SlaveRead
  8677 ;; This function uses a non-reentrant model
  8678 ;;
  8679                           
  8680                           	psect	text35
  8681  002B28                     __ptext35:
  8682                           	callstack 0
  8683  002B28                     _i2c_Stop:
  8684                           	callstack 28
  8685                           
  8686                           ;MASTER_I2C.c: 40: SSP1CON2bits.PEN = 1;
  8687                           
  8688                           ;incstack = 0
  8689  002B28  84C5               	bsf	197,2,c	;volatile
  8690  002B2A                     l45:
  8691  002B2A  A69E               	btfss	3998,3,c	;volatile
  8692  002B2C  D7FE               	goto	l45
  8693                           
  8694                           ;MASTER_I2C.c: 42: SSP1IF = 0;
  8695  002B2E  969E               	bcf	3998,3,c	;volatile
  8696  002B30  0012               	return		;funcret
  8697  002B32                     __end_of_i2c_Stop:
  8698                           	callstack 0
  8699                           
  8700 ;; *************** function _InitializeHardware *****************
  8701 ;; Defined at:
  8702 ;;		line 41 in file "../MiscFunctions.c"
  8703 ;; Parameters:    Size  Location     Type
  8704 ;;		None
  8705 ;; Auto vars:     Size  Location     Type
  8706 ;;  dummyRead       1    0        unsigned char 
  8707 ;; Return value:  Size  Location     Type
  8708 ;;                  1    wreg      void 
  8709 ;; Registers used:
  8710 ;;		wreg, status,2
  8711 ;; Tracked objects:
  8712 ;;		On entry : 3F/0
  8713 ;;		On exit  : 3F/F
  8714 ;;		Unchanged: 0/0
  8715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8716 ;;      Params:         0       0       0       0
  8717 ;;      Locals:         0       0       0       0
  8718 ;;      Temps:          0       0       0       0
  8719 ;;      Totals:         0       0       0       0
  8720 ;;Total ram usage:        0 bytes
  8721 ;; Hardware stack levels used: 1
  8722 ;; Hardware stack levels required when called: 1
  8723 ;; This function calls:
  8724 ;;		Nothing
  8725 ;; This function is called by:
  8726 ;;		_main
  8727 ;; This function uses a non-reentrant model
  8728 ;;
  8729                           
  8730                           	psect	text36
  8731  002442                     __ptext36:
  8732                           	callstack 0
  8733  002442                     _InitializeHardware:
  8734                           	callstack 29
  8735                           
  8736                           ; BSR set to: 0
  8737                           ;MiscFunctions.c: 46: GIE = 0;
  8738                           
  8739                           ; BSR set to: 0
  8740                           
  8741                           ;incstack = 0
  8742  002442  9EF2               	bcf	4082,7,c	;volatile
  8743                           
  8744                           ;MiscFunctions.c: 49: ANSELA = 0b00000000;
  8745  002444  0E00               	movlw	0
  8746  002446  010F               	movlb	15	; () banked
  8747  002448  6F38               	movwf	56,b	;volatile
  8748                           
  8749                           ;MiscFunctions.c: 50: ANSELB = 0b00010000;
  8750  00244A  0E10               	movlw	16
  8751  00244C  6F39               	movwf	57,b	;volatile
  8752                           
  8753                           ;MiscFunctions.c: 51: ANSELC = 0b00000000;
  8754  00244E  0E00               	movlw	0
  8755  002450  6F3A               	movwf	58,b	;volatile
  8756                           
  8757                           ;MiscFunctions.c: 52: ANSELD = 0b00000000;
  8758  002452  0E00               	movlw	0
  8759  002454  6F3B               	movwf	59,b	;volatile
  8760                           
  8761                           ;MiscFunctions.c: 53: ANSELE = 0b00000000;
  8762  002456  0E00               	movlw	0
  8763  002458  6F3C               	movwf	60,b	;volatile
  8764                           
  8765                           ;MiscFunctions.c: 55: TRISA = 0b00111111;
  8766  00245A  0E3F               	movlw	63
  8767  00245C  6E92               	movwf	146,c	;volatile
  8768                           
  8769                           ; BSR set to: 15
  8770                           ;MiscFunctions.c: 56: TRISB = 0b11111111;
  8771  00245E  6893               	setf	147,c	;volatile
  8772                           
  8773                           ;MiscFunctions.c: 57: TRISC = 0b10111011;
  8774  002460  0EBB               	movlw	187
  8775  002462  6E94               	movwf	148,c	;volatile
  8776                           
  8777                           ; BSR set to: 15
  8778                           ;MiscFunctions.c: 58: TRISD = 0b11111111;
  8779  002464  6895               	setf	149,c	;volatile
  8780                           
  8781                           ; BSR set to: 15
  8782                           ;MiscFunctions.c: 59: TRISE = 0b11111111;
  8783  002466  6896               	setf	150,c	;volatile
  8784                           
  8785                           ;MiscFunctions.c: 62: BAUDCON1 = 0x00;
  8786  002468  0E00               	movlw	0
  8787  00246A  6EB8               	movwf	184,c	;volatile
  8788                           
  8789                           ;MiscFunctions.c: 63: RCSTA1 = 0x00;
  8790  00246C  0E00               	movlw	0
  8791  00246E  6EAB               	movwf	171,c	;volatile
  8792                           
  8793                           ;MiscFunctions.c: 64: TXSTA1 = 0x00;
  8794  002470  0E00               	movlw	0
  8795  002472  6EAC               	movwf	172,c	;volatile
  8796                           
  8797                           ; BSR set to: 15
  8798                           ;MiscFunctions.c: 65: BAUDCON1bits.BRG16 = 0;
  8799  002474  96B8               	bcf	184,3,c	;volatile
  8800                           
  8801                           ; BSR set to: 15
  8802                           ;MiscFunctions.c: 66: BAUDCON1bits.DTRXP = 0;
  8803  002476  9AB8               	bcf	184,5,c	;volatile
  8804                           
  8805                           ; BSR set to: 15
  8806                           ;MiscFunctions.c: 67: TXSTA1bits.BRGH = 1;
  8807  002478  84AC               	bsf	172,2,c	;volatile
  8808                           
  8809                           ;MiscFunctions.c: 68: SPBRG1 = 207;
  8810  00247A  0ECF               	movlw	207
  8811  00247C  6EAF               	movwf	175,c	;volatile
  8812                           
  8813                           ; BSR set to: 15
  8814                           ;MiscFunctions.c: 69: TXSTA1bits.SYNC = 0;
  8815  00247E  98AC               	bcf	172,4,c	;volatile
  8816                           
  8817                           ; BSR set to: 15
  8818                           ;MiscFunctions.c: 70: RCSTA1bits.SPEN = 1;
  8819  002480  8EAB               	bsf	171,7,c	;volatile
  8820                           
  8821                           ; BSR set to: 15
  8822                           ;MiscFunctions.c: 71: RCSTA1bits.CREN = 1;
  8823  002482  88AB               	bsf	171,4,c	;volatile
  8824                           
  8825                           ; BSR set to: 15
  8826                           ;MiscFunctions.c: 72: RCSTA1bits.SREN = 0;
  8827  002484  9AAB               	bcf	171,5,c	;volatile
  8828                           
  8829                           ; BSR set to: 15
  8830                           ;MiscFunctions.c: 73: TXSTA1bits.TX9 = 0;
  8831  002486  9CAC               	bcf	172,6,c	;volatile
  8832                           
  8833                           ; BSR set to: 15
  8834                           ;MiscFunctions.c: 74: RCSTA1bits.RX9 = 0;
  8835  002488  9CAB               	bcf	171,6,c	;volatile
  8836                           
  8837                           ; BSR set to: 15
  8838                           ;MiscFunctions.c: 75: TXSTA1bits.TXEN = 1;
  8839  00248A  8AAC               	bsf	172,5,c	;volatile
  8840                           
  8841                           ; BSR set to: 15
  8842  00248C  50AE               	movf	174,w,c	;volatile
  8843                           
  8844                           ; BSR set to: 15
  8845                           ;MiscFunctions.c: 101: T2CKPS0 = 1;
  8846  00248E  80BA               	bsf	4026,0,c	;volatile
  8847                           
  8848                           ; BSR set to: 15
  8849                           ;MiscFunctions.c: 102: T2CKPS1 = 1;
  8850  002490  82BA               	bsf	4026,1,c	;volatile
  8851                           
  8852                           ; BSR set to: 15
  8853                           ;MiscFunctions.c: 103: T2OUTPS0 = 0;
  8854  002492  96BA               	bcf	4026,3,c	;volatile
  8855                           
  8856                           ; BSR set to: 15
  8857                           ;MiscFunctions.c: 104: T2OUTPS1 = 0;
  8858  002494  98BA               	bcf	4026,4,c	;volatile
  8859                           
  8860                           ; BSR set to: 15
  8861                           ;MiscFunctions.c: 105: T2OUTPS2 = 0;
  8862  002496  9ABA               	bcf	4026,5,c	;volatile
  8863                           
  8864                           ; BSR set to: 15
  8865                           ;MiscFunctions.c: 106: T2OUTPS3 = 0;
  8866  002498  9CBA               	bcf	4026,6,c	;volatile
  8867                           
  8868                           ;MiscFunctions.c: 107: PR2 = 99;
  8869  00249A  0E63               	movlw	99
  8870  00249C  6EBB               	movwf	187,c	;volatile
  8871                           
  8872                           ; BSR set to: 15
  8873                           ;MiscFunctions.c: 108: TMR2IF = 0;
  8874  00249E  929E               	bcf	3998,1,c	;volatile
  8875                           
  8876                           ; BSR set to: 15
  8877                           ;MiscFunctions.c: 109: TMR2ON = 1;
  8878  0024A0  84BA               	bsf	4026,2,c	;volatile
  8879                           
  8880                           ;MiscFunctions.c: 113: INTCON = 0x00;
  8881  0024A2  0E00               	movlw	0
  8882  0024A4  6EF2               	movwf	242,c	;volatile
  8883                           
  8884                           ;MiscFunctions.c: 114: PIE1 = 0x00;
  8885  0024A6  0E00               	movlw	0
  8886  0024A8  6E9D               	movwf	157,c	;volatile
  8887                           
  8888                           ;MiscFunctions.c: 115: PIE2 = 0x00;
  8889  0024AA  0E00               	movlw	0
  8890  0024AC  6EA0               	movwf	160,c	;volatile
  8891                           
  8892                           ;MiscFunctions.c: 116: PIE3 = 0x00;
  8893  0024AE  0E00               	movlw	0
  8894  0024B0  6EA3               	movwf	163,c	;volatile
  8895                           
  8896                           ;MiscFunctions.c: 117: PIE4 = 0x00;
  8897  0024B2  0E00               	movlw	0
  8898  0024B4  6E7A               	movwf	122,c	;volatile
  8899                           
  8900                           ;MiscFunctions.c: 118: PIE5 = 0x00;
  8901  0024B6  0E00               	movlw	0
  8902  0024B8  6E7D               	movwf	125,c	;volatile
  8903                           
  8904                           ; BSR set to: 15
  8905                           ;MiscFunctions.c: 120: INTCONbits.PEIE = 1;
  8906  0024BA  8CF2               	bsf	242,6,c	;volatile
  8907                           
  8908                           ; BSR set to: 15
  8909                           ;MiscFunctions.c: 121: PIE1bits.RC1IE = 1;
  8910  0024BC  8A9D               	bsf	157,5,c	;volatile
  8911                           
  8912                           ; BSR set to: 15
  8913                           ;MiscFunctions.c: 122: PIR1bits.RC1IF = 0;
  8914  0024BE  9A9E               	bcf	158,5,c	;volatile
  8915                           
  8916                           ; BSR set to: 15
  8917                           ;MiscFunctions.c: 124: TMR1IE = 0;
  8918  0024C0  909D               	bcf	3997,0,c	;volatile
  8919                           
  8920                           ; BSR set to: 15
  8921                           ;MiscFunctions.c: 125: TMR2IE = 1;
  8922  0024C2  829D               	bsf	3997,1,c	;volatile
  8923                           
  8924                           ; BSR set to: 15
  8925                           ;MiscFunctions.c: 126: TMR3IE = 0;
  8926  0024C4  92A0               	bcf	4000,1,c	;volatile
  8927                           
  8928                           ; BSR set to: 15
  8929                           ;MiscFunctions.c: 127: TMR4IE = 0;
  8930  0024C6  907D               	bcf	3965,0,c	;volatile
  8931                           
  8932                           ; BSR set to: 15
  8933                           ;MiscFunctions.c: 128: TMR0IE = 0;
  8934  0024C8  9AF2               	bcf	4082,5,c	;volatile
  8935                           
  8936                           ; BSR set to: 15
  8937                           ;MiscFunctions.c: 129: PIE3bits.SSP2IE = 1;
  8938  0024CA  8EA3               	bsf	163,7,c	;volatile
  8939                           
  8940                           ; BSR set to: 15
  8941                           ;MiscFunctions.c: 130: INTCONbits.GIE = 1;
  8942  0024CC  8EF2               	bsf	242,7,c	;volatile
  8943                           
  8944                           ; BSR set to: 15
  8945  0024CE  0012               	return		;funcret
  8946  0024D0                     __end_of_InitializeHardware:
  8947                           	callstack 0
  8948                           
  8949 ;; *************** function _isr *****************
  8950 ;; Defined at:
  8951 ;;		line 9 in file "../Interrupt.c"
  8952 ;; Parameters:    Size  Location     Type
  8953 ;;		None
  8954 ;; Auto vars:     Size  Location     Type
  8955 ;;  ch              1    2[COMRAM] unsigned char 
  8956 ;; Return value:  Size  Location     Type
  8957 ;;                  1    wreg      void 
  8958 ;; Registers used:
  8959 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8960 ;; Tracked objects:
  8961 ;;		On entry : 0/0
  8962 ;;		On exit  : 0/0
  8963 ;;		Unchanged: 0/0
  8964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8965 ;;      Params:         0       0       0       0
  8966 ;;      Locals:         1       0       0       0
  8967 ;;      Temps:          2       0       0       0
  8968 ;;      Totals:         3       0       0       0
  8969 ;;Total ram usage:        3 bytes
  8970 ;; Hardware stack levels used: 1
  8971 ;; This function calls:
  8972 ;;		Nothing
  8973 ;; This function is called by:
  8974 ;;		Interrupt level 2
  8975 ;; This function uses a non-reentrant model
  8976 ;;
  8977                           
  8978                           	psect	intcode
  8979  000008                     __pintcode:
  8980                           	callstack 0
  8981  000008                     _isr:
  8982                           	callstack 25
  8983                           
  8984                           ; BSR set to: 15
  8985                           ;incstack = 0
  8986  000008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8987  00000A  CFD9 F001          	movff	fsr2l,??_isr
  8988  00000E  CFDA F002          	movff	fsr2h,??_isr+1
  8989                           
  8990                           ;Interrupt.c: 11: unsigned char ch;;Interrupt.c: 12: static int RxIndex = 0;;Interrupt.c
      +                          : 13: static short Timer2Counter = 0;;Interrupt.c: 16: while (RCSTA1bits.FERR)
  8991  000012  D005               	goto	i2l4485
  8992  000014                     i2l232:
  8993  000014  50AE               	movf	174,w,c	;volatile
  8994                           
  8995                           ;Interrupt.c: 19: RxIndex = 0;
  8996  000016  0E00               	movlw	0
  8997  000018  6E59               	movwf	(isr@RxIndex+1)^0,c
  8998  00001A  0E00               	movlw	0
  8999  00001C  6E58               	movwf	isr@RxIndex^0,c
  9000  00001E                     i2l4485:
  9001  00001E  B4AB               	btfsc	171,2,c	;volatile
  9002  000020  D7F9               	goto	i2l232
  9003                           
  9004                           ;Interrupt.c: 20: };Interrupt.c: 22: if (RCSTA1bits.OERR)
  9005  000022  A2AB               	btfss	171,1,c	;volatile
  9006  000024  D006               	goto	i2l4491
  9007                           
  9008                           ;Interrupt.c: 23: {;Interrupt.c: 24: RCSTA1bits.CREN = 0;
  9009  000026  98AB               	bcf	171,4,c	;volatile
  9010                           
  9011                           ;Interrupt.c: 25: RCSTA1bits.CREN = 1;
  9012  000028  88AB               	bsf	171,4,c	;volatile
  9013                           
  9014                           ;Interrupt.c: 26: RxIndex = 0;
  9015  00002A  0E00               	movlw	0
  9016  00002C  6E59               	movwf	(isr@RxIndex+1)^0,c
  9017  00002E  0E00               	movlw	0
  9018  000030  6E58               	movwf	isr@RxIndex^0,c
  9019  000032                     i2l4491:
  9020                           
  9021                           ;Interrupt.c: 27: };Interrupt.c: 29: if (PIR1bits.RC1IF)
  9022  000032  AA9E               	btfss	158,5,c	;volatile
  9023  000034  D02A               	goto	i2l236
  9024                           
  9025                           ;Interrupt.c: 30: {;Interrupt.c: 31: PIR1bits.RC1IF = 0;
  9026  000036  9A9E               	bcf	158,5,c	;volatile
  9027                           
  9028                           ;Interrupt.c: 32: ch = RCREG1;
  9029  000038  CFAE F003          	movff	4014,isr@ch	;volatile
  9030                           
  9031                           ;Interrupt.c: 33: if (ch != 0 && ch != '\n')
  9032  00003C  5003               	movf	isr@ch^0,w,c
  9033  00003E  B4D8               	btfsc	status,2,c
  9034  000040  D024               	goto	i2l236
  9035  000042  0E0A               	movlw	10
  9036  000044  1803               	xorwf	isr@ch^0,w,c
  9037  000046  B4D8               	btfsc	status,2,c
  9038  000048  D020               	goto	i2l236
  9039                           
  9040                           ;Interrupt.c: 34: {;Interrupt.c: 35: if (RxIndex < 32)
  9041  00004A  BE59               	btfsc	(isr@RxIndex+1)^0,7,c
  9042  00004C  D006               	goto	i2u501_40
  9043  00004E  5059               	movf	(isr@RxIndex+1)^0,w,c
  9044  000050  E118               	bnz	i2l4511
  9045  000052  0E20               	movlw	32
  9046  000054  5C58               	subwf	isr@RxIndex^0,w,c
  9047  000056  B0D8               	btfsc	status,0,c
  9048  000058  D014               	goto	i2l4511
  9049  00005A                     i2u501_40:
  9050                           
  9051                           ;Interrupt.c: 36: {;Interrupt.c: 37: RxBuffer[RxIndex++] = ch;
  9052  00005A  5058               	movf	isr@RxIndex^0,w,c
  9053  00005C  0FD9               	addlw	low _RxBuffer
  9054  00005E  6ED9               	movwf	fsr2l,c
  9055  000060  6ADA               	clrf	fsr2h,c
  9056  000062  C003  FFDF         	movff	isr@ch,indf2
  9057  000066  4A58               	infsnz	isr@RxIndex^0,f,c
  9058  000068  2A59               	incf	(isr@RxIndex+1)^0,f,c
  9059                           
  9060                           ;Interrupt.c: 38: if (ch == '\r')
  9061  00006A  0E0D               	movlw	13
  9062  00006C  1803               	xorwf	isr@ch^0,w,c
  9063  00006E  A4D8               	btfss	status,2,c
  9064  000070  D00C               	goto	i2l236
  9065                           
  9066                           ;Interrupt.c: 39: {;Interrupt.c: 40: RxBuffer[RxIndex] = '\0';
  9067  000072  5058               	movf	isr@RxIndex^0,w,c
  9068  000074  0FD9               	addlw	low _RxBuffer
  9069  000076  6ED9               	movwf	fsr2l,c
  9070  000078  6ADA               	clrf	fsr2h,c
  9071  00007A  0E00               	movlw	0
  9072  00007C  6EDF               	movwf	indf2,c
  9073                           
  9074                           ;Interrupt.c: 41: RxBufferFull = 1;
  9075  00007E  0E01               	movlw	1
  9076  000080  6E5A               	movwf	_RxBufferFull^0,c
  9077  000082                     i2l4511:
  9078                           
  9079                           ;Interrupt.c: 42: RxIndex = 0;
  9080  000082  0E00               	movlw	0
  9081  000084  6E59               	movwf	(isr@RxIndex+1)^0,c
  9082  000086  0E00               	movlw	0
  9083  000088  6E58               	movwf	isr@RxIndex^0,c
  9084  00008A                     i2l236:
  9085                           
  9086                           ;Interrupt.c: 46: };Interrupt.c: 47: };Interrupt.c: 50: if (TMR2IF)
  9087  00008A  A29E               	btfss	3998,1,c	;volatile
  9088  00008C  D015               	goto	i2l244
  9089                           
  9090                           ;Interrupt.c: 51: {;Interrupt.c: 52: TMR2IF = 0;
  9091  00008E  929E               	bcf	3998,1,c	;volatile
  9092                           
  9093                           ;Interrupt.c: 53: Timer2Counter++;
  9094  000090  0100               	movlb	0	; () banked
  9095  000092  4BFC               	infsnz	isr@Timer2Counter& (0+255),f,b
  9096  000094  2BFD               	incf	(isr@Timer2Counter+1)& (0+255),f,b
  9097                           
  9098                           ; BSR set to: 0
  9099                           ;Interrupt.c: 54: if (Timer2Counter >= 10000)
  9100  000096  BFFD               	btfsc	(isr@Timer2Counter+1)& (0+255),7,b
  9101  000098  D00F               	goto	i2l244
  9102  00009A  0E10               	movlw	16
  9103  00009C  5DFC               	subwf	isr@Timer2Counter& (0+255),w,b
  9104  00009E  0E27               	movlw	39
  9105  0000A0  59FD               	subwfb	(isr@Timer2Counter+1)& (0+255),w,b
  9106  0000A2  A0D8               	btfss	status,0,c
  9107  0000A4  D009               	goto	i2l244
  9108                           
  9109                           ; BSR set to: 0
  9110                           ;Interrupt.c: 55: {;Interrupt.c: 56: Timer2Counter = 0;
  9111  0000A6  0E00               	movlw	0
  9112  0000A8  6FFD               	movwf	(isr@Timer2Counter+1)& (0+255),b
  9113  0000AA  0E00               	movlw	0
  9114  0000AC  6FFC               	movwf	isr@Timer2Counter& (0+255),b
  9115                           
  9116                           ; BSR set to: 0
  9117                           ;Interrupt.c: 57: if (LATDbits.LATD2) LATDbits.LATD2 = 0;
  9118  0000AE  A48C               	btfss	140,2,c	;volatile
  9119  0000B0  D002               	goto	i2l242
  9120                           
  9121                           ; BSR set to: 0
  9122  0000B2  948C               	bcf	140,2,c	;volatile
  9123  0000B4  D001               	goto	i2l244
  9124  0000B6                     i2l242:
  9125                           
  9126                           ; BSR set to: 0
  9127                           ;Interrupt.c: 58: else LATDbits.LATD2 = 1;
  9128  0000B6  848C               	bsf	140,2,c	;volatile
  9129  0000B8                     i2l244:
  9130  0000B8  C002  FFDA         	movff	??_isr+1,fsr2h
  9131  0000BC  C001  FFD9         	movff	??_isr,fsr2l
  9132  0000C0  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9133  0000C2  0011               	retfie		f
  9134  0000C4                     __end_of_isr:
  9135                           	callstack 0
  9136                           
  9137                           	psect	rparam
  9138  0000                     
  9139                           	psect	temp
  9140  00005B                     btemp:
  9141                           	callstack 0
  9142  00005B                     	ds	1
  9143  0000                     int$flags	set	btemp
  9144  0000                     wtemp8	set	btemp+1
  9145  0000                     ttemp5	set	btemp+1
  9146  0000                     ttemp6	set	btemp+4
  9147  0000                     ttemp7	set	btemp+8
  9148                           
  9149                           	psect	idloc
  9150                           
  9151                           ;Config register IDLOC0 @ 0x200000
  9152                           ;	unspecified, using default values
  9153  200000                     	org	2097152
  9154  200000  FF                 	db	255
  9155                           
  9156                           ;Config register IDLOC1 @ 0x200001
  9157                           ;	unspecified, using default values
  9158  200001                     	org	2097153
  9159  200001  FF                 	db	255
  9160                           
  9161                           ;Config register IDLOC2 @ 0x200002
  9162                           ;	unspecified, using default values
  9163  200002                     	org	2097154
  9164  200002  FF                 	db	255
  9165                           
  9166                           ;Config register IDLOC3 @ 0x200003
  9167                           ;	unspecified, using default values
  9168  200003                     	org	2097155
  9169  200003  FF                 	db	255
  9170                           
  9171                           ;Config register IDLOC4 @ 0x200004
  9172                           ;	unspecified, using default values
  9173  200004                     	org	2097156
  9174  200004  FF                 	db	255
  9175                           
  9176                           ;Config register IDLOC5 @ 0x200005
  9177                           ;	unspecified, using default values
  9178  200005                     	org	2097157
  9179  200005  FF                 	db	255
  9180                           
  9181                           ;Config register IDLOC6 @ 0x200006
  9182                           ;	unspecified, using default values
  9183  200006                     	org	2097158
  9184  200006  FF                 	db	255
  9185                           
  9186                           ;Config register IDLOC7 @ 0x200007
  9187                           ;	unspecified, using default values
  9188  200007                     	org	2097159
  9189  200007  FF                 	db	255
  9190                           
  9191                           	psect	config
  9192                           
  9193                           ; Padding undefined space
  9194  300000                     	org	3145728
  9195  300000  FF                 	db	255
  9196                           
  9197                           ;Config register CONFIG1H @ 0x300001
  9198                           ;	Oscillator Selection bits
  9199                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
  9200                           ;	4X PLL Enable
  9201                           ;	PLLCFG = ON, Oscillator multiplied by 4
  9202                           ;	Primary clock enable bit
  9203                           ;	PRICLKEN = ON, Primary clock is always enabled
  9204                           ;	Fail-Safe Clock Monitor Enable bit
  9205                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9206                           ;	Internal/External Oscillator Switchover bit
  9207                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9208  300001                     	org	3145729
  9209  300001  33                 	db	51
  9210                           
  9211                           ;Config register CONFIG2L @ 0x300002
  9212                           ;	Power-up Timer Enable bit
  9213                           ;	PWRTEN = OFF, Power up timer disabled
  9214                           ;	Brown-out Reset Enable bits
  9215                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  9216                           ;	Brown Out Reset Voltage bits
  9217                           ;	BORV = 190, VBOR set to 1.90 V nominal
  9218  300002                     	org	3145730
  9219  300002  1F                 	db	31
  9220                           
  9221                           ;Config register CONFIG2H @ 0x300003
  9222                           ;	Watchdog Timer Enable bits
  9223                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  9224                           ;	Watchdog Timer Postscale Select bits
  9225                           ;	WDTPS = 32768, 1:32768
  9226  300003                     	org	3145731
  9227  300003  3C                 	db	60
  9228                           
  9229                           ; Padding undefined space
  9230  300004                     	org	3145732
  9231  300004  FF                 	db	255
  9232                           
  9233                           ;Config register CONFIG3H @ 0x300005
  9234                           ;	CCP2 MUX bit
  9235                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  9236                           ;	PORTB A/D Enable bit
  9237                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  9238                           ;	P3A/CCP3 Mux bit
  9239                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  9240                           ;	HFINTOSC Fast Start-up
  9241                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  9242                           ;	Timer3 Clock input mux bit
  9243                           ;	T3CMX = PORTC0, T3CKI is on RC0
  9244                           ;	ECCP2 B output mux bit
  9245                           ;	P2BMX = 0x1, unprogrammed default
  9246                           ;	MCLR Pin Enable bit
  9247                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  9248  300005                     	org	3145733
  9249  300005  BD                 	db	189
  9250                           
  9251                           ;Config register CONFIG4L @ 0x300006
  9252                           ;	Stack Full/Underflow Reset Enable bit
  9253                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9254                           ;	Single-Supply ICSP Enable bit
  9255                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  9256                           ;	Extended Instruction Set Enable bit
  9257                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9258                           ;	Background Debug
  9259                           ;	DEBUG = 0x1, unprogrammed default
  9260  300006                     	org	3145734
  9261  300006  85                 	db	133
  9262                           
  9263                           ; Padding undefined space
  9264  300007                     	org	3145735
  9265  300007  FF                 	db	255
  9266                           
  9267                           ;Config register CONFIG5L @ 0x300008
  9268                           ;	Code Protection Block 0
  9269                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  9270                           ;	Code Protection Block 1
  9271                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  9272  300008                     	org	3145736
  9273  300008  03                 	db	3
  9274                           
  9275                           ;Config register CONFIG5H @ 0x300009
  9276                           ;	Boot Block Code Protection bit
  9277                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  9278                           ;	Data EEPROM Code Protection bit
  9279                           ;	CPD = OFF, Data EEPROM not code-protected
  9280  300009                     	org	3145737
  9281  300009  C0                 	db	192
  9282                           
  9283                           ;Config register CONFIG6L @ 0x30000A
  9284                           ;	Write Protection Block 0
  9285                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  9286                           ;	Write Protection Block 1
  9287                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  9288  30000A                     	org	3145738
  9289  30000A  03                 	db	3
  9290                           
  9291                           ;Config register CONFIG6H @ 0x30000B
  9292                           ;	Configuration Register Write Protection bit
  9293                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  9294                           ;	Boot Block Write Protection bit
  9295                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  9296                           ;	Data EEPROM Write Protection bit
  9297                           ;	WRTD = OFF, Data EEPROM not write-protected
  9298  30000B                     	org	3145739
  9299  30000B  E0                 	db	224
  9300                           
  9301                           ;Config register CONFIG7L @ 0x30000C
  9302                           ;	Table Read Protection Block 0
  9303                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  9304                           ;	Table Read Protection Block 1
  9305                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  9306  30000C                     	org	3145740
  9307  30000C  03                 	db	3
  9308                           
  9309                           ;Config register CONFIG7H @ 0x30000D
  9310                           ;	Boot Block Table Read Protection bit
  9311                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  9312  30000D                     	org	3145741
  9313  30000D  40                 	db	64
  9314                           tosu	equ	0xFFF
  9315                           tosh	equ	0xFFE
  9316                           tosl	equ	0xFFD
  9317                           stkptr	equ	0xFFC
  9318                           pclatu	equ	0xFFB
  9319                           pclath	equ	0xFFA
  9320                           pcl	equ	0xFF9
  9321                           tblptru	equ	0xFF8
  9322                           tblptrh	equ	0xFF7
  9323                           tblptrl	equ	0xFF6
  9324                           tablat	equ	0xFF5
  9325                           prodh	equ	0xFF4
  9326                           prodl	equ	0xFF3
  9327                           indf0	equ	0xFEF
  9328                           postinc0	equ	0xFEE
  9329                           postdec0	equ	0xFED
  9330                           preinc0	equ	0xFEC
  9331                           plusw0	equ	0xFEB
  9332                           fsr0h	equ	0xFEA
  9333                           fsr0l	equ	0xFE9
  9334                           wreg	equ	0xFE8
  9335                           indf1	equ	0xFE7
  9336                           postinc1	equ	0xFE6
  9337                           postdec1	equ	0xFE5
  9338                           preinc1	equ	0xFE4
  9339                           plusw1	equ	0xFE3
  9340                           fsr1h	equ	0xFE2
  9341                           fsr1l	equ	0xFE1
  9342                           bsr	equ	0xFE0
  9343                           indf2	equ	0xFDF
  9344                           postinc2	equ	0xFDE
  9345                           postdec2	equ	0xFDD
  9346                           preinc2	equ	0xFDC
  9347                           plusw2	equ	0xFDB
  9348                           fsr2h	equ	0xFDA
  9349                           fsr2l	equ	0xFD9
  9350                           status	equ	0xFD8

Data Sizes:
    Strings     301
    Constant    144
    Data        140
    BSS         394
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     87      90
    BANK0           160    121     160
    BANK1           256      2     238
    BANK2           256      0     256

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 32
		 -> main@OutBytes(BANK0[32]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 32
		 -> NULL(NULL[0]), main@OutBytes(BANK0[32]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), STR_9(CODE[7]), ?_printf(BANK0[2]), NULL(NULL[0]), 
		 -> main@InBytes(BANK0[32]), main@OutBytes(BANK0[32]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 79
		 -> STR_8(CODE[79]), STR_7(CODE[79]), STR_6(CODE[10]), STR_5(CODE[22]), 
		 -> STR_4(CODE[23]), STR_3(CODE[17]), STR_2(CODE[44]), STR_1(CODE[20]), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 32
		 -> NULL(NULL[0]), main@OutBytes(BANK0[32]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 5
		 -> sprintf@pb(BANK0[4]), printf@pb(BANK0[4]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 79
		 -> STR_8(CODE[79]), STR_7(CODE[79]), STR_6(CODE[10]), STR_5(CODE[22]), 
		 -> STR_4(CODE[23]), STR_2(CODE[44]), STR_1(CODE[20]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    S1936__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    S1936__prbuf$ptr	PTR unsigned char  size(2) Largest target is 32
		 -> NULL(NULL[0]), main@OutBytes(BANK0[32]), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 32
		 -> NULL(NULL[0]), main@OutBytes(BANK0[32]), 

    i2c_SlaveRead@ptrDataIn	PTR unsigned char  size(1) Largest target is 32
		 -> main@InBytes(BANK0[32]), 

    i2c_SlaveWrite@ptrDataOut	PTR unsigned char  size(1) Largest target is 32
		 -> main@OutBytes(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_i2c_SlaveWrite
    _sprintf->__doprnt
    _printf->__doprnt
    __doprnt->___flsub
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lbdiv->___lbmod
    ___flmul->___awdiv
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _i2c_SlaveRead->_i2c_SendControlByte
    _i2c_SendControlByte->_i2c_SendByte

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_i2c_SlaveWrite
    _sprintf->__doprnt
    _i2c_SlaveWrite->_printf
    _printf->__doprnt

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                85    85      0  148751
                                             50 BANK0     71    71      0
                                              0 BANK1      2     2      0
                            _DelayMs
                 _InitializeHardware
                _InitializeI2Cmaster
                      _i2c_SlaveRead
                     _i2c_SlaveWrite
                             _printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             12     5      7   48360
                                             33 BANK0     12     5      7
                            __doprnt
 ---------------------------------------------------------------------------------
 (1) _i2c_SlaveWrite                                       6     4      2   49797
                                             85 COMRAM     2     0      2
                                             46 BANK0      4     4      0
                            _DelayMs
                 _i2c_GetAcknowledge
                       _i2c_SendByte
                _i2c_SendControlByte
                          _i2c_Start
                           _i2c_Stop
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              13     5      8   48694
                                             33 BANK0     13     5      8
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             38    34      4   47695
                                             81 COMRAM     4     0      4
                                              0 BANK0     33    33      0
                   Absolute function *
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch *
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                                9     5      4    9543
                                             42 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1513
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1705
                                              9 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      31
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              15    11      4    7059
                                             42 COMRAM    15    11      4
                            ___flmul
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1     502
                                              3 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     511
                                              7 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    5696
                                             17 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     634
                                              3 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     634
                                              3 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     916
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     772
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     952
                                             16 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     781
                                              3 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     607
                                             51 COMRAM    10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4807
                                             73 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    4142
                                             57 COMRAM    16     8      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     155
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     946
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8    1190
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DelayMs                                              6     4      2     285
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _i2c_SlaveRead                                        5     3      2     846
                                              7 COMRAM     5     3      2
                 _i2c_GetAcknowledge
                       _i2c_ReadByte
                _i2c_SendAcknowledge
                _i2c_SendControlByte
                          _i2c_Start
                           _i2c_Stop
 ---------------------------------------------------------------------------------
 (2) _i2c_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_SendControlByte                                  3     2      1     307
                                              4 COMRAM     3     2      1
                       _i2c_SendByte
 ---------------------------------------------------------------------------------
 (3) _i2c_SendByte                                         1     1      0      31
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _i2c_SendAcknowledge                                  1     1      0      31
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _i2c_ReadByte                                         1     1      0      34
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _i2c_GetAcknowledge                                   1     1      0      34
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitializeI2Cmaster                                  0     0      0       0
                           _i2c_Stop
 ---------------------------------------------------------------------------------
 (2) _i2c_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeHardware                                   1     1      0       6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayMs
   _InitializeHardware
   _InitializeI2Cmaster
     _i2c_Stop
   _i2c_SlaveRead
     _i2c_GetAcknowledge
     _i2c_ReadByte
     _i2c_SendAcknowledge
     _i2c_SendControlByte
       _i2c_SendByte
     _i2c_Start
     _i2c_Stop
   _i2c_SlaveWrite
     _DelayMs
     _i2c_GetAcknowledge
     _i2c_SendByte
     _i2c_SendControlByte
     _i2c_Start
     _i2c_Stop
     _printf
       __doprnt
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
               ___awmod (ARG)
               ___lbdiv (ARG)
                 ___lbmod (ARG)
               ___lbmod (ARG)
             ___lbdiv
             ___lbmod
         ___fleq *
         ___flge *
         ___flmul *
         ___flneg *
         ___flsub *
           ___fladd
           ___xxtofl (ARG)
         ___fltol *
           ___flmul (ARG)
           _scale (ARG)
             ___awdiv
             ___awmod
             ___flmul
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
         _isdigit *
         _putch *
         _scale *
   _printf
   _sprintf
     __doprnt

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      2      EE       7       93.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     79      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     57      5A       1       95.7%
BITBIGSFRllllh      34      0       0      25        0.0%
BITBIGSFRhhl        26      0       0      11        0.0%
BITBIGSFRhhh         D      0       0      10        0.0%
BITBIGSFRlllhhl      A      0       0      22        0.0%
BITBIGSFRlhhlh       8      0       0      15        0.0%
BITBIGSFRllh         6      0       0      20        0.0%
BITBIGSFRlllll       6      0       0      26        0.0%
BITBIGSFRlllhhh      5      0       0      21        0.0%
BITBIGSFRlhhhhl      4      0       0      13        0.0%
BITBIGSFRlllhhl      3      0       0      23        0.0%
BITBIGSFRlllhl       2      0       0      24        0.0%
BITBIGSFRlhllhh      2      0       0      17        0.0%
BITBIGSFRlhllhl      2      0       0      18        0.0%
BITBIGSFRlhllhh      1      0       0      16        0.0%
BITBIGSFRlhhhl       1      0       0      14        0.0%
BITBIGSFRlhlll       1      0       0      19        0.0%
BITBIGSFRhlh         1      0       0      12        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2E8      27        0.0%
DATA                 0      0     2E8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Aug 14 07:33:18 2022

   __end_of_InitializeI2Cmaster 2AA0                     main@InBytes 0092                  ?_i2c_SlaveRead 0008  
  i2c_SendControlByte@direction 0005                              l51 2B20                              l45 2B2A  
                            l63 2AFE                              l81 2AC8                              l82 2ACA  
                            l75 2AEA                              l83 2ACC                    ___awdiv@sign 000F  
           ___wmul@multiplicand 0006                 ?_i2c_SlaveWrite 0056                i2c_SendByte@byte 0004  
                           l445 26DA                             l826 2824                             l679 234C  
                           l951 1AFE                             l935 1A2C                             l960 1B64  
                           l936 1A0A                             l961 1B60                             _GIE 007F97  
                           _PR2 000FBB                             _isr 0008                    ___awmod@sign 0009  
                           tosl 000FFD                             wreg 000FE8                      _TXSTA1bits 000FAC  
                  ___flmul@aexp 001F                    ___flmul@bexp 0020                    ___flmul@sign 001E  
                  ___flmul@temp 0029                    ___flmul@prod 0025                    ___fltol@exp1 003D  
                          l1020 163E                            l1030 182C                            l1061 1E9E  
                          l1037 18B6                            l1029 1830                            l1234 0B82  
                          l1068 1F1C                            l1326 2146                            l1327 216E  
                          l5001 2942                            l5013 295E                            l5005 2948  
                          l5103 2336                            l5031 2A4C                            l5023 2A34  
                          l5017 2966                            l5109 2384                            l5117 29EE  
                          l5053 268C                            l5205 1F42                            l5301 20F2  
                          l5037 2B08                            l5143 23F0                            l5127 23A6  
                          l5055 2698                            l5223 1F8E                            l5207 1F4E  
                          l5161 2430                            l5153 2408                            l5065 26CC  
                          l5401 228C                            l5241 1E12                            l5083 25C4  
                          l5155 2414                            l5147 2400                            l5171 27EE  
                          l5235 1D3E                            l6051 1FD8                            l5341 2198  
                          l5261 13B0                            l5421 010C                            l5087 25E2  
                          l5079 2590                            l5095 22EC                            l4631 1982  
                          l4623 1962                            l5407 2294                            l5255 1310  
                          l5511 0438                            l5431 014E                            l5415 00CC  
                          l5177 2816                            l5169 27E2                            l5193 1ECC  
                          l5409 22A0                            l5337 2188                            l4801 15FE  
                          l5273 14F4                            l5265 13DA                            l5505 03EE  
                          l5425 0136                            l6073 2054                            l5099 2320  
                          l4707 1A88                            l4619 195E                            l5195 1ED2  
                          l5187 1EAE                            l5347 21A0                            l5291 2AB6  
                          l5611 085C                            l5531 04EC                            l5523 049C  
                          l5515 044C                            l5451 0200                            l5427 0148  
                          l6067 204A                            l4725 1B22                            l4741 1B42  
                          l4717 1AEE                            l4661 19BE                            l5197 1EDE  
                          l5357 21E2                            l5349 21AC                            l5701 0C52  
                          l5517 0486                            l5437 017E                            l6085 20B2  
                          l4735 1B38                            l5199 1F04                            l4815 162A  
                          l5279 1594                            l5711 0D32                            l5631 0926  
                          l5623 08CA                            l5607 084A                            l5471 029A  
                          l5463 026E                            l4761 1BAA                            l4673 1A18  
                          l5385 2260                            l5377 2230                            l4825 165C  
                          l4817 162E                            l5801 0FE2                            l5713 0D80  
                          l5633 092E                            l5473 02A4                            l5465 0272  
                          l5457 024A                            l4675 1A1C                            l4595 1916  
                          l4923 25FA                            l5723 0DE8                            l5715 0D8C  
                          l5643 099C                            l5635 0940                            l5627 0900  
                          l5619 08A2                            l5571 06D8                            l5563 066C  
                          l5555 05F2                            l5547 0574                            l5483 0302  
                          l5475 02AA                            l5459 0260                            l4773 1BD8  
                          l5397 227C                            l4909 18D4                            l5813 1050  
                          l5805 1008                            l5741 0E4C                            l5725 0DF0  
                          l5709 0D0A                            l5653 09F4                            l5645 09A4  
                          l5493 0358                            l4775 1BDA                            l4599 191A  
                          l4935 2620                            l4951 2652                            l5807 1012  
                          l5735 0E34                            l5719 0DC2                            l5639 0976  
                          l5575 0706                            l5559 0620                            l5727 0DFA  
                          l5487 0318                            l4769 1BD0                            l4697 1A72  
                          l4689 1A50                            l4873 17F6                            l4937 2628  
                          l4929 260A                            l5825 10C8                            l5817 1076  
                          l5673 0B30                            l5665 0AC6                            l5657 0A0E  
                          l5585 076E                            l5489 0322                            l5497 037E  
                          l5851 29B2                            l4699 1A76                            l4867 17D8  
                          l4955 2660                            l4947 2648                            l4971 2780  
                          l5835 1190                            l5763 0EC6                            l5747 0E50  
                          l5667 0AEE                            l5595 07EA                            l5499 0392  
                          l5931 2756                            ?_isr 0001                            l5853 29B8  
                          l4893 1874                            l4797 15EA                            l5837 11AA  
                          l5829 10E4                            l5781 0F2E                            l5693 0BCA  
                          l5685 0B86                            l5677 0B56                            l5669 0AFA  
                          l5589 07E6                            l5917 2718                            l5925 2734  
                          l4799 15EE                            l4991 27C6                            l4983 27AE  
                          l4975 278E                            l4967 2774                            l5839 11B6  
                          l5791 0F7C                            l5783 0F36                            l5775 0F02  
                          l5759 0EA6                            l5679 0B5E                            l5927 273E  
                          l5849 29A8                            l5857 29C4                            l4897 1892  
                          l4977 2796                            l5777 0F0A                            l5769 0EE0  
                          l5697 0BF0                            l5955 28D4                            l5947 28B4  
                          l4987 27B8                            l5795 0FA2                            l5957 28DA  
                  main@OutBytes 00B2                            STR_1 3FC8                            STR_2 3F6F  
                          STR_3 3FDC                            STR_4 3F9B                            STR_5 3FB2  
                          STR_6 3FED                            STR_7 3ED1                            STR_8 3F20  
                          STR_9 3FF7                    _I2C_READdata 016C                            _PIE1 000F9D  
                          u5200 19F2                            u6000 241A                            _PIE2 000FA0  
                          _PIE3 000FA3                            _PIE4 000F7A                            _PIE5 000F7D  
                          u5230 1A34                            u6030 27F2                            u6110 1F58  
                          u5180 19E0                            u5190 19F0                            u5440 1BB6  
                          u5360 1B46                            u6320 21B2                            u7120 0E86  
                          u6241 20D6                            u6330 21D0                            u6250 20E0  
                          u7018 0BB4                            u5380 1B5A                            u6261 2102  
                          u5630 1882                            u5550 164A                            u7310 1086  
                          u7038 0CF2                            u5640 18A0                            u6600 0424  
                          u6450 01DC                            u7308 103A                            u7068 0DAC  
                          u6700 067E                            u6390 22A6                            u5590 1826  
                          u5750 279A                            u7238 0F66                            u6438 00F6  
                          u7510 2080                            u6607 041A                            u5840 269C  
                          u7280 101A                            u5690 262C                            u7370 11C8  
                          u6730 06D8                            u6490 02D6                            u7380 11E4  
                          u7348 10B2                            u7268 0FCC                            u5950 2394  
                          u5790 294C                            u6590 03E4                            u6558 0342  
                          u5880 25DE                            u5960 23C4                            u7368 117A  
                          u6760 0820                            u6497 02CC                            u6690 0632  
                          u6828 088C                            u6588 03B2                            u5965 23BA  
                          u6597 03DA                            u6589 03E6                            u6918 09DE  
                          u6880 09B2                            u6848 08EA                            u6970 0B6C  
                          u6938 0AAE                            u6980 0B7C                            u6878 0960  
                          u6968 0B1A                  ??_i2c_ReadByte 0004                            _main 1FA0  
                          fsr0h 000FEA                            fsr1h 000FE2                            indf0 000FEF  
                          fsr2h 000FDA                            fsr0l 000FE9                            indf1 000FE7  
                          indf2 000FDF                            fsr1l 000FE1                            fsr2l 000FD9  
                          btemp 005B                            prodh 000FF4                            prodl 000FF3  
                ??_i2c_SendByte 0004                            start 00C4                 __end_of_DelayMs 29D2  
                  ___param_bank 000000      __end_of_InitializeHardware 24D0      i2c_SendControlByte@outByte 0007  
                         ??_isr 0001                    _BAUDCON1bits 000FB8  i2c_SendControlByte@controlByte 0006  
                 ___fltol@sign1 003C                 __end_of___fladd 1BF6                           ?_main 0001  
               __end_of___awdiv 266A                 __end_of___lbdiv 296A                 __end_of___flneg 2A00  
                         _ADRES 000FC3                           _EEADR 000FA9                 __end_of___awmod 27D0  
               __end_of___lbmod 2A54                 __end_of___flmul 18EA                 __end_of___flsub 2930  
               __end_of___fltol 2442                 __end_of___lldiv 26EC                 ___awdiv@divisor 000C  
               __end_of___llmod 2836                           i2l232 0014                           i2l242 00B6  
                         i2l244 00B8                           i2l236 008A                 ___awdiv@counter 000E  
               __end_of__doprnt 11EE                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _TRISE 000F96  
               __end_of_dpowers 3ED1                           _scale 11EE                 __end_of_isdigit 2ABE  
                         _putch 2B06                           main@i 01EC                           isr@ch 0003  
                         pclath 000FFA                           tablat 000FF5                           ttemp5 005C  
                         ttemp6 005F                           ttemp7 0063                           status 000FD8  
                         wtemp8 005C                 __end_of_sprintf 299E                 ___lbdiv@divisor 0008  
               ___lbdiv@counter 000A                 ??_i2c_SlaveRead 000A                 __initialization 2836  
                  __end_of_main 20C6                __end_of_i2c_Stop 2B32                   _I2C_WRITEdata 01CC  
                        ??_main 0058                   __activetblptr 000002                ___llmod@dividend 0011  
                        ?_scale 002B                          _EEDATA 000FA8                          _EECON2 000FA7  
              ___awdiv@dividend 000A                          _ANSELA 000F38                          ?_putch 0001  
                        _ANSELB 000F39                          _ANSELC 000F3A                          _ANSELD 000F3B  
                        _ANSELE 000F3C                          _RC1REG 000FAE                          i2l4511 0082  
                        i2l4491 0032                          i2l4485 001E                          _INTCON 000FF2  
                     ??_DelayMs 0006                          _RCREG1 000FAE                          _RCSTA1 000FAB  
                        _TMR0IE 007F95                          _SPBRG1 000FAF                          _TMR1IE 007CE8  
                        _TMR2IE 007CE9                          _TMR2IF 007CF1                          _TMR3IE 007D01  
                        _TMR4IE 007BE8                          _TMR2ON 007DD2                          _SSP1IF 007CF3  
                 main@errorFlag 00D8                          _TXREG1 000FAD                __end_of___xxtofl 1FA0  
                        _TXSTA1 000FAC                    __doprnt$2306 0064                __end_of__powers_ 3E75  
                        ___flge 22B8                          ___fleq 255C                       ??___fladd 0042  
                        ___wmul 2A54                       ??___awdiv 000E                       ??___lbdiv 0009  
                     ??___flneg 0008                       ??___awmod 0008                       ??___lbmod 0005  
                     ??___flmul 001A                       ??___flsub 0052                       ??___fltol 0038  
                     ??___lldiv 000C                       ??___llmod 0019                       ??__doprnt 0060  
                        _fround 1BF6                          clear_0 285E                          clear_1 2870  
                        clear_2 287C                ___awdiv@quotient 0010                 ___awmod@divisor 0006  
                        isa$std 000001                    __doprnt@flag 0072                 ___awmod@counter 0008  
                        _printf 2A00                    __doprnt@eexp 0070                    __doprnt@fval 0078  
                  __doprnt@prec 007E            __end_of_i2c_ReadByte 2AF8                       ??_isdigit 0004  
          __end_of_i2c_SendByte 2B06                    __mediumconst 3E40                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                       ??_sprintf 0056  
              ___lbdiv@dividend 0009                      ___flge@ff1 0004                      ___flge@ff2 0008  
                  ___xxtofl@arg 000E                    ___xxtofl@exp 000D                    ___xxtofl@val 0004  
                    ___fleq@ff1 0004                      ___fleq@ff2 0008                 ___lbmod@divisor 0004  
                    __accesstop 0060         __end_of__initialization 2888                 ___lbmod@counter 0006  
                    ___flneg@f1 0004                   ___rparam_used 000001                      ___fltol@f1 0034  
          _I2CDataBytesReceived 00FA                ??_i2c_SlaveWrite 0058                  __pcstackCOMRAM 0001  
           _i2c_SendAcknowledge 2ABE                    __pidataBANK1 24D0                   __end_of_scale 15BE  
                 __end_of_putch 2B12               __end_of_i2c_Start 2B28                ___lbdiv@quotient 000B  
       i2c_SlaveWrite@errorFlag 0091                      __div_to_l_ 21C4            ?_i2c_SendAcknowledge 0001  
                    __doprnt@ap 0055                      __doprnt@cp 0068                      __doprnt@pb 0052  
               __div_to_l_@exp1 0011                 __div_to_l_@cntr 0010                         ??_scale 002F  
               __div_to_l_@quot 000C                         ??_putch 0004                isr@Timer2Counter 00FC  
                i2c_SlaveRead@i 000C                      __pbssBANK0 00D9                      __pbssBANK1 018C  
                    __pbssBANK2 0200                       ?_i2c_Stop 0001                   __div_to_l_@f1 0004  
                 __div_to_l_@f2 0008                         ?___flge 0004                         ?___fleq 0004  
                       ?___wmul 0004           i2c_GetAcknowledge@ack 0004                         ?_fround 002B  
                       ?_printf 0081                         _T2CKPS0 007DD0                         _T2CKPS1 007DD1  
                     ?___xxtofl 0004              _InitializeHardware 2442           ??_i2c_SendAcknowledge 0004  
                       _SSP1ADD 000FC8                         _SSP1BUF 000FC9                      ??_i2c_Stop 0004  
                       _DelayMs 299E             ?_InitializeHardware 0001               __end_of__npowers_ 3EA9  
                       __Hparam 0000                      _scale$2305 002F                         __Lparam 0000  
                       ___fladd 18EA                         ___awdiv 25E6                         ___lbdiv 2930  
                       ___flneg 29D2            i2c_SlaveWrite@device 008E                         ___awmod 2760  
                       ___lbmod 2A2A                         ___flmul 15BE                         ___flsub 28EA  
                       ___fltol 2388                         ___lldiv 266A                         ___llmod 27D0  
        i2c_SlaveRead@errorFlag 000B                         __doprnt 00C8            ??_InitializeHardware 0004  
                       __pcinit 2836                         __ramtop 0300                         __ptext0 1FA0  
                       __ptext1 296A                         __ptext2 26EC                         __ptext3 2A00  
                       __ptext4 00C8                         __ptext5 11EE                         __ptext6 2760  
                       __ptext7 25E6                         __ptext8 2B06                         __ptext9 2AA0  
                   ?__div_to_l_ 0004                         _dpowers 3EA9                         _isdigit 2AA0  
           _i2c_SendControlByte 2AD4                      ??___xxtofl 0008                ___awmod@dividend 0004  
        i2c_SlaveRead@ptrDataIn 0009                         _sprintf 296A                   __doprnt@width 007C  
          end_of_initialization 2888       i2c_SendAcknowledge@status 0004                   __Lmediumconst 3E40  
                  _i2c_ReadByte 2AE8            ?_i2c_SendControlByte 0005                 ___lldiv@divisor 0008  
               ___lldiv@counter 0010                    _i2c_SendByte 2AF8                         printf@f 0081  
                       postdec1 000FE5                         postdec2 000FDD           __end_of_i2c_SlaveRead 28EA  
                       postinc0 000FEE                         postinc2 000FDE                         putch@ch 0004  
                __tdiv_to_l_@f1 0004                  __tdiv_to_l_@f2 0008                   ??__tdiv_to_l_ 000C  
                     _PORTBbits 000F81                     ___fladd@grs 0049                ___lbmod@dividend 0005  
                 ___xxtofl@sign 000C                     ___lbmod@rem 0007                     ___flmul@grs 0021  
                    main@length 00D6           ??_i2c_SendControlByte 0006                  __end_of___flge 2388  
                __end_of___fleq 25E6                  __end_of___wmul 2A7A                  __end_of_fround 1E60  
                __end_of_printf 2A2A                    DelayMs@dummy 0008                       _i2c_Start 2B1E  
           start_initialization 2836                      isr@RxIndex 0058             __end_of__tdiv_to_l_ 21C4  
                   __end_of_isr 00C4                   _arrRHCalTable 0200                 ___llmod@divisor 0015  
           _InitializeI2Cmaster 2A7A                 ___llmod@counter 0019                       _OutBuffer 0100  
                      ??___flge 000C                        ??___fleq 000C                        ??___wmul 0008  
                   __doprnt@len 006A                     __doprnt@val 006C                     __pdataBANK1 0100  
                      ??_fround 002F                        ??_printf 0056          i2c_SlaveWrite@dataByte 008F  
          ?_InitializeI2Cmaster 0001                       ___fladd@a 003E                       ___fladd@b 003A  
                    fround@prec 0039                      ?_i2c_Start 0001                       ___flmul@a 0016  
                     ___flmul@b 0012                     __pbssCOMRAM 0058                       ___flsub@a 004E  
                     ___flsub@b 004A        i2c_SlaveWrite@ptrDataOut 0057                   __pcstackBANK0 0060  
                 __pcstackBANK1 01EC                 i2c_SlaveWrite@i 0090                    _isdigit$2043 0005  
                      ?_DelayMs 0004                       __doprnt@c 0080                       __doprnt@f 0053  
        i2c_SlaveWrite@numBytes 0056      __end_of_i2c_GetAcknowledge 2B1E         _arrThermistorResistance 0140  
                     __pintcode 0008                   __pmediumconst 3E40                        ?___fladd 003A  
                      ?___awdiv 000A                        ?___lbdiv 0008                        ?___flneg 0004  
                      ?___awmod 0004                        ?___lbmod 0004                        ?___flmul 0012  
                      ?___flsub 004A                        ?___fltol 0034                        ?___lldiv 0004  
                      ?___llmod 0011                       __npowers_ 3E75                        ?__doprnt 0052  
         ??_InitializeI2Cmaster 0004     __end_of_i2c_SendAcknowledge 2AD4                     __tdiv_to_l_ 20C6  
                  ??__div_to_l_ 000C                        _BAUDCON1 000FB8                        ?_isdigit 0001  
                     _errorFlag 00FE                        ?_sprintf 0081                        _CTMUCONH 000F45  
                      _CTMUCONL 000F44                        _CTMUICON 000F43           i2c_SlaveRead@numBytes 0008  
                      _T2OUTPS0 007DD3                        _T2OUTPS1 007DD4                        _T2OUTPS2 007DD5  
                      _T2OUTPS3 007DD6                  ___wmul@product 0008                        _LATDbits 000F8C  
                      DelayMs@i 0004                        DelayMs@j 0006                    _RxBufferFull 005A  
                      _PIE1bits 000F9D                        _PIE3bits 000FA3                        i2u501_40 005A  
                      _PIR1bits 000F9E                i2c_ReadByte@byte 0004              __end_of__div_to_l_ 22B8  
                      _SSP1CON1 000FC6                        _SSP1CON2 000FC5                        _SSP1CON3 000FCB  
                      _SSP1STAT 000FC7                      _ADCON0bits 000FC2                      _ADCON1bits 000FC1  
                    _ADCON2bits 000FC0               ___wmul@multiplier 0004                     ??_i2c_Start 0004  
                     main@trial 00D2                        _InBuffer 018C                       copy_data0 284A  
                      _i2c_Stop 2B28                      _EECON1bits 000FA6                        _RxBuffer 00D9  
                      __Hrparam 0000                        __Lrparam 0000                     _fround$2303 0035  
                   _fround$2304 0031                        ___xxtofl 1E60                        __ptext10 1BF6  
                      __ptext11 2A2A                        __ptext20 2388                        __ptext12 2930  
                      __ptext21 28EA                        __ptext13 15BE                        __ptext30 2AF8  
                      __ptext22 18EA                        __ptext14 20C6                        __ptext31 2ABE  
                      __ptext23 29D2                        __ptext15 21C4                        __ptext32 2AE8  
                      __ptext24 22B8                        __ptext16 1E60                        __ptext33 2B12  
                      __ptext25 255C                        __ptext17 2A54                        __ptext34 2A7A  
                      __ptext26 299E                        __ptext18 27D0                        __ptext35 2B28  
                      __ptext27 2896                        __ptext19 266A                        __ptext36 2442  
                      __ptext28 2B1E                        __ptext29 2AD4                    _SSP1CON1bits 000FC6  
                  _SSP1CON2bits 000FC5                        __powers_ 3E41     __end_of_i2c_SendControlByte 2AE8  
                      isa$xinst 000000                        int$flags 005B                  __doprnt@tmpval 0074  
             _numberOfSetpoints 00FF                  _i2c_SlaveWrite 26EC                      _INTCONbits 000FF2  
                      isdigit@c 0006                        scale@scl 0033                        intlevel2 0000  
                     sprintf@ap 0088                       sprintf@pb 0089                __tdiv_to_l_@exp1 0014  
              __tdiv_to_l_@cntr 0013                       sprintf@wh 0081                __tdiv_to_l_@quot 000F  
              ___lldiv@dividend 0004             i2c_SlaveRead@device 000A                      _RCSTA1bits 000FAB  
                      printf@ap 0089                        printf@pb 008A                   _i2c_SlaveRead 2896  
        __end_of_i2c_SlaveWrite 2760              _i2c_GetAcknowledge 2B12                    ?__tdiv_to_l_ 0004  
                      sprintf@f 0082                ___lldiv@quotient 000C             ?_i2c_GetAcknowledge 0001  
                 ___fladd@signs 0046                    ___fladd@aexp 0047                    ___fladd@bexp 0048  
                 ?_i2c_ReadByte 0001                   ?_i2c_SendByte 0001            ??_i2c_GetAcknowledge 0004  
